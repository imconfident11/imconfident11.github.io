<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>向 VM 的步步靠近--部分 vm 赛题复现</title>
    <link href="/2025/05/24/vm/"/>
    <url>/2025/05/24/vm/</url>
    
    <content type="html"><![CDATA[<h2 id="GWCTF-2019-babyvm"><a href="#GWCTF-2019-babyvm" class="headerlink" title="[GWCTF 2019]babyvm"></a>[GWCTF 2019]babyvm</h2><h4 id="修结构体"><a href="#修结构体" class="headerlink" title="修结构体"></a>修结构体</h4><p>ida 中查看 main 函数，点进 sub_CD1 里<br><img src="/../images/vm/sub1.png"><br><strong>前4个字段</strong>：写入4个32位整数（DWORD），偏移分别为0, 4, 8, 12,这是在设置寄存器</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">uint32_t</span> eax;    <span class="hljs-comment">// 偏移 0</span><br><span class="hljs-type">uint32_t</span> ebx;    <span class="hljs-comment">// 偏移 4 (初始值为18)</span><br><span class="hljs-type">uint32_t</span> ecx;    <span class="hljs-comment">// 偏移 8</span><br><span class="hljs-type">uint32_t</span> edx;    <span class="hljs-comment">// 偏移 12</span><br></code></pre></td></tr></table></figure><p><strong>后续字段</strong>：从偏移16开始，每16字节写入一个函数指针（QWORD）和一个操作码（BYTE），共8次</p><p>分析第一个条目：函数指针写入偏移16（占8字节），操作码写入偏移24（占1字节），从偏移16到24的总跨度：8字节（函数指针） + 8字节（操作码及填充） &#x3D; 16字节</p><p>注：操作码仅占1字节，但为了对齐，编译器填充了7字节</p><p>后面的条目也是一样</p><p><strong>处理程序条目结构体</strong><br>函数指针（64位）：占用8字节（QWORD）<br>操作码（8位）：占用1字节（BYTE）。<br>填充（7字节）：为保证对齐到16字节边界，需填充7字节<br>由此可以定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">HandlerEntry</span> &#123;</span><br>    <span class="hljs-type">void</span> (*handler)(<span class="hljs-type">void</span> *); <span class="hljs-comment">// 8字节函数指针</span><br>    <span class="hljs-type">int8_t</span> opcode;           <span class="hljs-comment">// 1字节操作码</span><br>    <span class="hljs-type">uint8_t</span> padding[<span class="hljs-number">7</span>];      <span class="hljs-comment">// 7字节填充</span><br>&#125;;<br></code></pre></td></tr></table></figure><p>一共有八个处理条目,所以可以定义结构体 <strong>VMcpu</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">VMcpu</span> &#123;</span><br>    <span class="hljs-type">uint32_t</span> eax;         <span class="hljs-comment">// 偏移 0</span><br>    <span class="hljs-type">uint32_t</span> ebx;         <span class="hljs-comment">// 偏移 4 </span><br>    <span class="hljs-type">uint32_t</span> ecx;         <span class="hljs-comment">// 偏移 8</span><br>    <span class="hljs-type">uint32_t</span> edx;         <span class="hljs-comment">// 偏移 12</span><br>    HandlerEntry handlers[<span class="hljs-number">8</span>];<span class="hljs-comment">// 偏移16，共8个条目</span><br>&#125;;<br></code></pre></td></tr></table></figure><p>在 ida 的 Local Types 里面右键 Add type，定义这两个结构体 <strong>HandlerEntry</strong> 和 <strong>VMcpu</strong> ，<code>Y</code>键修改sub_CD1 的参数 a1 的类型，改成 <strong>VMcpu</strong>*,可以看到修改完之后会好看很多</p><h4 id="提取操作码"><a href="#提取操作码" class="headerlink" title="提取操作码"></a>提取操作码</h4><p><img src="/../images/vm/gw3.png"><br>&amp;unk_202060 处存的是操作码，需要提取出来<br><img src="/../images/vm/gw4.png"></p><h4 id="分析函数对应的功能"><a href="#分析函数对应的功能" class="headerlink" title="分析函数对应的功能"></a>分析函数对应的功能</h4><p>接下看每个操作码对应的函数，把每个函数传入的参数 a1 的类型也修成 VMcpu*，然后分析其功能<br><strong>sub_B5F</strong> -&gt; <strong>mov</strong> 寄存器赋值操作,对于不同的操作码进行不同的 mov<br><img src="/../images/vm/gw5.png"><br><strong>sub_A64</strong> -&gt; <strong>xor</strong> 明显的异或<br><img src="/../images/vm/gw6.png"><br><strong>sub_AC5</strong> -&gt; <strong>cmp strlen</strong> 可以看出这是在判断字符串长度<br><img src="/../images/vm/gw7.png"><br><strong>sub_956</strong> -&gt; <strong>nop</strong> 啥也没做，那就是 nop 了<br><img src="/../images/vm/gw8.png"><br><strong>sub_A08</strong> -&gt; <strong>mul</strong> 乘法操作<br><img src="/../images/vm/gw9.png"><br><strong>sub_8F0</strong> -&gt; <strong>swap</strong> 交换寄存器的值<br><img src="/../images/vm/gw10.png"><br><strong>sub_99C</strong> 这个里面是一个稍微复杂点的运算<br><img src="/../images/vm/gw11.png"></p><h4 id="写脚本获得汇编"><a href="#写脚本获得汇编" class="headerlink" title="写脚本获得汇编"></a>写脚本获得汇编</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs python">opcode=[<br><br>  <span class="hljs-number">0xF5</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <br>  <span class="hljs-number">0x20</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x02</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x23</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <br>  <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <br>  <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <br>  <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <br>  <span class="hljs-number">0x09</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <br>  <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x0C</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x2D</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <br>  <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <br>  <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <br>  <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <br>  <span class="hljs-number">0x13</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0xF1</span>, <br>  <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <br>  <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x02</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <br>  <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <br>  <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <br>  <span class="hljs-number">0x04</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x05</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <br>  <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xF1</span>, <br>  <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x09</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF6</span>, <br>  <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x08</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <br>  <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <br>  <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE7</span>, <br>  <span class="hljs-number">0x13</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x0E</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <br>  <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <br>  <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0xE7</span>, <br>  <span class="hljs-number">0x11</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xF4</span><br>]<br>i=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(opcode)):<br>    <span class="hljs-keyword">if</span>(opcode[i]==<span class="hljs-number">0xF1</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;mov&quot;</span>,end=<span class="hljs-string">&#x27; &#x27;</span>)<br>        <span class="hljs-keyword">if</span>(opcode[i+<span class="hljs-number">1</span>]==<span class="hljs-number">0xE1</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;eax flag[&quot;</span>+<span class="hljs-built_in">str</span>(opcode[i+<span class="hljs-number">2</span>])+<span class="hljs-string">&quot;]&quot;</span>)<br>        <span class="hljs-keyword">elif</span>(opcode[i+<span class="hljs-number">1</span>]==<span class="hljs-number">0xE2</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ebx flag[&quot;</span>+<span class="hljs-built_in">str</span>(opcode[i+<span class="hljs-number">2</span>])+<span class="hljs-string">&quot;]&quot;</span>)<br>        <span class="hljs-keyword">elif</span>(opcode[i+<span class="hljs-number">1</span>]==<span class="hljs-number">0xE3</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ecx flag[&quot;</span>+<span class="hljs-built_in">str</span>(opcode[i+<span class="hljs-number">2</span>])+<span class="hljs-string">&quot;]&quot;</span>)<br>        <span class="hljs-keyword">elif</span>(opcode[i+<span class="hljs-number">1</span>]==<span class="hljs-number">0xE4</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag[&quot;</span>+<span class="hljs-built_in">str</span>(opcode[i+<span class="hljs-number">2</span>])+<span class="hljs-string">&quot;] eax&quot;</span>)<br>        <span class="hljs-keyword">elif</span>(opcode[i+<span class="hljs-number">1</span>]==<span class="hljs-number">0xE5</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;edx flag[&quot;</span>+<span class="hljs-built_in">str</span>(opcode[i+<span class="hljs-number">2</span>])+<span class="hljs-string">&quot;]&quot;</span>)<br>        <span class="hljs-keyword">elif</span>(opcode[i+<span class="hljs-number">1</span>]==<span class="hljs-number">0xE7</span>):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag[&quot;</span>+<span class="hljs-built_in">str</span>(opcode[i+<span class="hljs-number">2</span>])+<span class="hljs-string">&quot;] ebx&quot;</span>)<br>        i+=<span class="hljs-number">6</span><br>    <span class="hljs-keyword">elif</span>(opcode[i]==<span class="hljs-number">0xF2</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;xor eax ebx&quot;</span>)<br>        i+=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">elif</span>(opcode[i]==<span class="hljs-number">0xF5</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;cmp strlen&quot;</span>)<br>        i+=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">elif</span>(opcode[i]==<span class="hljs-number">0xF4</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;nop&quot;</span>)<br>        i+=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">elif</span>(opcode[i]==<span class="hljs-number">0xF7</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;mul eax edx&quot;</span>)<br>        i+=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">elif</span>(opcode[i]==<span class="hljs-number">0xF8</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;swap eax ebx&quot;</span>)<br>        i+=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">elif</span>(opcode[i]==<span class="hljs-number">0xF6</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;eax = ecx+2*ebx+3*eax&quot;</span>)  <br>        i+=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        i+=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>输出得到伪代码,前面部分是干扰的，后面那一段才是真正的加密</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">cmp</span> strlen<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">0</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">32</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">1</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">33</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">2</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">34</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">3</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">35</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">4</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">36</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">5</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">37</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">6</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">38</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">7</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">39</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">8</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">40</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">9</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">41</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">10</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">42</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">11</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">43</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">12</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">44</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">13</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">45</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">14</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">46</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">15</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">47</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">16</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">48</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">17</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">49</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">18</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">50</span>] eax<br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">19</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">51</span>] eax<br><span class="hljs-attribute">nop</span><br><br><br><span class="hljs-attribute">cmp</span> strlen<br><br><span class="hljs-comment">#六个异或</span><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">0</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">1</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">0</span>] eax<br><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">1</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">2</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">1</span>] eax<br><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">2</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">3</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">2</span>] eax<br><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">3</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">4</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">3</span>] eax<br><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">4</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">5</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">4</span>] eax<br><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">5</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">6</span>]<br><span class="hljs-attribute">xor</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">5</span>] eax<br><br><span class="hljs-comment">#三个相乘</span><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">6</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">7</span>]<br><span class="hljs-attribute">mov</span> ecx flag[<span class="hljs-number">8</span>]<br><span class="hljs-attribute">mov</span> edx flag[<span class="hljs-number">12</span>]<br><span class="hljs-attribute">eax</span> = ecx+<span class="hljs-number">2</span>*ebx+<span class="hljs-number">3</span>*eax<br><span class="hljs-attribute">mul</span> eax edx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">6</span>] eax<br><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">7</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">8</span>]<br><span class="hljs-attribute">mov</span> ecx flag[<span class="hljs-number">9</span>]<br><span class="hljs-attribute">mov</span> edx flag[<span class="hljs-number">12</span>]<br><span class="hljs-attribute">eax</span> = ecx+<span class="hljs-number">2</span>*ebx+<span class="hljs-number">3</span>*eax<br><span class="hljs-attribute">mul</span> eax edx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">7</span>] eax<br><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">8</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">9</span>]<br><span class="hljs-attribute">mov</span> ecx flag[<span class="hljs-number">10</span>]<br><span class="hljs-attribute">mov</span> edx flag[<span class="hljs-number">12</span>]<br><span class="hljs-attribute">eax</span> = ecx+<span class="hljs-number">2</span>*ebx+<span class="hljs-number">3</span>*eax<br><span class="hljs-attribute">mul</span> eax edx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">8</span>] eax <br><br><span class="hljs-comment">#三个交换</span><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">13</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">19</span>]<br><span class="hljs-attribute">swap</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">13</span>] eax<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">19</span>] ebx<br><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">14</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">18</span>]<br><span class="hljs-attribute">swap</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">14</span>] eax<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">18</span>] ebx<br><br><span class="hljs-attribute">mov</span> eax flag[<span class="hljs-number">15</span>]<br><span class="hljs-attribute">mov</span> ebx flag[<span class="hljs-number">17</span>]<br><span class="hljs-attribute">swap</span> eax ebx<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">15</span>] eax<br><span class="hljs-attribute">mov</span> flag[<span class="hljs-number">17</span>] ebx<br><span class="hljs-attribute">nop</span><br></code></pre></td></tr></table></figure><h3 id="翻译成伪代码"><a href="#翻译成伪代码" class="headerlink" title="翻译成伪代码"></a>翻译成伪代码</h3><p>大概进行了下面的这些操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>):<br>    flag[i]^=flag[i+<span class="hljs-number">1</span>]<br>flag[<span class="hljs-number">6</span>]=(flag[<span class="hljs-number">8</span>]+<span class="hljs-number">2</span>*flag[<span class="hljs-number">7</span>]+<span class="hljs-number">3</span>*flag[<span class="hljs-number">6</span>])*flag[<span class="hljs-number">12</span>]<br>flag[<span class="hljs-number">7</span>]=(flag[<span class="hljs-number">9</span>]+<span class="hljs-number">2</span>*flag[<span class="hljs-number">8</span>]+<span class="hljs-number">3</span>*flag[<span class="hljs-number">7</span>])*flag[<span class="hljs-number">12</span>]<br>flag[<span class="hljs-number">8</span>]=(flag[<span class="hljs-number">10</span>]+<span class="hljs-number">2</span>*flag[<span class="hljs-number">9</span>]+<span class="hljs-number">3</span>*flag[<span class="hljs-number">8</span>])*flag[<span class="hljs-number">12</span>]<br>swap(flag[<span class="hljs-number">13</span>],flag[<span class="hljs-number">19</span>])<br>swap(flag[<span class="hljs-number">14</span>],flag[<span class="hljs-number">18</span>])<br>swap(flag[<span class="hljs-number">15</span>],flag[<span class="hljs-number">17</span>])<br>flag[<span class="hljs-number">13</span>], flag[<span class="hljs-number">19</span>] = flag[<span class="hljs-number">19</span>], flag[<span class="hljs-number">13</span>]<br>flag[<span class="hljs-number">14</span>], flag[<span class="hljs-number">18</span>] = flag[<span class="hljs-number">18</span>], flag[<span class="hljs-number">14</span>]<br>flag[<span class="hljs-number">15</span>], flag[<span class="hljs-number">17</span>] = flag[<span class="hljs-number">17</span>], flag[<span class="hljs-number">15</span>]        <br></code></pre></td></tr></table></figure><h3 id="找密文解密"><a href="#找密文解密" class="headerlink" title="找密文解密"></a>找密文解密</h3><p>这里需要注意的是 <strong>sub_F83</strong> 里面的 <code>aFzAmAmFmtSum</code> 点进去得到的并不是真正的密文，真正的密文需要对 <code>dword_2022A4</code> 交叉引用，在 <strong>sub_F00</strong> 里面的 <code>byte_202020</code> 中找到<br><img src="/../images/vm/enctext.png"><br><img src="/../images/vm/gw12.png"><br>根据上面部分的加密逻辑写出解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br>enc=[<span class="hljs-number">0x69</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x72</span>, <br>      <span class="hljs-number">0x33</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x72</span>,]<br><span class="hljs-comment">#假的加密数据 跑出来是 &quot;Mt!! Mus~&quot;</span><br><span class="hljs-comment"># enc=[0x46, 0x7A, 0x7B, 0x61, 0x4D, 0x7B,0x61, 0x4D, 0x7C, 0x7D,</span><br><span class="hljs-comment">#  0x66, 0x4D, 0x74, 0x7E, 0x73, 0x75, 0x4D, 0x20, 0x21, 0x21,]</span><br><br>enc[<span class="hljs-number">13</span>], enc[<span class="hljs-number">19</span>] = enc[<span class="hljs-number">19</span>], enc[<span class="hljs-number">13</span>]<br>enc[<span class="hljs-number">14</span>], enc[<span class="hljs-number">18</span>] = enc[<span class="hljs-number">18</span>], enc[<span class="hljs-number">14</span>]<br>enc[<span class="hljs-number">15</span>], enc[<span class="hljs-number">17</span>] = enc[<span class="hljs-number">17</span>], enc[<span class="hljs-number">15</span>]<br><br>s=Solver()<br>f=[BitVec(<span class="hljs-string">f&quot;f<span class="hljs-subst">&#123;i&#125;</span>&quot;</span>,<span class="hljs-number">8</span>)<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">11</span>)]<br>s.add(enc[<span class="hljs-number">6</span>]==(f[<span class="hljs-number">8</span>]+<span class="hljs-number">2</span>*f[<span class="hljs-number">7</span>]+<span class="hljs-number">3</span>*f[<span class="hljs-number">6</span>])*enc[<span class="hljs-number">12</span>])<br>s.add(enc[<span class="hljs-number">7</span>]==(f[<span class="hljs-number">9</span>]+<span class="hljs-number">2</span>*f[<span class="hljs-number">8</span>]+<span class="hljs-number">3</span>*f[<span class="hljs-number">7</span>])*enc[<span class="hljs-number">12</span>])<br>s.add(enc[<span class="hljs-number">8</span>]==(f[<span class="hljs-number">10</span>]+<span class="hljs-number">2</span>*f[<span class="hljs-number">9</span>]+<span class="hljs-number">3</span>*f[<span class="hljs-number">8</span>])*enc[<span class="hljs-number">12</span>])<br><br>s.add(enc[<span class="hljs-number">0</span>]==f[<span class="hljs-number">0</span>]^f[<span class="hljs-number">1</span>])<br>s.add(enc[<span class="hljs-number">1</span>]==f[<span class="hljs-number">1</span>]^f[<span class="hljs-number">2</span>])<br>s.add(enc[<span class="hljs-number">2</span>]==f[<span class="hljs-number">2</span>]^f[<span class="hljs-number">3</span>])<br>s.add(enc[<span class="hljs-number">3</span>]==f[<span class="hljs-number">3</span>]^f[<span class="hljs-number">4</span>])<br>s.add(enc[<span class="hljs-number">4</span>]==f[<span class="hljs-number">4</span>]^f[<span class="hljs-number">5</span>])<br>s.add(enc[<span class="hljs-number">5</span>]==f[<span class="hljs-number">5</span>]^f[<span class="hljs-number">6</span>])    <br><br>s.add(enc[<span class="hljs-number">9</span>]==f[<span class="hljs-number">9</span>])<br>s.add(enc[<span class="hljs-number">10</span>]==f[<span class="hljs-number">10</span>])<br><br><span class="hljs-keyword">for</span> var <span class="hljs-keyword">in</span> f:<br>    s.add(var&gt;=<span class="hljs-number">32</span>,var&lt;=<span class="hljs-number">126</span>)<br><br>flag=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">if</span> s.check()==sat:<br>    model=s.model()<br>    <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">11</span>):<br>        flag += <span class="hljs-built_in">chr</span>(model[f[i]].as_long())<br>   <br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">11</span>,<span class="hljs-number">20</span>):<br>    flag+=<span class="hljs-built_in">chr</span>(enc[i])<br><br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>flag 即为 <code>flag&#123;Y0u_hav3_r3v3rs3_1t!&#125;</code></p><h2 id="NPC²CTF-2025-babyVM"><a href="#NPC²CTF-2025-babyVM" class="headerlink" title="[NPC²CTF 2025]babyVM"></a>[NPC²CTF 2025]babyVM</h2><h3 id="粗看逻辑"><a href="#粗看逻辑" class="headerlink" title="粗看逻辑"></a>粗看逻辑</h3><p>找到 main 函数，挺清晰的，输入 32 字节的 flag，然后再进 VM，之后进行比较，在 cipher 处找到密文<br><img src="/../images/vm/vm1.png"><br><img src="/../images/vm/vm2.png"><br>点进 VM 里面，很多 case ，case 里面还有继续套 case的，本来想手撕的，但是最后被劝退了，用打条件断点的方式进行 ida trace，这样就可以跳过写脚本去对应操作码的步骤</p><h3 id="细看-case-打条件断点"><a href="#细看-case-打条件断点" class="headerlink" title="细看 case 打条件断点"></a>细看 case 打条件断点</h3><p>看第一个 case0：<br><img src="/../images/vm/vm3.png"><br><code>-4</code>说明在向“栈”压入一个 4 字节的值<br>实际修改 qword_… 高 32 位的值 —— 更新“栈指针,模拟栈增长操作，所以这是 <strong>push</strong> 操作<br>对应汇编打条件断点，看寄存器，右键<code>Edit breakpoinnt</code>,写 idapython 脚本<br><img src="/../images/vm/vm4.png"><br>case1 是看字符串长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">eax_val = idc.get_reg_value(<span class="hljs-string">&quot;eax&quot;</span>)<br>output = <span class="hljs-string">f&quot;strlen,<span class="hljs-subst">&#123;eax_val&#125;</span>(0x<span class="hljs-subst">&#123;eax_val:X&#125;</span>)\n&quot;</span>  <br><span class="hljs-built_in">print</span>(output.strip())<br></code></pre></td></tr></table></figure><p>case2 是 <strong>mov</strong> 类，里面又有很多 case 分支，是不同的move,比对汇编和代码<br><img src="/../images/vm/vm6.png"><br><img src="/../images/vm/vm5.png"></p><p><img src="/../images/vm/vm7.png"><br>注意打断点时不要打到 LABEL 里面去了，不然会重复输出<br>可以看到这是把一个参数赋值到内存地址,<code>v41</code> 对应的寄存器是 <code>r8d</code>,<code>v42(rdx)</code> 地址加上 <code>v40(rcx)</code> 偏移值就是地址值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">rdx_val=idc.get_reg_value(<span class="hljs-string">&quot;rdx&quot;</span>)<br>rcx_val=idc.get_reg_value(<span class="hljs-string">&quot;rcx&quot;</span>)<br>r8d_val=idc.get_reg_value(<span class="hljs-string">&quot;r8d&quot;</span>)<br>output = <span class="hljs-string">f&quot;case0 mov [<span class="hljs-subst">&#123;rdx_val+rdx_val&#125;</span>],<span class="hljs-subst">&#123;r8d_val&#125;</span>\n&quot;</span><br>log_path = <span class="hljs-string">r&quot;D:\aaa\vm\log.txt&quot;</span>  <br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(log_path, <span class="hljs-string">&#x27;a&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(output)<br></code></pre></td></tr></table></figure><p>就这样继续对每一个 case 打条件断点,打的时候可以稍微标注一下，以便后续修改去对着找是哪一条</p><p>case3 是 <code>sub</code> 操作，case4 是 <code>add</code> 操作，case5 是 <code>xor</code> 操作，case6 是 <code>add</code> 操作,case7 是 <code>shr</code> 操作，case8 是 <code>shl</code>,case9 是比较字符串，case13 是 <code>and</code> 指令</p><h3 id="找加密、密钥、轮数、delta"><a href="#找加密、密钥、轮数、delta" class="headerlink" title="找加密、密钥、轮数、delta"></a>找加密、密钥、轮数、delta</h3><p>打印出来看到有这样的结构,一眼密钥<br><img src="/../images/vm/vm8.png"><br>然后去找相似的循环结构，这里注意到</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">case3</span> <span class="hljs-keyword">mov</span> rag2,<span class="hljs-number">0</span><br><span class="hljs-symbol">case4</span> <span class="hljs-keyword">add</span> reg2,<span class="hljs-number">1</span><br><span class="hljs-symbol">...</span><br><span class="hljs-symbol">case3</span> <span class="hljs-keyword">mov</span> rag2,<span class="hljs-number">1</span><br><span class="hljs-symbol">case4</span> <span class="hljs-keyword">add</span> reg2,<span class="hljs-number">1</span><br><span class="hljs-symbol">...</span><br><span class="hljs-symbol">case3</span> <span class="hljs-keyword">mov</span> rag2,<span class="hljs-number">2</span><br><span class="hljs-symbol">case4</span> <span class="hljs-keyword">add</span> reg2,<span class="hljs-number">1</span><br><span class="hljs-symbol">...</span><br><span class="hljs-symbol">...</span><br><span class="hljs-symbol">case3</span> <span class="hljs-keyword">mov</span> rag2,<span class="hljs-number">48</span><br><span class="hljs-symbol">case4</span> <span class="hljs-keyword">add</span> reg2,<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>明显的计数器每经过一轮就加一，可以得出循环轮数为 <strong>48</strong> 轮<br><img src="/../images/vm/vm9.png"><br>左移右移的操作再加上 <code>&gt;&gt;11</code>和<code>&amp;3</code>,大致推测出这是一个魔改的 <strong>xtea</strong> 算法<br>接着去找 delta，delta 是一个在每轮加密中都会出现的常量，就去找到出现多的不变的常数，<br>其实在密钥的下面一点也出现了,delta 也是魔改了的，值为<strong>421101834</strong><br><code>case7 mov [18446744073709551812],421101834</code></p><h3 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num_rounds, <span class="hljs-type">uint32_t</span> v[<span class="hljs-number">2</span>], <span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> key[<span class="hljs-number">4</span>], <span class="hljs-type">uint32_t</span> delta)</span> </span>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">uint32_t</span> v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>];<br>   <br>    <span class="hljs-type">uint32_t</span> sum = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; num_rounds; i++) &#123;<br>        sum -= delta;  <br>    &#125;<br>    <br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; num_rounds; i++) &#123;<br>        v1 -= (((v0 &gt;&gt; <span class="hljs-number">7</span>) ^ (v0 &lt;&lt; <span class="hljs-number">3</span>)) + v0) ^ (sum + key[(sum &gt;&gt; <span class="hljs-number">11</span>) &amp; <span class="hljs-number">3</span>]);<br>        sum += delta;<br>        v0 -= (((v1 &gt;&gt; <span class="hljs-number">6</span>) ^ (v1 &lt;&lt; <span class="hljs-number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="hljs-number">3</span>]);<br>    &#125;<br>    v[<span class="hljs-number">0</span>] = v0;<br>    v[<span class="hljs-number">1</span>] = v1;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span>* key_str = <span class="hljs-string">&quot;Chovy_inkey_w36_&quot;</span>;<br>    <span class="hljs-type">uint32_t</span> key[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <br>    <span class="hljs-comment">// 自定义delta值</span><br>    <span class="hljs-type">uint32_t</span> delta = <span class="hljs-number">421101834</span>; <span class="hljs-comment">// 0x191A06FA</span><br>    <br>    <span class="hljs-comment">// 将字符串转换为4个32位整数</span><br>    <span class="hljs-comment">// 每4个字符组成一个32位整数</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        key[i] = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">4</span>; j++) &#123;<br>            <span class="hljs-type">int</span> idx = i * <span class="hljs-number">4</span> + j;<br>            <span class="hljs-keyword">if</span> (idx &lt; <span class="hljs-built_in">strlen</span>(key_str)) &#123;<br>                key[i] |= ((<span class="hljs-type">uint32_t</span>)key_str[idx] &lt;&lt; (j * <span class="hljs-number">8</span>));<br>            &#125;<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-comment">// 打印密钥</span><br>    cout &lt;&lt; <span class="hljs-string">&quot;XTEA Key (hex): &quot;</span> &lt;&lt; endl;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        cout &lt;&lt; <span class="hljs-string">&quot;key[&quot;</span> &lt;&lt; i &lt;&lt; <span class="hljs-string">&quot;] = 0x&quot;</span> &lt;&lt; hex &lt;&lt; key[i] &lt;&lt; endl;<br>    &#125;<br>    <br>    <span class="hljs-type">uint8_t</span> encrypted_bytes[] = &#123;<br>        <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0xE9</span>,<br>        <span class="hljs-number">0xDD</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x29</span>,<br>        <span class="hljs-number">0xB9</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0x15</span>,<br>        <span class="hljs-number">0xB6</span>, <span class="hljs-number">0x29</span><br>    &#125;;<br>    <br><br>    <span class="hljs-comment">// 将密文分成若干个块进行解密 (XTEA每次处理8字节)</span><br>    <span class="hljs-type">int</span> num_blocks = <span class="hljs-built_in">sizeof</span>(encrypted_bytes) / <span class="hljs-number">8</span>;<br>    <span class="hljs-type">uint8_t</span> decrypted_bytes[<span class="hljs-built_in">sizeof</span>(encrypted_bytes)];<br>    <span class="hljs-built_in">memcpy</span>(decrypted_bytes, encrypted_bytes, <span class="hljs-built_in">sizeof</span>(encrypted_bytes));<br>    <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; num_blocks; i++) &#123;<br>        <span class="hljs-type">uint32_t</span>* block = (<span class="hljs-type">uint32_t</span>*)(decrypted_bytes + i * <span class="hljs-number">8</span>);<br>        <span class="hljs-built_in">decrypt</span>(<span class="hljs-number">48</span>, block, key, delta);<br>    &#125;<br>    <br>    <br>    cout &lt;&lt; <span class="hljs-string">&quot;Decrypted : &quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">sizeof</span>(decrypted_bytes); i++) &#123;<br>        <br>        <span class="hljs-keyword">if</span> (decrypted_bytes[i] &gt;= <span class="hljs-number">32</span> &amp;&amp; decrypted_bytes[i] &lt;= <span class="hljs-number">126</span>) &#123;<br>            cout &lt;&lt; (<span class="hljs-type">char</span>)decrypted_bytes[i];<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            cout &lt;&lt; <span class="hljs-string">&quot;.&quot;</span>;<br>        &#125;<br>    &#125;<br>    cout &lt;&lt; endl;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/../images/vm/vm10.png"><br>得到 flag 为 <code> flag&#123;D0_yOu_l1k3_VmmmmMMMMMmmm?&#125;</code></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XYCTF2024 Reverse 方向复现</title>
    <link href="/2025/05/03/XYCTF2024/"/>
    <url>/2025/05/03/XYCTF2024/</url>
    
    <content type="html"><![CDATA[<h3 id="你是真的大学生吗"><a href="#你是真的大学生吗" class="headerlink" title="你是真的大学生吗?"></a>你是真的大学生吗?</h3><p>附件是MS-DOS executable (EXE)文件，ida 不能反编译，硬看汇编<br><img src="/../images/XYCTF/dxs1.png"><br>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">T[20]=C[20]^C[0]</span><br><span class="hljs-string">al=T[20]</span><br><span class="hljs-string">T[19]=C[19]^al即T[19]=C[19]^T[20]</span><br><span class="hljs-string">al=T[19]</span><br><span class="hljs-string">T[18]=C[18]^al即T[18]=C[18]^T[19]</span><br><span class="hljs-string">...</span><br><span class="hljs-string">T[0]=C[0]^al即T[0]=C[0]^T[1]</span><br><span class="hljs-string">所以对于i=0~19</span><br><span class="hljs-string">T[i]=C[i]^T[i+1]</span><br><span class="hljs-string">求C[i]就用C[i]=T[i]^T[i+1]</span><br><span class="hljs-string">对于i=20</span><br><span class="hljs-string">C[20]=T[20]^C[0]</span><br><span class="hljs-string">C[20]=T[20]^(T[0]^T[1])</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br>enc=[<span class="hljs-number">0x76</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x1E</span>, <br>     <span class="hljs-number">0x41</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x05</span>]<br><br>flag=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(enc)-<span class="hljs-number">1</span>):<br>    flag.append(enc[i]^enc[i+<span class="hljs-number">1</span>])<br>flag.append(enc[-<span class="hljs-number">1</span>]^enc[<span class="hljs-number">0</span>]^enc[<span class="hljs-number">1</span>])<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">chr</span>(c) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> flag]))<br><br><span class="hljs-comment">#xyctf&#123;you_know_8086&#125;</span><br></code></pre></td></tr></table></figure><p>flag 为<code>yctf&#123;you_know_8086&#125;</code></p><h3 id="给阿姨倒一杯卡布奇诺"><a href="#给阿姨倒一杯卡布奇诺" class="headerlink" title="给阿姨倒一杯卡布奇诺"></a>给阿姨倒一杯卡布奇诺</h3><p>经典的 TEA 了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> uint32_t unsigned int</span><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> *v, <span class="hljs-type">uint32_t</span> *key)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">static</span> <span class="hljs-type">uint32_t</span> data1 = <span class="hljs-number">0x5F797274</span>;<br>    <span class="hljs-type">static</span> <span class="hljs-type">uint32_t</span> data2 = <span class="hljs-number">0x64726168</span>;<br>    <span class="hljs-type">int</span> i;   <span class="hljs-comment">// [rsp+20h] [rbp-10h]</span><br>    <span class="hljs-type">uint32_t</span> sum; <span class="hljs-comment">// [rsp+24h] [rbp-Ch]</span><br>    <span class="hljs-type">uint32_t</span> v1;  <span class="hljs-comment">// [rsp+28h] [rbp-8h]</span><br>    <span class="hljs-type">uint32_t</span> v0;  <span class="hljs-comment">// [rsp+2Ch] [rbp-4h]</span><br><br>    sum = <span class="hljs-number">0x6E75316C</span> * <span class="hljs-number">32</span>;<br><br><br>    <span class="hljs-comment">//保存当前密文</span><br>    <span class="hljs-type">uint32_t</span> data1_tmp = v[<span class="hljs-number">0</span>];<br>    <span class="hljs-type">uint32_t</span> data2_tmp = v[<span class="hljs-number">1</span>];<br>    v0 = v[<span class="hljs-number">0</span>];<br>    v1 = v[<span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">31</span>; i &gt;= <span class="hljs-number">0</span>; i--)<span class="hljs-comment">//i参与加密，for循环中的i也要倒着写</span><br>    &#123;<br>        v1 -= ((v0 &gt;&gt; <span class="hljs-number">5</span>) + key[<span class="hljs-number">3</span>]) ^ (v0 + sum) ^ (key[<span class="hljs-number">2</span>] + <span class="hljs-number">16</span> * v0) ^ (sum + i);<br>        v0 -= ((v1 &gt;&gt; <span class="hljs-number">5</span>) + key[<span class="hljs-number">1</span>]) ^ (v1 + sum) ^ (key[<span class="hljs-number">0</span>] + <span class="hljs-number">16</span> * v1) ^ (sum + i);<br>        sum -= <span class="hljs-number">0x6E75316C</span>;<br>    &#125;<br>   <br>    v[<span class="hljs-number">0</span>] = v0 ^ data1;<br>    v[<span class="hljs-number">1</span>] = v1 ^ data2;<br>    data1 = data1_tmp;<br>    data2 = data2_tmp;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">uint32_t</span> key[<span class="hljs-number">4</span>];   <span class="hljs-comment">// [rsp+60h] [rbp-40h] BYREF</span><br>    <span class="hljs-type">uint32_t</span> array[<span class="hljs-number">8</span>]; <span class="hljs-comment">// [rsp+70h] [rbp-30h]</span><br>    array[<span class="hljs-number">0</span>] = <span class="hljs-number">0x9B28ED45</span>;<br>    array[<span class="hljs-number">1</span>] = <span class="hljs-number">0x145EC6E9</span>;<br>    array[<span class="hljs-number">2</span>] = <span class="hljs-number">0x5B27A6C3</span>;<br>    array[<span class="hljs-number">3</span>] = <span class="hljs-number">0xE59E75D5</span>;<br>    array[<span class="hljs-number">4</span>] = <span class="hljs-number">0xE82C2500</span>;<br>    array[<span class="hljs-number">5</span>] = <span class="hljs-number">0xA4211D92</span>;<br>    array[<span class="hljs-number">6</span>] = <span class="hljs-number">0xCD8A4B62</span>;<br>    array[<span class="hljs-number">7</span>] = <span class="hljs-number">0xA668F440</span>;<br>    key[<span class="hljs-number">0</span>] = <span class="hljs-number">0x65766967</span>;<br>    key[<span class="hljs-number">1</span>] = <span class="hljs-number">0x756F795F</span>;<br>    key[<span class="hljs-number">2</span>] = <span class="hljs-number">0x7075635F</span>;    <br>    key[<span class="hljs-number">3</span>] = <span class="hljs-number">0x6165745F</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">7</span>; i += <span class="hljs-number">2</span>)<br>    &#123;<br>        <span class="hljs-built_in">decrypt</span>(array + i, key);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">32</span>; i++)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, ((<span class="hljs-type">char</span>*)array)[i]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>flag 为<code>XTCTF&#123;133bffe401d223a02385d90c5f1ca377&#125;</code></p><h3 id="DebugMe"><a href="#DebugMe" class="headerlink" title="DebugMe"></a>DebugMe</h3><p>jadx 打开有混淆，用 jeb 打开能正常反编译，安卓 java 层动调，Frida 一把梭，hook What类<br><img src="/../images/XYCTF/dbg1.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">hookwhat</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> what = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.xyctf.ezapk.What&quot;</span>);<br>    <span class="hljs-keyword">var</span> enc = <span class="hljs-string">&quot;WikFhRxyYjoSJ8mMbM3fRwty/74bc7Ip7ojqenHaSqc9wDv3JDG9XfV6xEiC7Eg1RWTUa4LaM%2BD0W%2BPKanSA5w==&quot;</span>;<br>    <span class="hljs-keyword">var</span> flag = what.<span class="hljs-title function_">x</span>(enc);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;\nFlag: &quot;</span> + flag);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-title function_">hookwhat</span>();<br>    &#125;)<br>&#125;;<br><span class="hljs-title function_">setImmediate</span>(main);<br></code></pre></td></tr></table></figure><p>直接出 flag<br><img src="/../images/XYCTF/dbg.png"><br>flag 为<code>XYCTF&#123;d3bugg3r_15_v3ry_u53ful&#125;</code></p><h3 id="何须相思煮余年"><a href="#何须相思煮余年" class="headerlink" title="何须相思煮余年"></a>何须相思煮余年</h3><p>附件是 txt，将 16 进制数据放进 CyberChef 里，选择<code>From Hex</code>，然后在 Output 保存文件<br><img src="/../images/XYCTF/hx1.png"><br>将保存的文件用 32 位的 ida 打开，发现有函数序言和函数尾声</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs perl"><span class="hljs-keyword">push</span>    ebp         ; 保存旧的栈基址<br>mov     ebp, esp    ; 建立新的栈基址<br><span class="hljs-function"><span class="hljs-keyword">sub</span>     <span class="hljs-title">esp</span>, 0<span class="hljs-title">x20</span>   </span>; 为局部变量分配空间<br></code></pre></td></tr></table></figure><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-keyword">leave</span>               <span class="hljs-comment">; 恢复栈指针和基址</span><br>(<span class="hljs-keyword">mov</span> <span class="hljs-built_in">esp</span>, <span class="hljs-built_in">ebp</span><span class="hljs-comment">; pop ebp)</span><br><span class="hljs-keyword">ret</span>                 <span class="hljs-comment">; 返回到调用者</span><br></code></pre></td></tr></table></figure><p>按 <code>P</code> 创建函数后 <code>F5</code>能反编译了<br><img src="/../images/XYCTF/hx2.png"><br>逆向写出解题脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">enc=[<span class="hljs-number">88</span>,<span class="hljs-number">88</span>,<span class="hljs-number">134</span>,<span class="hljs-number">87</span>,<span class="hljs-number">74</span>,<span class="hljs-number">118</span>,<span class="hljs-number">318</span>,<span class="hljs-number">101</span>,<span class="hljs-number">59</span>,<span class="hljs-number">92</span>,<span class="hljs-number">480</span>,<span class="hljs-number">60</span>,<span class="hljs-number">65</span>,<span class="hljs-number">41</span>,<span class="hljs-number">770</span>,<span class="hljs-number">110</span>,<span class="hljs-number">73</span>,<span class="hljs-number">31</span>,<span class="hljs-number">918</span>,<br>     <span class="hljs-number">39</span>,<span class="hljs-number">120</span>,<span class="hljs-number">27</span>,<span class="hljs-number">1188</span>,<span class="hljs-number">47</span>,<span class="hljs-number">77</span>,<span class="hljs-number">24</span>,<span class="hljs-number">1352</span>,<span class="hljs-number">44</span>,<span class="hljs-number">81</span>,<span class="hljs-number">23</span>,<span class="hljs-number">1680</span>,<span class="hljs-number">46</span>,<span class="hljs-number">85</span>,<span class="hljs-number">15</span>,<span class="hljs-number">1870</span>,<span class="hljs-number">66</span>,<span class="hljs-number">91</span>,<span class="hljs-number">16</span>,<span class="hljs-number">4750</span>]<br><span class="hljs-comment"># length=len(enc)</span><br><span class="hljs-comment"># print(length)</span><br>result=enc.copy()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(enc)):<br>    <span class="hljs-keyword">if</span> i%<span class="hljs-number">4</span>==<span class="hljs-number">0</span>:<br>        result[i]-=i<br>    <span class="hljs-keyword">elif</span> i%<span class="hljs-number">4</span>==<span class="hljs-number">1</span>:<br>        result[i]+=i<br>    <span class="hljs-keyword">elif</span> i%<span class="hljs-number">4</span>==<span class="hljs-number">2</span>:<br>        <span class="hljs-keyword">if</span> i!=<span class="hljs-number">0</span>:<br>            result[i]//=i<br>    <span class="hljs-keyword">elif</span> i%<span class="hljs-number">4</span>==<span class="hljs-number">3</span>:<br>        result[i]^=i<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">chr</span>(c) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> result]))<br></code></pre></td></tr></table></figure><p>flag 为<code>XYCTF&#123;5b3e07567a9034d06851475481507a75&#125;</code></p><h3 id="what’s-this"><a href="#what’s-this" class="headerlink" title="what’s this"></a>what’s this</h3><p>用 <code>exeinfope</code>打开看发现 Lua bytecode (generic)，用 <code>luadec</code> 反编译<br><img src="/../images/XYCTF/w1.png"><br>有很大一部分没用的代码直接跳过，看后面关键逻辑<br><img src="/../images/XYCTF/w2.png"><br>把每个字符先异或 8，再 +3<br><img src="/../images/XYCTF/w3.png"><br>base64，逆序，字符替换<br>解题脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br>enc=<span class="hljs-string">&quot;==AeuFEcwxGPuJ0PBNzbC16ctFnPB5DPzI0bwx6bu9GQ2F1XOR1U&quot;</span><br><span class="hljs-comment">#替换</span><br>new_enc=enc.replace(<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;W&quot;</span>)<br><span class="hljs-comment">#逆序 [start:stop:step] step=-1,从后往前遍历</span><br>enc=new_enc[::-<span class="hljs-number">1</span>]<br>dec=base64.b64decode(enc)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> dec.decode():<br>    i =(<span class="hljs-built_in">ord</span>(i)-<span class="hljs-number">3</span>)^<span class="hljs-number">8</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(i),end=<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><p>flag 为<code>XYCTF&#123;5dcbaed781363fbfb7d8647c1aee6c&#125;</code></p><h3 id="ez-enc"><a href="#ez-enc" class="headerlink" title="ez_enc"></a>ez_enc</h3><p>main 函数中加密，byte_14001E008 里是密文，z3求解</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br><br>enc=[<span class="hljs-number">0x27</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0xCB</span>, <br>     <span class="hljs-number">0x2D</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x2D</span>, <br>     <span class="hljs-number">0xED</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x7D</span>]<br><span class="hljs-comment"># print(len(enc))</span><br><span class="hljs-comment"># 34</span><br>s=Solver()<br><span class="hljs-comment">#创建一个名字为 &#x27;flag[i]&#x27; 的 8 位的 位向量</span><br>item=[BitVec(<span class="hljs-string">&#x27;flag[%d]&#x27;</span>%i,<span class="hljs-number">8</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">34</span>)]<br><span class="hljs-comment">#copy item to dec</span><br>dec=item[:]<br><br><span class="hljs-comment">#限制flag中字符在常见可打印字符范围内</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">34</span>):<br>    s.add(item[i]&lt;<span class="hljs-number">127</span>)<br>    s.add(item[i]&gt;<span class="hljs-number">31</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">33</span>):<br>    item[i]=<span class="hljs-string">b&#x27;IMouto&#x27;</span>[i%<span class="hljs-number">6</span>]^(item[i+<span class="hljs-number">1</span>]+item[i]%<span class="hljs-number">20</span>)&amp;<span class="hljs-number">0xff</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">34</span>):<br>    s.add(item[i]==enc[i])<br><br><span class="hljs-keyword">if</span> s.check()==sat:<br>    m=s.model()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-built_in">chr</span>(m[dec[i]].as_long()) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">34</span>)))<br><br></code></pre></td></tr></table></figure><p>flag 为<code>flag&#123;!_r3ea11y_w4nt_@_cu7e_s1$ter&#125;</code></p><h3 id="ezmath"><a href="#ezmath" class="headerlink" title="ezmath"></a>ezmath</h3><p>python 逆向，先用 pyinstxtractor 解包，找到ezmath.pyc,用 <a href="https://tool.lu/pyc">https://tool.lu/pyc</a> 反编译得到代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><br><span class="hljs-comment"># visit https://tool.lu/pyc/ for more information</span><br><span class="hljs-comment"># Version: Python 3.8</span><br><br>flag = (<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ <span class="hljs-built_in">ord</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;flag:&#x27;</span>))<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(flag) == <span class="hljs-number">32</span> <span class="hljs-keyword">and</span> (((((((((((((((((((((<span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">23</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">23</span>]))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">12</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">12</span>]))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">1</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">24</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">222</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">22</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">22</span>]))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">31</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">31</span>]))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">26</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">26</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">9</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">178</span>))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">29</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">232</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">17</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">17</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">23</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">150</span>))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">6</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">226</span>))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">7</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">110</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">19</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">19</span>]))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">2</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">2</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">176</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">10</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">10</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">12</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">198</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">24</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">24</span>]))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">9</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">9</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">3</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">168</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">8</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">8</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">2</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">134</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">14</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">14</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">13</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">170</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">4</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">4</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">10</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">142</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">27</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">27</span>]))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">15</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">15</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">15</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">224</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">16</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">16</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">11</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">230</span>))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">178</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">28</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">28</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">5</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">246</span>))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">17</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">168</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">30</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">30</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">21</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">220</span>))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">22</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">212</span>))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">16</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">232</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">25</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">25</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">4</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">140</span>))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">31</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">250</span>))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">28</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">150</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">11</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">11</span>]))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">13</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">13</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">14</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">234</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">7</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">7</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">8</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">174</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">3</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">3</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">25</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">242</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">29</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">29</span>]))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">5</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">5</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">30</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">142</span>))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">26</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">170</span>))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">19</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">176</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">0</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">27</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">168</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">20</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">20</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">20</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">212</span>)))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">21</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">21</span>]))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">6</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">6</span>]))) + <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">18</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(flag[<span class="hljs-number">18</span>]))) - <span class="hljs-built_in">sum</span>((<span class="hljs-keyword">lambda</span> <span class="hljs-number">.0</span>: [ flag[<span class="hljs-number">18</span>] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-number">.0</span> ])(<span class="hljs-built_in">range</span>(<span class="hljs-number">178</span>)))) + <span class="hljs-number">297412</span> == <span class="hljs-number">0</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;yes&#x27;</span>)<br></code></pre></td></tr></table></figure><p>分析一下主要表达式<code>sum((lambda .0: [ &lt;参数1&gt; for _ in .0 ])(range(&lt;参数2&gt;)))</code><br><code>lambda .0: [ &lt;参数1&gt; for _ in .0 ] </code>定义了一个匿名函数，接受参数.0（即range(&lt;参数2&gt;)生成的序列）<br><code>range(&lt;参数2&gt;)</code> 生成一个长度为&lt;参数2&gt;的整数序列（如&lt;参数2&gt;&#x3D;3时生成0,1,2）<br>列表推导式 [ &lt;参数1&gt; for _ in .0 ] 会创建包含&lt;参数2&gt;个&lt;参数1&gt;的列表（如[5,5,5]）<br>sum(…) 对该列表求和，本质上是将&lt;参数1&gt;累加&lt;参数2&gt;次，即**&lt;参数1&gt; * &lt;参数2&gt;**<br>用 z3 约束求解</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br><br>solver = Solver()<br><br>flags = [Real(<span class="hljs-string">f&#x27;flag<span class="hljs-subst">&#123;i&#125;</span>&#x27;</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>)]<br><br>solver.add(<br>    (flags[<span class="hljs-number">23</span>] ** <span class="hljs-number">2</span>) + (flags[<span class="hljs-number">12</span>] ** <span class="hljs-number">2</span>) + (flags[<span class="hljs-number">1</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">222</span> * flags[<span class="hljs-number">24</span>]) + (flags[<span class="hljs-number">22</span>] ** <span class="hljs-number">2</span>) +<br>    (flags[<span class="hljs-number">31</span>] ** <span class="hljs-number">2</span>) + (flags[<span class="hljs-number">26</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">178</span> * flags[<span class="hljs-number">9</span>]) - (<span class="hljs-number">232</span> * flags[<span class="hljs-number">29</span>]) + (flags[<span class="hljs-number">17</span>] ** <span class="hljs-number">2</span>) -<br>    (<span class="hljs-number">150</span> * flags[<span class="hljs-number">23</span>]) - (<span class="hljs-number">226</span> * flags[<span class="hljs-number">6</span>]) - (<span class="hljs-number">110</span> * flags[<span class="hljs-number">7</span>]) + (flags[<span class="hljs-number">19</span>] ** <span class="hljs-number">2</span>) + (flags[<span class="hljs-number">2</span>] ** <span class="hljs-number">2</span>) -<br>    (<span class="hljs-number">176</span> * flags[<span class="hljs-number">0</span>]) + (flags[<span class="hljs-number">10</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">198</span> * flags[<span class="hljs-number">12</span>]) + (flags[<span class="hljs-number">24</span>] ** <span class="hljs-number">2</span>) + (flags[<span class="hljs-number">9</span>] ** <span class="hljs-number">2</span>) -<br>    (<span class="hljs-number">168</span> * flags[<span class="hljs-number">3</span>]) + (flags[<span class="hljs-number">8</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">134</span> * flags[<span class="hljs-number">2</span>]) + (flags[<span class="hljs-number">14</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">170</span> * flags[<span class="hljs-number">13</span>]) +<br>    (flags[<span class="hljs-number">4</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">142</span> * flags[<span class="hljs-number">10</span>]) + (flags[<span class="hljs-number">27</span>] ** <span class="hljs-number">2</span>) + (flags[<span class="hljs-number">15</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">224</span> * flags[<span class="hljs-number">15</span>]) +<br>    (flags[<span class="hljs-number">16</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">230</span> * flags[<span class="hljs-number">11</span>]) - (<span class="hljs-number">178</span> * flags[<span class="hljs-number">1</span>]) + (flags[<span class="hljs-number">28</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">246</span> * flags[<span class="hljs-number">5</span>]) -<br>    (<span class="hljs-number">168</span> * flags[<span class="hljs-number">17</span>]) + (flags[<span class="hljs-number">30</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">220</span> * flags[<span class="hljs-number">21</span>]) - (<span class="hljs-number">212</span> * flags[<span class="hljs-number">22</span>]) - (<span class="hljs-number">232</span> * flags[<span class="hljs-number">16</span>]) +<br>    (flags[<span class="hljs-number">25</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">140</span> * flags[<span class="hljs-number">4</span>]) - (<span class="hljs-number">250</span> * flags[<span class="hljs-number">31</span>]) - (<span class="hljs-number">150</span> * flags[<span class="hljs-number">28</span>]) + (flags[<span class="hljs-number">11</span>] ** <span class="hljs-number">2</span>) +<br>    (flags[<span class="hljs-number">13</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">234</span> * flags[<span class="hljs-number">14</span>]) + (flags[<span class="hljs-number">7</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">174</span> * flags[<span class="hljs-number">8</span>]) + (flags[<span class="hljs-number">3</span>] ** <span class="hljs-number">2</span>) -<br>    (<span class="hljs-number">242</span> * flags[<span class="hljs-number">25</span>]) + (flags[<span class="hljs-number">29</span>] ** <span class="hljs-number">2</span>) + (flags[<span class="hljs-number">5</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">142</span> * flags[<span class="hljs-number">30</span>]) - (<span class="hljs-number">170</span> * flags[<span class="hljs-number">26</span>]) -<br>    (<span class="hljs-number">176</span> * flags[<span class="hljs-number">19</span>]) + (flags[<span class="hljs-number">0</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">168</span> * flags[<span class="hljs-number">27</span>]) + (flags[<span class="hljs-number">20</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">212</span> * flags[<span class="hljs-number">20</span>]) +<br>    (flags[<span class="hljs-number">21</span>] ** <span class="hljs-number">2</span>) + (flags[<span class="hljs-number">6</span>] ** <span class="hljs-number">2</span>) + (flags[<span class="hljs-number">18</span>] ** <span class="hljs-number">2</span>) - (<span class="hljs-number">178</span> * flags[<span class="hljs-number">18</span>]) + <span class="hljs-number">297412</span> == <span class="hljs-number">0</span><br>)<br><br><span class="hljs-keyword">if</span> solver.check() == sat:<br>    model = solver.model()<br>    result = [<span class="hljs-built_in">str</span>(model[flag]) <span class="hljs-keyword">if</span> model[flag] <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">for</span> flag <span class="hljs-keyword">in</span> flags]<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27; &#x27;</span>.join(result))<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No solution found.&quot;</span>)<br><br><span class="hljs-comment">#88 89 67 84 70 123 113 55 87 89 71 115 99 85 117 112 116 84 89 88 106 110 106 75 111 121 85 84 75 116 71 125</span><br></code></pre></td></tr></table></figure><p>这个好像要把类型设置成<strong>Real</strong>才跑得出来，用 Int 类型没解出来<br>把结果扔 CyberChef 里解<br><img src="/../images/XYCTF/math.png"><br>flag 为 <code>XYCTF&#123;q7WYGscUuptTYXjnjKoyUTKtG&#125;</code></p><h3 id="Trustme"><a href="#Trustme" class="headerlink" title="Trustme"></a>Trustme</h3><p>jadx 打开，在 MainAcitity 里看到标准RC4，并且给出了密文和密钥<br>先解一下这个RC4</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">rc4_dec</span>(<span class="hljs-params">ciphertext, key</span>):<br>    S = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>))<br>    j = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        j = (j + S[i] + key[i % <span class="hljs-built_in">len</span>(key)]) % <span class="hljs-number">256</span><br>        S[i], S[j] = S[j], S[i]<br> <br>    i = j = <span class="hljs-number">0</span><br>    plaintext = []<br>    <span class="hljs-keyword">for</span> byte <span class="hljs-keyword">in</span> ciphertext:<br>        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span><br>        j = (j + S[i]) % <span class="hljs-number">256</span><br>        S[i], S[j] = S[j], S[i]<br>        k = S[(S[i] + S[j]) % <span class="hljs-number">256</span>]<br>        plaintext.append(byte ^ k)<br> <br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">bytes</span>(plaintext)<br>enc_data = [<span class="hljs-number">0x5A</span>,<span class="hljs-number">0X3C</span>,<span class="hljs-number">0X46</span>,<span class="hljs-number">0XE0</span>,<span class="hljs-number">0X22</span>,<span class="hljs-number">0X8B</span>,<span class="hljs-number">0X44</span>,<span class="hljs-number">0X4D</span>,<span class="hljs-number">0XEC</span>,<span class="hljs-number">0XC7</span>,<span class="hljs-number">0X65</span>,<span class="hljs-number">0X1C</span>,<span class="hljs-number">0X8A</span>,<span class="hljs-number">0X7C</span>,<span class="hljs-number">0XA9</span>,<span class="hljs-number">0X3B</span>,<span class="hljs-number">0XA4</span>,<span class="hljs-number">0XCB</span>,<span class="hljs-number">0X35</span>,<span class="hljs-number">0XA4</span>,<span class="hljs-number">0X6F</span>,<span class="hljs-number">0X7E</span>,<span class="hljs-number">0XB5</span>,<span class="hljs-number">0X89</span>,<span class="hljs-number">0XBE</span>,<span class="hljs-number">0XF4</span>]<br>key = <span class="hljs-string">b&#x27;XYCTF&#x27;</span><br> <br>dec_data = rc4_dec(enc_data,key)<br><span class="hljs-built_in">print</span>(dec_data.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br></code></pre></td></tr></table></figure><p>输出为 <code>The Real username is admin</code><br>在手机上试试 SQL 注入，username 填<code>admin&#39; --</code>，密码随意<br>这样拼接后，SQL语句变成<br><code>SELECT * FROM users WHERE username = &#39;admin&#39; -- &#39; AND password = &#39;anything&#39;;</code><br><img src="/../images/XYCTF/trust1.png"><br><img src="/../images/XYCTF/trust2.png"><br>flag 为 <code>XYCTF&#123;And0r1d_15_V3ryEasy&#125;</code></p><h3 id="今夕是何年"><a href="#今夕是何年" class="headerlink" title="今夕是何年"></a>今夕是何年</h3><p>题目说的运行就能出 flag，但是在 win 和 linux 上都运行不了，用 <code>DIE</code>查看文件信息<br><img src="/../images/XYCTF/jinxi.png"><br>well，是龙，在 Ubuntu 上装个 qemu-loongarch64，直接运行<br><img src="/../images/XYCTF/jinxi1.png"><br>flag 为 <code>XYCTF&#123;7e5165f1-385d-4fe9-1f2664d833a648a4&#125;</code></p><h3 id="easy-language"><a href="#easy-language" class="headerlink" title="easy language"></a>easy language</h3><p><del>三分逆向七分猜</del>，ida 查找字符串，看到 <strong>AES-ECB</strong><br><img src="/../images/XYCTF/ez1.png"><br>在后面又看到 16 字节的字符串，密钥 get，那密钥上面的就是密文了<br><img src="/../images/XYCTF/ez.png"><br>CyberChef 一把梭<br><img src="/../images/XYCTF/ez2.png"><br>flag 为 <code>XYCTF&#123;y0u_@r3_v3ry_g00d_a7_E_l@ngu@ge&#125;</code></p><h3 id="舔狗四部曲–相逢已是上上签"><a href="#舔狗四部曲–相逢已是上上签" class="headerlink" title="舔狗四部曲–相逢已是上上签"></a>舔狗四部曲–相逢已是上上签</h3><p>直接用 ida 打开看又是一坨，题目提示 PE，用 010Editor 打开<br><img src="/../images/XYCTF/xf.png"><br>64字节的 DOS 头(前四行)的最后一个成员是指向 PE 头的偏移地址的，从突出可以看出这道题两者是对不上的，被魔改了，直接手动改回来，把<code>10 01 00 00</code>改成<code>00 01 00 00</code>，保存，把改后的 exe 再扔进 DIE 看都能发现一切正常了<br><img src="/../images/XYCTF/xf1.png"><br>ida 看 main 函数，先用 z3 求出 key，加密函数是 xxtea<br>求解key</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br>solver = Solver()<br><br>keys=[Int(<span class="hljs-string">f&#x27;key<span class="hljs-subst">&#123;i&#125;</span>&#x27;</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">6</span>)]<br><br>solver.add(<span class="hljs-number">532</span> * keys[<span class="hljs-number">5</span>]+ <span class="hljs-number">829</span> * keys[<span class="hljs-number">4</span>]+ <span class="hljs-number">258</span> *keys[<span class="hljs-number">3</span>]+ <span class="hljs-number">811</span> * keys[<span class="hljs-number">2</span>]+ <span class="hljs-number">997</span> * keys[<span class="hljs-number">1</span>] + <span class="hljs-number">593</span> * keys[<span class="hljs-number">0</span>]== <span class="hljs-number">292512</span>)<br>solver.add(<span class="hljs-number">576</span>*keys[<span class="hljs-number">5</span>]+ <span class="hljs-number">695</span> * keys[<span class="hljs-number">4</span>]+ <span class="hljs-number">602</span> *keys[<span class="hljs-number">3</span>]+ <span class="hljs-number">328</span> * keys[<span class="hljs-number">2</span>]+ <span class="hljs-number">686</span> * keys[<span class="hljs-number">1</span>] + <span class="hljs-number">605</span> * keys[<span class="hljs-number">0</span>]== <span class="hljs-number">254496</span>)<br>solver.add(<span class="hljs-number">580</span>*keys[<span class="hljs-number">5</span>]+ <span class="hljs-number">448</span> * keys[<span class="hljs-number">4</span>]+ <span class="hljs-number">756</span> *keys[<span class="hljs-number">3</span>]+ <span class="hljs-number">449</span>* keys[<span class="hljs-number">2</span>]+ <span class="hljs-number">512</span> * keys[<span class="hljs-number">1</span>] + <span class="hljs-number">373</span>* keys[<span class="hljs-number">0</span>]== <span class="hljs-number">222479</span>)  <span class="hljs-comment"># &lt;&lt;9改成*512(512 = 2^9)</span><br>solver.add(<span class="hljs-number">597</span>*keys[<span class="hljs-number">5</span>]+ <span class="hljs-number">855</span> * keys[<span class="hljs-number">4</span>]+ <span class="hljs-number">971</span> *keys[<span class="hljs-number">3</span>]+ <span class="hljs-number">422</span> * keys[<span class="hljs-number">2</span>]+ <span class="hljs-number">635</span> * keys[<span class="hljs-number">1</span>] + <span class="hljs-number">560</span> * keys[<span class="hljs-number">0</span>]== <span class="hljs-number">295184</span>)<br>solver.add(<span class="hljs-number">524</span>*keys[<span class="hljs-number">5</span>]+ <span class="hljs-number">324</span> * keys[<span class="hljs-number">4</span>]+ <span class="hljs-number">925</span> *keys[<span class="hljs-number">3</span>]+ <span class="hljs-number">388</span> * keys[<span class="hljs-number">2</span>]+ <span class="hljs-number">507</span> * keys[<span class="hljs-number">1</span>] + <span class="hljs-number">717</span> * keys[<span class="hljs-number">0</span>]== <span class="hljs-number">251887</span>)<br>solver.add(<span class="hljs-number">414</span>*keys[<span class="hljs-number">5</span>]+ <span class="hljs-number">495</span> * keys[<span class="hljs-number">4</span>]+ <span class="hljs-number">518</span> *keys[<span class="hljs-number">3</span>]+ <span class="hljs-number">884</span> * keys[<span class="hljs-number">2</span>]+ <span class="hljs-number">368</span> * keys[<span class="hljs-number">1</span>] + <span class="hljs-number">312</span> * keys[<span class="hljs-number">0</span>]== <span class="hljs-number">211260</span>)<br><br><span class="hljs-keyword">if</span> solver.check() == sat:<br>    model = solver.model()<br>    key_values = [model[k].as_long() <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> keys]<br>    <span class="hljs-comment"># 将数值转换为字符</span><br>    key = <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-built_in">chr</span>(val) <span class="hljs-keyword">for</span> val <span class="hljs-keyword">in</span> key_values)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Find key: <span class="hljs-subst">&#123;key&#125;</span>&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No solution found.&quot;</span>)<br><br><span class="hljs-comment"># Find key: XYCTF!   </span><br></code></pre></td></tr></table></figure><p>求解flag</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdint.h&gt;</span></span><br><br><span class="hljs-comment">// 定义魔改参数</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DELTA 0x61C88647</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ROUNDS 12 <span class="hljs-comment">//ida 中直接看可以算出来</span></span><br><br><span class="hljs-comment">// 魔改XXTEA</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span>* v, <span class="hljs-type">int</span> n, <span class="hljs-type">uint8_t</span>* key)</span> </span>&#123;<br>    <span class="hljs-type">uint32_t</span> sum = <span class="hljs-number">0x9E3779B9</span> * ROUNDS; <span class="hljs-comment">// 初始sum = -DELTA * ROUNDS (无符号处理)</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; ROUNDS; i++) &#123;<br>        <span class="hljs-type">uint32_t</span> v6 = (sum &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">5</span>;   <span class="hljs-comment">// 计算轮次相关索引</span><br>        <br>        <span class="hljs-comment">// 先处理最后一个块</span><br>        <span class="hljs-type">uint32_t</span> v9 = v[n<span class="hljs-number">-2</span>];<br>        <span class="hljs-type">int</span> idx = (v6 ^ ((n<span class="hljs-number">-1</span>) &amp; <span class="hljs-number">5</span>)) % <span class="hljs-number">6</span>;<br>        <span class="hljs-type">uint32_t</span> k = key[idx];<br>        <span class="hljs-type">uint32_t</span> expr = ((v9 ^ k) + (v[<span class="hljs-number">0</span>] ^ sum)) ^ <br>                        (((v9 &lt;&lt; <span class="hljs-number">4</span>) ^ (v[<span class="hljs-number">0</span>] &gt;&gt; <span class="hljs-number">3</span>)) + <br>                        ((v[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">2</span>) ^ (v9 &gt;&gt; <span class="hljs-number">5</span>)));<br>        v[n<span class="hljs-number">-1</span>] -= expr;<br>        <br>        <span class="hljs-comment">// 逆序处理前n-1个块</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = n<span class="hljs-number">-2</span>; j &gt;= <span class="hljs-number">0</span>; j--) &#123;<br>            v9 = (j == <span class="hljs-number">0</span>) ? v[n<span class="hljs-number">-1</span>] : v[j<span class="hljs-number">-1</span>];  <span class="hljs-comment">// 获取前一个块的值</span><br>            idx = (v6 ^ (j &amp; <span class="hljs-number">5</span>)) % <span class="hljs-number">6</span>;         <span class="hljs-comment">// 计算密钥索引</span><br>            k = key[idx];<br>            expr = ((v9 ^ k) + (v[j<span class="hljs-number">+1</span>] ^ sum)) ^ <br>                   (((v9 &lt;&lt; <span class="hljs-number">4</span>) ^ (v[j<span class="hljs-number">+1</span>] &gt;&gt; <span class="hljs-number">3</span>)) + <br>                   ((v[j<span class="hljs-number">+1</span>] &lt;&lt; <span class="hljs-number">2</span>) ^ (v9 &gt;&gt; <span class="hljs-number">5</span>)));<br>            v[j] -= expr;<br>        &#125;<br>        sum += DELTA;  <span class="hljs-comment">// 解密时sum递增</span><br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-comment">// 密文数据（小端序）</span><br>    <span class="hljs-type">uint32_t</span> cipher[] = &#123;<br>        <span class="hljs-number">0x66697271</span>, <span class="hljs-number">0x896E2285</span>, <span class="hljs-number">0xC5188C1B</span>, <span class="hljs-number">0x72BCFD03</span>,<br>        <span class="hljs-number">0x538011CA</span>, <span class="hljs-number">0x4DA146AC</span>, <span class="hljs-number">0x86630D6B</span>, <span class="hljs-number">0xF89797F0</span><br>    &#125;;<br>    <br>    <span class="hljs-comment">// 密钥&quot;XYCTF!&quot;的字节数组</span><br>    <span class="hljs-type">uint8_t</span> key[] = &#123;<span class="hljs-string">&#x27;X&#x27;</span>, <span class="hljs-string">&#x27;Y&#x27;</span>, <span class="hljs-string">&#x27;C&#x27;</span>, <span class="hljs-string">&#x27;T&#x27;</span>, <span class="hljs-string">&#x27;F&#x27;</span>, <span class="hljs-string">&#x27;!&#x27;</span>&#125;;<br>    <br>    <span class="hljs-comment">// 执行解密</span><br>    <span class="hljs-built_in">decrypt</span>(cipher, <span class="hljs-number">8</span>, key);<br>    <br>    <span class="hljs-comment">// 输出解密后的16进制和ASCII</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Decrypted Hex:\n&quot;</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%08X &quot;</span>, cipher[i]);<br>    &#125;<br>    <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n\nASCII:\n&quot;</span>);<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* flag = (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>*)cipher;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, flag[i]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">// Decrypted Hex:</span><br><span class="hljs-comment">// 54435958 58587B46 5F414554 5F444E41 315F335A 30535F73 7361655F 7D212179 </span><br><br><span class="hljs-comment">// ASCII:</span><br><span class="hljs-comment">// XYCTF&#123;XXTEA_AND_Z3_1s_S0_easy!!&#125;</span><br></code></pre></td></tr></table></figure><p>flag 为<code>XYCTF&#123;XXTEA_AND_Z3_1s_S0_easy!!&#125;</code></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>RE中的密码学</title>
    <link href="/2025/05/02/crypto/"/>
    <url>/2025/05/02/crypto/</url>
    
    <content type="html"><![CDATA[<h2 id="流密码"><a href="#流密码" class="headerlink" title="流密码"></a>流密码</h2><p>特征就是密文仅由明文与密钥流经过异或运算得到。只要识别出流密码,我们就可以选择动态调试获取密钥流或者直接把目标密文 patch 进去拿输出就可以了,常见的有 RC4、Salsa20 以及 ChaCha20.</p><h3 id="RC4"><a href="#RC4" class="headerlink" title="RC4"></a>RC4</h3><p><strong>特征识别</strong></p><ul><li>长度为 256 的 S 盒，且在每一步生成与加密过程中都伴随着 S 盒的 swap 操作</li><li>很多取模操作</li><li>有多个次数为 256 的循环</li><li>最后的操作为异或</li></ul><p><strong>加密流程简述</strong></p><ul><li>先创建一个长度为 256 的 S 盒，初始值为 0~255升序排列，然后根据密钥，用 ksa (密钥调度算法)对 S 盒进行替换,完成后将不再使用密钥</li><li>PRGA （伪随机生成算法）使用两个变量 i 和 j，循环动态变化，在每步中：i 自增 1，j 根据 S[i]变化；交换 S[i] 和 S[j]；从 S[(S[i] + S[j]) % 256] 位置取出一个字节作为密钥流字节 K。最后用这个密钥流字节 K，和明文字节做异或</li></ul><p><strong>代码实现</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">//初始化 S 盒（0~255）并根据密钥打乱</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">KSA</span><span class="hljs-params">(vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt;&amp; S,<span class="hljs-type">const</span> vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt;&amp; key)</span></span>&#123;<br>    <span class="hljs-type">int</span> key_length=key.<span class="hljs-built_in">size</span>();<br>    <span class="hljs-comment">//初始化 S </span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">256</span>;++i)&#123;<br>        S[i]=i;<br>    &#125;<br>    <span class="hljs-comment">//根据密钥打乱 S</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">256</span>;++j)&#123;<br>        j=(j+S[j]+key[j%key_length])%<span class="hljs-number">256</span>;<br>        <span class="hljs-built_in">swap</span>(S[j],S[j]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//生成密钥流，并加密/解密输入数据</span><br><span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt; <span class="hljs-title">RC4</span><span class="hljs-params">(<span class="hljs-type">const</span> vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt;&amp; key,<span class="hljs-type">const</span> vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt;&amp; data)</span></span>&#123;<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt; <span class="hljs-title">S</span><span class="hljs-params">(<span class="hljs-number">256</span>)</span></span>;<br>    <span class="hljs-built_in">KSA</span>(S,key);<br>    <span class="hljs-type">int</span> i=<span class="hljs-number">0</span>,j=<span class="hljs-number">0</span>;<br>    vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt; output;<br>    output.<span class="hljs-built_in">reserve</span>(data.<span class="hljs-built_in">size</span>());<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">size_t</span> k=<span class="hljs-number">0</span>;k&lt;data.<span class="hljs-built_in">size</span>();++k)&#123;<br>        i=(i<span class="hljs-number">+1</span>)%<span class="hljs-number">256</span>;<br>        j=(j+S[i])%<span class="hljs-number">256</span>;<br>        <span class="hljs-built_in">swap</span>(S[i],S[j]);<br>        <span class="hljs-type">int</span> t=(S[i]+S[j])%<span class="hljs-number">256</span>;<br>        <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> K=S[t];<br>        output.<span class="hljs-built_in">push_back</span>(data[k]^K); <span class="hljs-comment">//明文字节 XOR 密钥流字节</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> output;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">print_hex</span><span class="hljs-params">(<span class="hljs-type">const</span> vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt;&amp; data)</span></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> c:data)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%02X &quot;</span>,c);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    string key_str=<span class="hljs-string">&quot;OceanBlue&quot;</span>;<br>    string plaintext_str=<span class="hljs-string">&quot;ISeeYourSecretMessage&quot;</span>; <span class="hljs-comment">//明文</span><br>    <span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt; <span class="hljs-title">key</span><span class="hljs-params">(key_str.begin(),key_str.end())</span></span>;<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt; <span class="hljs-title">plaintext</span><span class="hljs-params">(plaintext_str.begin(),plaintext_str.end())</span></span>;<br>    <span class="hljs-comment">//加密</span><br>    vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt; ciphertext=<span class="hljs-built_in">RC4</span>(key,plaintext);<br>    cout&lt;&lt;<span class="hljs-string">&quot;hex:&quot;</span>;<br>    <span class="hljs-built_in">print_hex</span>(ciphertext);<br>    <span class="hljs-comment">//解密</span><br>    vector&lt;<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>&gt; decryptedtext=<span class="hljs-built_in">RC4</span>(key,ciphertext);<br>    cout &lt;&lt; <span class="hljs-string">&quot;encoded: &quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> c : decryptedtext) &#123;<br>        cout &lt;&lt; c;<br>    &#125;<br>    cout &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="ChaCha20"><a href="#ChaCha20" class="headerlink" title="ChaCha20"></a>ChaCha20</h3><ul><li>20 表示该算法有 20 轮加密</li><li>有一个初始矩阵，矩阵的输入为一个256位的密钥、64位随机数、64位计数器值以及4×32位的常数，它们均填充在32位整型数组中作为初始矩阵</li><li>识别ChaCha20的主要特征是四个常数0x61707865 0x3320646e 0x79622d32 0x6b206574按小端存储转为ASCII字符是”expand 32-byte k”</li></ul><h2 id="块密码"><a href="#块密码" class="headerlink" title="块密码"></a>块密码</h2><p>块密码是一种对固定长度的明文数据块进行加密的对称加密算法，基本思想是：将明文分成若干个固定长度的数据块（如64位或128位）；<br>每个数据块独立或依赖某种模式（如CBC、EBC等）进行加密；加密和解密使用相同的密钥；常见的块加密算法包括：DES、AES、TEA等</p><h3 id="TEA"><a href="#TEA" class="headerlink" title="TEA"></a>TEA</h3><p><strong>特征识别</strong></p><ul><li>有一个 delta 常量，值是0x9e3779b9(可能会被魔改)</li><li>每轮先进行 sum+&#x3D;delta，再进行 左移4，异或，右移5</li></ul><p><strong>加密流程简述</strong></p><ul><li>将64位明文分成两个部分，v0 和 v1，各32位</li><li>将128位的密钥分成四个32位(4字节)的子密钥 k1,k2,k3,k4</li><li>初始化常量 delta，初始化sum&#x3D;0</li><li>加密通常为 32 轮循环，每次包括两轮，共64轮</li></ul><p><strong>代码实现</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">encrypt</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> *v, <span class="hljs-type">uint32_t</span> *k)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">uint32_t</span> v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>], sum = <span class="hljs-number">0</span>, i;<br>    <span class="hljs-type">uint32_t</span> delta = <span class="hljs-number">0x9e3779b9</span>;<br>    <span class="hljs-type">uint32_t</span> k0 = k[<span class="hljs-number">0</span>], k1 = k[<span class="hljs-number">1</span>], k2 = k[<span class="hljs-number">2</span>], k3 = k[<span class="hljs-number">3</span>];<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)<br>    &#123;<br>        sum += delta;<br>        v0 += ((v1 &lt;&lt; <span class="hljs-number">4</span>) + k0) ^ (v1 + sum) ^ ((v1 &gt;&gt; <span class="hljs-number">5</span>) + k1);<br>        v1 += ((v0 &lt;&lt; <span class="hljs-number">4</span>) + k2) ^ (v0 + sum) ^ ((v0 &gt;&gt; <span class="hljs-number">5</span>) + k3);<br>    &#125;<br>    v[<span class="hljs-number">0</span>] = v0;<br>    v[<span class="hljs-number">1</span>] = v1;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> *v, <span class="hljs-type">uint32_t</span> *k)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">uint32_t</span> v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>], i;<br>    <span class="hljs-type">uint32_t</span> delta = <span class="hljs-number">0x9e3779b9</span>;<br>    <span class="hljs-type">uint32_t</span> sum = delta * <span class="hljs-number">32</span>;<br>    <span class="hljs-type">uint32_t</span> k0 = k[<span class="hljs-number">0</span>], k1 = k[<span class="hljs-number">1</span>], k2 = k[<span class="hljs-number">2</span>], k3 = k[<span class="hljs-number">3</span>];<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)<br>    &#123;<br>        v1 -= ((v0 &lt;&lt; <span class="hljs-number">4</span>) + k2) ^ (v0 + sum) ^ ((v0 &gt;&gt; <span class="hljs-number">5</span>) + k3);<br>        v0 -= ((v1 &lt;&lt; <span class="hljs-number">4</span>) + k0) ^ (v1 + sum) ^ ((v1 &gt;&gt; <span class="hljs-number">5</span>) + k1);<br>        sum -= delta;<br>    &#125;<br>    v[<span class="hljs-number">0</span>] = v0;<br>    v[<span class="hljs-number">1</span>] = v1;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="XTEA"><a href="#XTEA" class="headerlink" title="XTEA"></a>XTEA</h3><p>XTEA 是 TEA 的改进版，增加了更多的密钥表，移位和异或操作等,TEA 的子密钥是通过下标取的，XTEA 的子密钥是通过计算来取,注意<code>sum+key[sum&amp;3]</code>和<code>sum+key[(sum&gt;&gt;11)&amp;3]</code><br><strong>代码实现</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">encrypt</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num_rounds,<span class="hljs-type">uint32_t</span> v[<span class="hljs-number">2</span>],<span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> key[<span class="hljs-number">4</span>] )</span></span>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">uint32_t</span> v0=v[<span class="hljs-number">0</span>],v1=v[<span class="hljs-number">1</span>],sum=<span class="hljs-number">0</span>,delta=<span class="hljs-number">0x9e3779b9</span>;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;num_rounds;i++)&#123;<br>        v0+=(((v1&lt;&lt;<span class="hljs-number">4</span>)^(v1&gt;&gt;<span class="hljs-number">5</span>))+v1)^(sum+key[sum&amp;<span class="hljs-number">3</span>]);<br>        sum+=delta;<br>        v1+=(((v0&lt;&lt;<span class="hljs-number">4</span>)^(v0&gt;&gt;<span class="hljs-number">5</span>))+v0)^(sum+key[(sum&gt;&gt;<span class="hljs-number">11</span>)&amp;<span class="hljs-number">3</span>]);<br>    &#125;<br>    v[<span class="hljs-number">0</span>]=v0;<br>    v[<span class="hljs-number">1</span>]=v1;<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> num_rounds,<span class="hljs-type">uint32_t</span> v[<span class="hljs-number">2</span>],<span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> key[<span class="hljs-number">4</span>])</span></span>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">uint32_t</span> v0=v[<span class="hljs-number">0</span>],v1=v[<span class="hljs-number">1</span>],delta=<span class="hljs-number">0x9e3779b9</span>,sum=delta*num_rounds;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;num_rounds;i++)&#123;<br>        v1-=(((v0&lt;&lt;<span class="hljs-number">4</span>)^(v0&gt;&gt;<span class="hljs-number">5</span>))+v0)^(sum+key[(sum&gt;&gt;<span class="hljs-number">11</span>)&amp;<span class="hljs-number">3</span>]);<br>        sum-=delta;<br>        v0-=(((v1&lt;&lt;<span class="hljs-number">4</span>)^(v1&gt;&gt;<span class="hljs-number">5</span>))+v1)^(sum+key[sum&amp;<span class="hljs-number">3</span>]);<br>    &#125;<br>    v[<span class="hljs-number">0</span>]=v0;<br>    v[<span class="hljs-number">1</span>]=v1;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="XXTEA"><a href="#XXTEA" class="headerlink" title="XXTEA"></a>XXTEA</h3><ul><li>明文块的大小可以是任意的(最少两个32位即64位)，被分割为若干个32位的整数（即4字节为一个单位），形成一个数组 v[0] … v[n-1]</li><li>采用以下混合函数来确保扩散和混淆：<br><code>MX = ((z &gt;&gt; 5 ^ y &lt;&lt; 2) + (y &gt;&gt; 3 ^ z &lt;&lt; 4)) ^ ((sum ^ y) + (k[p &amp; 3 ^ e] ^ z));</code></li></ul><p><strong>解密脚本</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">define</span> DELTA 0x9e3779b9 </span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;    <br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> v[] = &#123;<span class="hljs-number">0xE74EB323</span>, <span class="hljs-number">0xB7A72836</span>, <span class="hljs-number">0x59CA6FE2</span>, <span class="hljs-number">0X967CC5C1</span>, <span class="hljs-number">0XE7802674</span>, <span class="hljs-number">0X3D2D54E6</span>, <span class="hljs-number">0X8A9D0356</span>, <span class="hljs-number">0X99DCC39C</span>, <span class="hljs-number">0X7026D8ED</span>, <span class="hljs-number">0x6A33FDAD</span>, <span class="hljs-number">0xF496550A</span>, <span class="hljs-number">0x5C9C6F9E</span>, <span class="hljs-number">0x1BE5D04C</span>, <span class="hljs-number">0x6723AE17</span>, <span class="hljs-number">0x5270A5C2</span>, <span class="hljs-number">0xAC42130A</span>, <span class="hljs-number">0x84BE67B2</span>, <span class="hljs-number">0x705CC779</span>, <span class="hljs-number">0x5C513D98</span>, <span class="hljs-number">0xFB36DA2D</span>, <span class="hljs-number">0x22179645</span>, <span class="hljs-number">0x5CE3529D</span>, <span class="hljs-number">0XD189E1FB</span>, <span class="hljs-number">0XE85BD489</span>, <span class="hljs-number">0X73C8D11F</span>, <span class="hljs-number">0X54B5C196</span>, <span class="hljs-number">0XB67CB490</span>, <span class="hljs-number">0X2117E4CA</span>, <span class="hljs-number">0X9DE3F994</span>, <span class="hljs-number">0X2F5AA1AA</span>, <span class="hljs-number">0XA7E801FD</span>, <span class="hljs-number">0XC30D6EAB</span>, <span class="hljs-number">0X1BADDC9C</span>, <span class="hljs-number">0X3453B04A</span>, <span class="hljs-number">0X92A406F9</span>&#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> key[] = &#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>&#125;;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> y, z, p, rounds, e;<br>    <span class="hljs-type">int</span> n = <span class="hljs-number">35</span>; <span class="hljs-comment">// 35个32位整数</span><br>    <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>;<br>    rounds = <span class="hljs-number">6</span> + <span class="hljs-number">52</span> / n;<br>    y = v[<span class="hljs-number">0</span>];<br>    sum = (rounds * DELTA) &amp; <span class="hljs-number">0xffffffff</span>; <span class="hljs-comment">// 取后八位</span><br>    <span class="hljs-keyword">do</span>                                   <br>    &#123;<br>        e = sum &gt;&gt; <span class="hljs-number">2</span> &amp; <span class="hljs-number">3</span>;<br>        <span class="hljs-keyword">for</span> (p = n - <span class="hljs-number">1</span>; p &gt; <span class="hljs-number">0</span>; p--) <span class="hljs-comment">// 34次循环</span><br>        &#123;<br>            z = v[p - <span class="hljs-number">1</span>];<br>            v[p] = (v[p] - ((((z &gt;&gt; <span class="hljs-number">5</span>) ^ (y &lt;&lt; <span class="hljs-number">2</span>)) + ((y &gt;&gt; <span class="hljs-number">3</span>) ^ (z &lt;&lt; <span class="hljs-number">4</span>))) ^ ((key[(p ^ e) &amp; <span class="hljs-number">3</span>] ^ z) + (y ^ sum)))) &amp; <span class="hljs-number">0xffffffff</span>;<br>            y = v[p];<br>        &#125;<br>        z = v[n - <span class="hljs-number">1</span>];<br>        v[<span class="hljs-number">0</span>] = (v[<span class="hljs-number">0</span>] - (((key[(p ^ e) &amp; <span class="hljs-number">3</span>] ^ z) + (y ^ sum)) ^ (((y &lt;&lt; <span class="hljs-number">2</span>) ^ (z &gt;&gt; <span class="hljs-number">5</span>)) + ((z &lt;&lt; <span class="hljs-number">4</span>) ^ (y &gt;&gt; <span class="hljs-number">3</span>))))) &amp; <span class="hljs-number">0xffffffff</span>;<br>        y = v[<span class="hljs-number">0</span>];<br>        sum = (sum - DELTA) &amp; <span class="hljs-number">0xffffffff</span>;<br>    &#125; <span class="hljs-keyword">while</span> (--rounds);<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, v[i]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h3><p>分组加密算法，明文为64位(8字节)一组，密钥的长度为64位(8字节)(3DES用192位密钥)，但每8位中的最后一位用于奇偶校验，实际有效密钥长度为56位</p><p><strong>特征识别</strong></p><ul><li>DES共有8个不同的S盒（S1~S8），每个S盒是一个4行×16列的查找表</li><li>多个置换表对数据位进行重新排列:32位P盒、48位E盒、56位PC-1、64位IP&#x2F;IP⁻¹</li></ul><p><strong>代码实现</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>bitset&lt;48&gt; subkey[<span class="hljs-number">16</span>];<br><br><span class="hljs-function">bitset&lt;64&gt; <span class="hljs-title">CharsToBitset</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> str[<span class="hljs-number">8</span>])</span></span>;<br><span class="hljs-function">string <span class="hljs-title">BitsetToString</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">64</span>&gt; bits)</span></span>;<br><span class="hljs-function">bitset&lt;64&gt; <span class="hljs-title">IP</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">64</span>&gt; &amp;src)</span></span>;<br><span class="hljs-function">bitset&lt;64&gt; <span class="hljs-title">InverseIP</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">64</span>&gt; &amp;src)</span></span>;<br><span class="hljs-function">bitset&lt;56&gt; <span class="hljs-title">PCOne</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">56</span>&gt; src)</span></span>;<br><span class="hljs-function">bitset&lt;48&gt; <span class="hljs-title">PCTwo</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">56</span>&gt; src)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Subkey</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">64</span>&gt; key)</span></span>;<br><span class="hljs-function">bitset&lt;28&gt; <span class="hljs-title">leftShift</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">28</span>&gt; temKey, <span class="hljs-type">int</span> r)</span></span>;<br><span class="hljs-function">bitset&lt;32&gt; <span class="hljs-title">f</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">32</span>&gt; right, bitset&lt;<span class="hljs-number">48</span>&gt; subkey)</span></span>;<br><span class="hljs-function">bitset&lt;48&gt; <span class="hljs-title">Expend</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">32</span>&gt; src)</span></span>;<br><span class="hljs-function">bitset&lt;4&gt; <span class="hljs-title">SBox</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">6</span>&gt; tem, <span class="hljs-type">int</span> *sbox)</span></span>;<br><span class="hljs-function">bitset&lt;32&gt; <span class="hljs-title">P</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">32</span>&gt; src)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Decrypt</span><span class="hljs-params">(string &amp;c)</span></span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Encrypt</span><span class="hljs-params">(string &amp;c)</span></span>;<br><br><span class="hljs-function">bitset&lt;64&gt; <span class="hljs-title">CharsToBitset</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> str[<span class="hljs-number">8</span>])</span></span><br><span class="hljs-function"></span>&#123;<br>bitset&lt;64&gt; bits;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++)<br>&#123;<br>bits[i * <span class="hljs-number">8</span> + j] = ((str[i] &gt;&gt; j) &amp; <span class="hljs-number">1</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">return</span> bits;<br>&#125;<br><br><span class="hljs-function">string <span class="hljs-title">BitsetToString</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">64</span>&gt; bits)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">char</span> ch[<span class="hljs-number">8</span>];<br>bitset&lt;8&gt; e[<span class="hljs-number">8</span>];<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++)<br>&#123;<br>e[<span class="hljs-number">0</span>][i] = bits[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">8</span>; i &lt; <span class="hljs-number">16</span>; i++)<br>&#123;<br>e[<span class="hljs-number">1</span>][i - <span class="hljs-number">8</span>] = bits[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">16</span>; i &lt; <span class="hljs-number">24</span>; i++)<br>&#123;<br>e[<span class="hljs-number">2</span>][i - <span class="hljs-number">16</span>] = bits[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">24</span>; i &lt; <span class="hljs-number">32</span>; i++)<br>&#123;<br>e[<span class="hljs-number">3</span>][i - <span class="hljs-number">24</span>] = bits[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">32</span>; i &lt; <span class="hljs-number">40</span>; i++)<br>&#123;<br>e[<span class="hljs-number">4</span>][i - <span class="hljs-number">32</span>] = bits[i];<br>;<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">40</span>; i &lt; <span class="hljs-number">48</span>; i++)<br>&#123;<br>e[<span class="hljs-number">5</span>][i - <span class="hljs-number">40</span>] = bits[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">48</span>; i &lt; <span class="hljs-number">56</span>; i++)<br>&#123;<br>e[<span class="hljs-number">6</span>][i - <span class="hljs-number">48</span>] = bits[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">56</span>; i &lt; <span class="hljs-number">64</span>; i++)<br>&#123;<br>e[<span class="hljs-number">7</span>][i - <span class="hljs-number">56</span>] = bits[i];<br>&#125;<br>string s;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++)<br>&#123;<br><br><span class="hljs-type">int</span> l = e[i].<span class="hljs-built_in">to_ulong</span>();<br>ch[i] = (<span class="hljs-type">char</span>)l;<br>s = s + ch[i];<br>&#125;<br><br><span class="hljs-keyword">return</span> s;<br>&#125;<br><br><span class="hljs-function">bitset&lt;64&gt; <span class="hljs-title">IP</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">64</span>&gt; &amp;src)</span></span><br><span class="hljs-function"></span>&#123;<br>bitset&lt;64&gt; output;<br><br><span class="hljs-type">int</span> IP_TABLE[] = &#123;<br><span class="hljs-number">58</span>, <span class="hljs-number">50</span>, <span class="hljs-number">42</span>, <span class="hljs-number">34</span>, <span class="hljs-number">26</span>, <span class="hljs-number">18</span>, <span class="hljs-number">10</span>, <span class="hljs-number">2</span>,<br><span class="hljs-number">60</span>, <span class="hljs-number">52</span>, <span class="hljs-number">44</span>, <span class="hljs-number">36</span>, <span class="hljs-number">28</span>, <span class="hljs-number">20</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>,<br><span class="hljs-number">62</span>, <span class="hljs-number">54</span>, <span class="hljs-number">46</span>, <span class="hljs-number">38</span>, <span class="hljs-number">30</span>, <span class="hljs-number">22</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>,<br><span class="hljs-number">64</span>, <span class="hljs-number">56</span>, <span class="hljs-number">48</span>, <span class="hljs-number">40</span>, <span class="hljs-number">32</span>, <span class="hljs-number">24</span>, <span class="hljs-number">16</span>, <span class="hljs-number">8</span>,<br><span class="hljs-number">57</span>, <span class="hljs-number">49</span>, <span class="hljs-number">41</span>, <span class="hljs-number">33</span>, <span class="hljs-number">25</span>, <span class="hljs-number">17</span>, <span class="hljs-number">9</span>, <span class="hljs-number">1</span>,<br><span class="hljs-number">59</span>, <span class="hljs-number">51</span>, <span class="hljs-number">43</span>, <span class="hljs-number">35</span>, <span class="hljs-number">27</span>, <span class="hljs-number">19</span>, <span class="hljs-number">11</span>, <span class="hljs-number">3</span>,<br><span class="hljs-number">61</span>, <span class="hljs-number">53</span>, <span class="hljs-number">45</span>, <span class="hljs-number">37</span>, <span class="hljs-number">29</span>, <span class="hljs-number">21</span>, <span class="hljs-number">13</span>, <span class="hljs-number">5</span>,<br><span class="hljs-number">63</span>, <span class="hljs-number">55</span>, <span class="hljs-number">47</span>, <span class="hljs-number">39</span>, <span class="hljs-number">31</span>, <span class="hljs-number">23</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>&#125;;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">64</span>; i++)<br>&#123;<br>output[<span class="hljs-number">63</span> - i] = src[<span class="hljs-number">64</span> - IP_TABLE[i]];<br>&#125;<br><br><span class="hljs-keyword">return</span> output;<br>&#125;<br><br><span class="hljs-function">bitset&lt;64&gt; <span class="hljs-title">InverseIP</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">64</span>&gt; &amp;src)</span></span><br><span class="hljs-function"></span>&#123;<br>bitset&lt;64&gt; output;<br><br><span class="hljs-type">int</span> IIP_TABLE[] = &#123;<br><span class="hljs-number">40</span>, <span class="hljs-number">8</span>, <span class="hljs-number">48</span>, <span class="hljs-number">16</span>, <span class="hljs-number">56</span>, <span class="hljs-number">24</span>, <span class="hljs-number">64</span>, <span class="hljs-number">32</span>,<br><span class="hljs-number">39</span>, <span class="hljs-number">7</span>, <span class="hljs-number">47</span>, <span class="hljs-number">15</span>, <span class="hljs-number">55</span>, <span class="hljs-number">23</span>, <span class="hljs-number">63</span>, <span class="hljs-number">31</span>,<br><span class="hljs-number">38</span>, <span class="hljs-number">6</span>, <span class="hljs-number">46</span>, <span class="hljs-number">14</span>, <span class="hljs-number">54</span>, <span class="hljs-number">22</span>, <span class="hljs-number">62</span>, <span class="hljs-number">30</span>,<br><span class="hljs-number">37</span>, <span class="hljs-number">5</span>, <span class="hljs-number">45</span>, <span class="hljs-number">13</span>, <span class="hljs-number">53</span>, <span class="hljs-number">21</span>, <span class="hljs-number">61</span>, <span class="hljs-number">29</span>,<br><span class="hljs-number">36</span>, <span class="hljs-number">4</span>, <span class="hljs-number">44</span>, <span class="hljs-number">12</span>, <span class="hljs-number">52</span>, <span class="hljs-number">20</span>, <span class="hljs-number">60</span>, <span class="hljs-number">28</span>,<br><span class="hljs-number">35</span>, <span class="hljs-number">3</span>, <span class="hljs-number">43</span>, <span class="hljs-number">11</span>, <span class="hljs-number">51</span>, <span class="hljs-number">19</span>, <span class="hljs-number">59</span>, <span class="hljs-number">27</span>,<br><span class="hljs-number">34</span>, <span class="hljs-number">2</span>, <span class="hljs-number">42</span>, <span class="hljs-number">10</span>, <span class="hljs-number">50</span>, <span class="hljs-number">18</span>, <span class="hljs-number">58</span>, <span class="hljs-number">26</span>,<br><span class="hljs-number">33</span>, <span class="hljs-number">1</span>, <span class="hljs-number">41</span>, <span class="hljs-number">9</span>, <span class="hljs-number">49</span>, <span class="hljs-number">17</span>, <span class="hljs-number">57</span>, <span class="hljs-number">25</span>&#125;;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">64</span>; i++)<br>&#123;<br>output[<span class="hljs-number">63</span> - i] = src[<span class="hljs-number">64</span> - IIP_TABLE[i]];<br>&#125;<br><br><span class="hljs-keyword">return</span> output;<br>&#125;<br><br><span class="hljs-function">bitset&lt;56&gt; <span class="hljs-title">PCOne</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">64</span>&gt; src)</span></span><br><span class="hljs-function"></span>&#123;<br>bitset&lt;56&gt; output;<br><br><span class="hljs-type">int</span> PC1_TABLE[] = &#123;<br><span class="hljs-number">57</span>, <span class="hljs-number">49</span>, <span class="hljs-number">41</span>, <span class="hljs-number">33</span>, <span class="hljs-number">25</span>, <span class="hljs-number">17</span>, <span class="hljs-number">9</span>,<br><span class="hljs-number">1</span>, <span class="hljs-number">58</span>, <span class="hljs-number">50</span>, <span class="hljs-number">42</span>, <span class="hljs-number">34</span>, <span class="hljs-number">26</span>, <span class="hljs-number">18</span>,<br><span class="hljs-number">10</span>, <span class="hljs-number">2</span>, <span class="hljs-number">59</span>, <span class="hljs-number">51</span>, <span class="hljs-number">43</span>, <span class="hljs-number">35</span>, <span class="hljs-number">27</span>,<br><span class="hljs-number">19</span>, <span class="hljs-number">11</span>, <span class="hljs-number">3</span>, <span class="hljs-number">60</span>, <span class="hljs-number">52</span>, <span class="hljs-number">44</span>, <span class="hljs-number">36</span>,<br><span class="hljs-number">63</span>, <span class="hljs-number">55</span>, <span class="hljs-number">47</span>, <span class="hljs-number">39</span>, <span class="hljs-number">31</span>, <span class="hljs-number">23</span>, <span class="hljs-number">15</span>,<br><span class="hljs-number">7</span>, <span class="hljs-number">62</span>, <span class="hljs-number">54</span>, <span class="hljs-number">46</span>, <span class="hljs-number">38</span>, <span class="hljs-number">30</span>, <span class="hljs-number">22</span>,<br><span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">61</span>, <span class="hljs-number">53</span>, <span class="hljs-number">45</span>, <span class="hljs-number">37</span>, <span class="hljs-number">29</span>,<br><span class="hljs-number">21</span>, <span class="hljs-number">13</span>, <span class="hljs-number">5</span>, <span class="hljs-number">28</span>, <span class="hljs-number">20</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>&#125;;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">56</span>; i++)<br>&#123;<br>output[<span class="hljs-number">55</span> - i] = src[<span class="hljs-number">64</span> - PC1_TABLE[i]];<br>&#125;<br><br><span class="hljs-keyword">return</span> output;<br>&#125;<br><span class="hljs-function">bitset&lt;48&gt; <span class="hljs-title">PCTwo</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">56</span>&gt; src)</span></span><br><span class="hljs-function"></span>&#123;<br>bitset&lt;48&gt; output;<br><br><span class="hljs-type">int</span> PC2_TABLE[] = &#123;<br><span class="hljs-number">14</span>, <span class="hljs-number">17</span>, <span class="hljs-number">11</span>, <span class="hljs-number">24</span>, <span class="hljs-number">1</span>, <span class="hljs-number">5</span>,<br><span class="hljs-number">3</span>, <span class="hljs-number">28</span>, <span class="hljs-number">15</span>, <span class="hljs-number">6</span>, <span class="hljs-number">21</span>, <span class="hljs-number">10</span>,<br><span class="hljs-number">23</span>, <span class="hljs-number">19</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>, <span class="hljs-number">26</span>, <span class="hljs-number">8</span>,<br><span class="hljs-number">16</span>, <span class="hljs-number">7</span>, <span class="hljs-number">27</span>, <span class="hljs-number">20</span>, <span class="hljs-number">13</span>, <span class="hljs-number">2</span>,<br><span class="hljs-number">41</span>, <span class="hljs-number">52</span>, <span class="hljs-number">31</span>, <span class="hljs-number">37</span>, <span class="hljs-number">47</span>, <span class="hljs-number">55</span>,<br><span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">51</span>, <span class="hljs-number">45</span>, <span class="hljs-number">33</span>, <span class="hljs-number">48</span>,<br><span class="hljs-number">44</span>, <span class="hljs-number">49</span>, <span class="hljs-number">39</span>, <span class="hljs-number">56</span>, <span class="hljs-number">34</span>, <span class="hljs-number">53</span>,<br><span class="hljs-number">46</span>, <span class="hljs-number">42</span>, <span class="hljs-number">50</span>, <span class="hljs-number">36</span>, <span class="hljs-number">29</span>, <span class="hljs-number">32</span>&#125;;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">48</span>; i++)<br>&#123;<br>output[<span class="hljs-number">47</span> - i] = src[<span class="hljs-number">56</span> - PC2_TABLE[i]];<br>&#125;<br><br><span class="hljs-keyword">return</span> output;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Subkey</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">64</span>&gt; key)</span></span><br><span class="hljs-function"></span>&#123;<br>bitset&lt;56&gt; realKey;<br>bitset&lt;28&gt; leftKey;<br>bitset&lt;28&gt; rightKey;<br>bitset&lt;48&gt; compressKey;<br><br><span class="hljs-comment">//PC one</span><br>realKey = <span class="hljs-built_in">PCOne</span>(key);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> r = <span class="hljs-number">0</span>; r &lt; <span class="hljs-number">16</span>; r++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">28</span>; i &lt; <span class="hljs-number">56</span>; i++)<br>&#123;<br>leftKey[i - <span class="hljs-number">28</span>] = realKey[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">28</span>; i++)<br>&#123;<br>rightKey[i] = realKey[i];<br>&#125;<br><br>leftKey = <span class="hljs-built_in">leftShift</span>(leftKey, r);<br>rightKey = <span class="hljs-built_in">leftShift</span>(rightKey, r);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">28</span>; i++)<br>&#123;<br>realKey[i] = rightKey[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">28</span>; i &lt; <span class="hljs-number">56</span>; i++)<br>&#123;<br>realKey[i] = leftKey[i - <span class="hljs-number">28</span>];<br>&#125;<br><br><span class="hljs-comment">//PC two</span><br>compressKey = <span class="hljs-built_in">PCTwo</span>(realKey);<br><br>subkey[r] = compressKey;<br>&#125;<br>&#125;<br><br><span class="hljs-function">bitset&lt;28&gt; <span class="hljs-title">leftShift</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">28</span>&gt; temKey, <span class="hljs-type">int</span> r)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> shift = <span class="hljs-number">0</span>;<br>bitset&lt;28&gt; tem = temKey;<br><span class="hljs-keyword">if</span> (r == <span class="hljs-number">0</span> || r == <span class="hljs-number">1</span> || r == <span class="hljs-number">8</span> || r == <span class="hljs-number">15</span>)<br>&#123;<br>shift = <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>shift = <span class="hljs-number">2</span>;<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">27</span>; i &gt;= <span class="hljs-number">0</span>; i--)<br>&#123;<br><span class="hljs-keyword">if</span> ((i - shift) &lt; <span class="hljs-number">0</span>)<br>&#123;<br>tem[i] = temKey[i - shift + <span class="hljs-number">28</span>];<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>tem[i] = temKey[i - shift];<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">return</span> tem;<br>&#125;<br><br><span class="hljs-function">bitset&lt;32&gt; <span class="hljs-title">f</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">32</span>&gt; right, bitset&lt;<span class="hljs-number">48</span>&gt; subkey)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> SBox1[] = &#123;<br><span class="hljs-number">14</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">15</span>, <span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">3</span>, <span class="hljs-number">10</span>, <span class="hljs-number">6</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0</span>, <span class="hljs-number">7</span>,<br><span class="hljs-number">0</span>, <span class="hljs-number">15</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">15</span>, <span class="hljs-number">2</span>, <span class="hljs-number">13</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">6</span>, <span class="hljs-number">12</span>, <span class="hljs-number">11</span>, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>,<br><span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">14</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>, <span class="hljs-number">11</span>, <span class="hljs-number">15</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">3</span>, <span class="hljs-number">10</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0</span>,<br><span class="hljs-number">15</span>, <span class="hljs-number">12</span>, <span class="hljs-number">8</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>, <span class="hljs-number">3</span>, <span class="hljs-number">14</span>, <span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">13</span>&#125;;<br><br><span class="hljs-type">int</span> SBox2[] = &#123;<br><span class="hljs-number">15</span>, <span class="hljs-number">1</span>, <span class="hljs-number">8</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">11</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">2</span>, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>,<br><span class="hljs-number">3</span>, <span class="hljs-number">13</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>, <span class="hljs-number">15</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">5</span>,<br><span class="hljs-number">0</span>, <span class="hljs-number">14</span>, <span class="hljs-number">7</span>, <span class="hljs-number">11</span>, <span class="hljs-number">10</span>, <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">15</span>,<br><span class="hljs-number">13</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">15</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">14</span>, <span class="hljs-number">9</span>&#125;;<br><br><span class="hljs-type">int</span> SBox3[] = &#123;<br><span class="hljs-number">10</span>, <span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">14</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">7</span>, <span class="hljs-number">11</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>,<br><span class="hljs-number">13</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">14</span>, <span class="hljs-number">12</span>, <span class="hljs-number">11</span>, <span class="hljs-number">15</span>, <span class="hljs-number">1</span>,<br><span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">15</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">11</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">7</span>,<br><span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">13</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">3</span>, <span class="hljs-number">11</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">12</span>&#125;;<br><br><span class="hljs-type">int</span> SBox4[] = &#123;<br><span class="hljs-number">7</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>, <span class="hljs-number">15</span>,<br><span class="hljs-number">12</span>, <span class="hljs-number">8</span>, <span class="hljs-number">11</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>, <span class="hljs-number">2</span>, <span class="hljs-number">12</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">9</span>,<br><span class="hljs-number">10</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0</span>, <span class="hljs-number">12</span>, <span class="hljs-number">11</span>, <span class="hljs-number">7</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>,<br><span class="hljs-number">3</span>, <span class="hljs-number">15</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>, <span class="hljs-number">13</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">7</span>, <span class="hljs-number">2</span>, <span class="hljs-number">14</span>&#125;;<br><br><span class="hljs-type">int</span> SBox5[] = &#123;<br><span class="hljs-number">2</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">15</span>, <span class="hljs-number">13</span>, <span class="hljs-number">0</span>, <span class="hljs-number">14</span>, <span class="hljs-number">9</span>,<br><span class="hljs-number">14</span>, <span class="hljs-number">11</span>, <span class="hljs-number">2</span>, <span class="hljs-number">12</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>, <span class="hljs-number">13</span>, <span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">15</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>,<br><span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">11</span>, <span class="hljs-number">10</span>, <span class="hljs-number">13</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">15</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">0</span>, <span class="hljs-number">14</span>,<br><span class="hljs-number">11</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">7</span>, <span class="hljs-number">1</span>, <span class="hljs-number">14</span>, <span class="hljs-number">2</span>, <span class="hljs-number">13</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">0</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>&#125;;<br><br><span class="hljs-type">int</span> SBox6[] = &#123;<br><span class="hljs-number">12</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">0</span>, <span class="hljs-number">13</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">14</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">11</span>,<br><span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">4</span>, <span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">1</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">0</span>, <span class="hljs-number">11</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>,<br><span class="hljs-number">9</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">12</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">4</span>, <span class="hljs-number">10</span>, <span class="hljs-number">1</span>, <span class="hljs-number">13</span>, <span class="hljs-number">11</span>, <span class="hljs-number">6</span>,<br><span class="hljs-number">4</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">15</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">14</span>, <span class="hljs-number">1</span>, <span class="hljs-number">7</span>, <span class="hljs-number">6</span>, <span class="hljs-number">0</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span><br><br>&#125;;<br><br><span class="hljs-type">int</span> SBox7[] = &#123;<br><span class="hljs-number">4</span>, <span class="hljs-number">11</span>, <span class="hljs-number">2</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">0</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">3</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>, <span class="hljs-number">6</span>, <span class="hljs-number">1</span>,<br><span class="hljs-number">13</span>, <span class="hljs-number">0</span>, <span class="hljs-number">11</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">14</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">12</span>, <span class="hljs-number">2</span>, <span class="hljs-number">15</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>,<br><span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">12</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">14</span>, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>,<br><span class="hljs-number">6</span>, <span class="hljs-number">11</span>, <span class="hljs-number">13</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">10</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">15</span>, <span class="hljs-number">14</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">12</span>&#125;;<br><br><span class="hljs-type">int</span> SBox8[] = &#123;<br><span class="hljs-number">13</span>, <span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">15</span>, <span class="hljs-number">11</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10</span>, <span class="hljs-number">9</span>, <span class="hljs-number">3</span>, <span class="hljs-number">14</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">12</span>, <span class="hljs-number">7</span>,<br><span class="hljs-number">1</span>, <span class="hljs-number">15</span>, <span class="hljs-number">13</span>, <span class="hljs-number">8</span>, <span class="hljs-number">10</span>, <span class="hljs-number">3</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">12</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">11</span>, <span class="hljs-number">0</span>, <span class="hljs-number">14</span>, <span class="hljs-number">9</span>, <span class="hljs-number">2</span>,<br><span class="hljs-number">7</span>, <span class="hljs-number">11</span>, <span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9</span>, <span class="hljs-number">12</span>, <span class="hljs-number">14</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">6</span>, <span class="hljs-number">10</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">8</span>,<br><span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">14</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">10</span>, <span class="hljs-number">8</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">12</span>, <span class="hljs-number">9</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">11</span>&#125;;<br><br>bitset&lt;48&gt; rightExpend;<br>bitset&lt;6&gt; e1, e2, e3, e4, e5, e6, e7, e8;<br>bitset&lt;4&gt; sbox1, sbox2, sbox3, sbox4, sbox5, sbox6, sbox7, sbox8;<br><span class="hljs-comment">//Extend</span><br>rightExpend = <span class="hljs-built_in">Expend</span>(right);<br><br>rightExpend = rightExpend ^ subkey;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; i++)<br>&#123;<br>e1[i] = rightExpend[<span class="hljs-number">47</span> - <span class="hljs-number">0</span> - i];<br>e2[i] = rightExpend[<span class="hljs-number">47</span> - <span class="hljs-number">6</span> - i];<br>e3[i] = rightExpend[<span class="hljs-number">47</span> - <span class="hljs-number">12</span> - i];<br>e4[i] = rightExpend[<span class="hljs-number">47</span> - <span class="hljs-number">18</span> - i];<br>e5[i] = rightExpend[<span class="hljs-number">47</span> - <span class="hljs-number">24</span> - i];<br>e6[i] = rightExpend[<span class="hljs-number">47</span> - <span class="hljs-number">30</span> - i];<br>e7[i] = rightExpend[<span class="hljs-number">47</span> - <span class="hljs-number">36</span> - i];<br>e8[i] = rightExpend[<span class="hljs-number">47</span> - <span class="hljs-number">42</span> - i];<br>&#125;<br><br>sbox1 = <span class="hljs-built_in">SBox</span>(e1, SBox1);<br>sbox2 = <span class="hljs-built_in">SBox</span>(e2, SBox2);<br>sbox3 = <span class="hljs-built_in">SBox</span>(e3, SBox3);<br>sbox4 = <span class="hljs-built_in">SBox</span>(e4, SBox4);<br>sbox5 = <span class="hljs-built_in">SBox</span>(e5, SBox5);<br>sbox6 = <span class="hljs-built_in">SBox</span>(e6, SBox6);<br>sbox7 = <span class="hljs-built_in">SBox</span>(e7, SBox7);<br>sbox8 = <span class="hljs-built_in">SBox</span>(e8, SBox8);<br><br>bitset&lt;32&gt; result;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>&#123;<br>result[i + <span class="hljs-number">0</span>] = sbox1[i];<br>result[i + <span class="hljs-number">4</span>] = sbox2[i];<br>result[i + <span class="hljs-number">8</span>] = sbox3[i];<br>result[i + <span class="hljs-number">12</span>] = sbox4[i];<br>result[i + <span class="hljs-number">16</span>] = sbox5[i];<br>result[i + <span class="hljs-number">20</span>] = sbox6[i];<br>result[i + <span class="hljs-number">24</span>] = sbox7[i];<br>result[i + <span class="hljs-number">28</span>] = sbox8[i];<br>&#125;<br><br>bitset&lt;32&gt; temp = result;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)<br>&#123;<br>result[i] = temp[<span class="hljs-number">31</span> - i];<br>&#125;<br><br><span class="hljs-comment">//P</span><br>result = <span class="hljs-built_in">P</span>(result);<br><span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-function">bitset&lt;48&gt; <span class="hljs-title">Expend</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">32</span>&gt; src)</span></span><br><span class="hljs-function"></span>&#123;<br><br>bitset&lt;48&gt; output;<br><br><span class="hljs-type">int</span> E_TABLE[] = &#123;<br><span class="hljs-number">32</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>,<br><span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>,<br><span class="hljs-number">8</span>, <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12</span>, <span class="hljs-number">13</span>,<br><span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>, <span class="hljs-number">15</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>,<br><span class="hljs-number">16</span>, <span class="hljs-number">17</span>, <span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>, <span class="hljs-number">21</span>,<br><span class="hljs-number">20</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>, <span class="hljs-number">24</span>, <span class="hljs-number">25</span>,<br><span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">26</span>, <span class="hljs-number">27</span>, <span class="hljs-number">28</span>, <span class="hljs-number">29</span>,<br><span class="hljs-number">28</span>, <span class="hljs-number">29</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">32</span>, <span class="hljs-number">1</span>&#125;;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">48</span>; i++)<br>&#123;<br>output[<span class="hljs-number">47</span> - i] = src[<span class="hljs-number">32</span> - E_TABLE[i]];<br>&#125;<br><br><span class="hljs-keyword">return</span> output;<br>&#125;<br><br><span class="hljs-function">bitset&lt;4&gt; <span class="hljs-title">SBox</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">6</span>&gt; tem, <span class="hljs-type">int</span> *sbox)</span></span><br><span class="hljs-function"></span>&#123;<br><br><span class="hljs-type">int</span> row = <span class="hljs-number">0</span>, col = <span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> box = <span class="hljs-number">0</span>;<br>row = tem[<span class="hljs-number">0</span>] * <span class="hljs-number">2</span> + tem[<span class="hljs-number">5</span>];<br>col = tem[<span class="hljs-number">1</span>] * <span class="hljs-number">2</span> * <span class="hljs-number">2</span> * <span class="hljs-number">2</span> + tem[<span class="hljs-number">2</span>] * <span class="hljs-number">2</span> * <span class="hljs-number">2</span> + tem[<span class="hljs-number">3</span>] * <span class="hljs-number">2</span> + tem[<span class="hljs-number">4</span>];<br><br>box = sbox[row * <span class="hljs-number">16</span> + col];<br><br><span class="hljs-function">bitset&lt;4&gt; <span class="hljs-title">temp</span><span class="hljs-params">(box)</span></span>;<br>bitset&lt;4&gt; output;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++)<br>&#123;<br>output[i] = temp[<span class="hljs-number">3</span> - i];<br>&#125;<br><br><span class="hljs-keyword">return</span> output;<br>&#125;<br><br><span class="hljs-function">bitset&lt;32&gt; <span class="hljs-title">P</span><span class="hljs-params">(bitset&lt;<span class="hljs-number">32</span>&gt; src)</span></span><br><span class="hljs-function"></span>&#123;<br>bitset&lt;32&gt; output;<br><br><span class="hljs-type">int</span> P_TABLE[] = &#123;<br><span class="hljs-number">16</span>, <span class="hljs-number">7</span>, <span class="hljs-number">20</span>, <span class="hljs-number">21</span>,<br><span class="hljs-number">29</span>, <span class="hljs-number">12</span>, <span class="hljs-number">28</span>, <span class="hljs-number">17</span>,<br><span class="hljs-number">1</span>, <span class="hljs-number">15</span>, <span class="hljs-number">23</span>, <span class="hljs-number">26</span>,<br><span class="hljs-number">5</span>, <span class="hljs-number">18</span>, <span class="hljs-number">31</span>, <span class="hljs-number">10</span>,<br><span class="hljs-number">2</span>, <span class="hljs-number">8</span>, <span class="hljs-number">24</span>, <span class="hljs-number">14</span>,<br><span class="hljs-number">32</span>, <span class="hljs-number">27</span>, <span class="hljs-number">3</span>, <span class="hljs-number">9</span>,<br><span class="hljs-number">19</span>, <span class="hljs-number">13</span>, <span class="hljs-number">30</span>, <span class="hljs-number">6</span>,<br><span class="hljs-number">22</span>, <span class="hljs-number">11</span>, <span class="hljs-number">4</span>, <span class="hljs-number">25</span>&#125;;<br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)<br>&#123;<br>output[<span class="hljs-number">31</span> - i] = src[<span class="hljs-number">32</span> - P_TABLE[i]];<br>&#125;<br><br><span class="hljs-keyword">return</span> output;<br>&#125;<br><br><span class="hljs-comment">//DES 解密</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Decrypt</span><span class="hljs-params">(string &amp;c)</span></span><br><span class="hljs-function"></span>&#123;<br>string text = c;<br>string key;<br><br>cout &lt;&lt; <span class="hljs-string">&quot;Input password:(8 char)&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; key;<br><span class="hljs-keyword">while</span> (key.<span class="hljs-built_in">length</span>() != <span class="hljs-number">8</span>)<br>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;Input error( need 8 char )&quot;</span> &lt;&lt; endl;<br>cout &lt;&lt; <span class="hljs-string">&quot;Input password:(8 char)&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; key;<br>&#125;<br><br>bitset&lt;64&gt; textBits;<br>bitset&lt;64&gt; keyBits;<br>bitset&lt;32&gt; leftBits;<br>bitset&lt;32&gt; rightBits;<br>bitset&lt;32&gt; newLeftBits;<br>bitset&lt;32&gt; newRightBits;<br>bitset&lt;64&gt; cipher;<br>bitset&lt;64&gt; tem;<br><br>textBits = <span class="hljs-built_in">CharsToBitset</span>(c.<span class="hljs-built_in">c_str</span>());<br>keyBits = <span class="hljs-built_in">CharsToBitset</span>(key.<span class="hljs-built_in">c_str</span>());<br><span class="hljs-built_in">Subkey</span>(keyBits);<br>cout &lt;&lt; <span class="hljs-string">&quot;ciph&quot;</span> &lt;&lt; textBits.<span class="hljs-built_in">to_string</span>() &lt;&lt; endl;<br>cout &lt;&lt; <span class="hljs-string">&quot;pass&quot;</span> &lt;&lt; keyBits.<span class="hljs-built_in">to_string</span>() &lt;&lt; endl;<br>tem = textBits;<br>textBits = <span class="hljs-built_in">IP</span>(tem); <span class="hljs-comment">//IP 置换</span><br><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">32</span>; i &lt; <span class="hljs-number">64</span>; i++)<br>&#123;<br>leftBits[i - <span class="hljs-number">32</span>] = textBits[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)<br>&#123;<br>rightBits[i] = textBits[i];<br>&#125;<br><br><span class="hljs-comment">//16次迭代</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++)<br>&#123;<br>newLeftBits = rightBits;<br>newRightBits = leftBits ^ <span class="hljs-built_in">f</span>(rightBits, subkey[<span class="hljs-number">15</span> - i]);<br>leftBits = newLeftBits;<br>rightBits = newRightBits;<br>&#125;<br><br><span class="hljs-comment">//W 置换</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)<br>&#123;<br>tem[i] = leftBits[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">32</span>; i &lt; <span class="hljs-number">64</span>; i++)<br>&#123;<br>tem[i] = rightBits[i - <span class="hljs-number">32</span>];<br>&#125;<br><br><span class="hljs-comment">//IP 逆置换</span><br>cipher = <span class="hljs-built_in">InverseIP</span>(tem);<br>c = cipher.<span class="hljs-built_in">to_string</span>();<br>cout &lt;&lt; <span class="hljs-string">&quot;text&quot;</span> &lt;&lt; c &lt;&lt; endl;<br>c = <span class="hljs-built_in">BitsetToString</span>(cipher);<br>cout &lt;&lt; <span class="hljs-string">&quot;text&quot;</span> &lt;&lt; c &lt;&lt; endl;<br>&#125;<br><br><span class="hljs-comment">//DES 加密</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">Encrypt</span><span class="hljs-params">(string &amp;c)</span></span><br><span class="hljs-function"></span>&#123;<br>string text;<br>string key;<br>cout &lt;&lt; <span class="hljs-string">&quot;Input text:(8 char)&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; text;<br>cout &lt;&lt; <span class="hljs-string">&quot;Input password:(8 char)&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; key;<br><span class="hljs-keyword">while</span> (text.<span class="hljs-built_in">length</span>() != <span class="hljs-number">8</span> || key.<span class="hljs-built_in">length</span>() != <span class="hljs-number">8</span>)<br>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;Input error( need 8 char )&quot;</span> &lt;&lt; endl;<br>cout &lt;&lt; <span class="hljs-string">&quot;Input text:(8 char)&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; text;<br>cout &lt;&lt; <span class="hljs-string">&quot;Input password:(8 char)&quot;</span> &lt;&lt; endl;<br>cin &gt;&gt; key;<br>&#125;<br><br>bitset&lt;64&gt; textBits;<br>bitset&lt;64&gt; keyBits;<br>bitset&lt;32&gt; leftBits;<br>bitset&lt;32&gt; rightBits;<br>bitset&lt;32&gt; newLeftBits;<br>bitset&lt;32&gt; newRightBits;<br>bitset&lt;64&gt; cipher;<br>bitset&lt;64&gt; tem;<br><br>textBits = <span class="hljs-built_in">CharsToBitset</span>(text.<span class="hljs-built_in">c_str</span>());<br>keyBits = <span class="hljs-built_in">CharsToBitset</span>(key.<span class="hljs-built_in">c_str</span>());<br><span class="hljs-built_in">Subkey</span>(keyBits);<br><br>cout &lt;&lt; <span class="hljs-string">&quot;text&quot;</span> &lt;&lt; textBits.<span class="hljs-built_in">to_string</span>() &lt;&lt; endl;<br>cout &lt;&lt; <span class="hljs-string">&quot;pass&quot;</span> &lt;&lt; keyBits.<span class="hljs-built_in">to_string</span>() &lt;&lt; endl;<br>tem = textBits;<br>textBits = <span class="hljs-built_in">IP</span>(tem); <span class="hljs-comment">//IP 置换</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">32</span>; i &lt; <span class="hljs-number">64</span>; i++)<br>&#123;<br>leftBits[i - <span class="hljs-number">32</span>] = textBits[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)<br>&#123;<br>rightBits[i] = textBits[i];<br>&#125;<br><br><span class="hljs-comment">//16次迭代</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++)<br>&#123;<br>newLeftBits = rightBits;<br>newRightBits = leftBits ^ <span class="hljs-built_in">f</span>(rightBits, subkey[i]);<br>leftBits = newLeftBits;<br>rightBits = newRightBits;<br>&#125;<br><br><span class="hljs-comment">//W 置换</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)<br>&#123;<br>tem[i] = leftBits[i];<br>&#125;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">32</span>; i &lt; <span class="hljs-number">64</span>; i++)<br>&#123;<br>tem[i] = rightBits[i - <span class="hljs-number">32</span>];<br>&#125;<br><br><span class="hljs-comment">//IP 逆置换</span><br>cipher = <span class="hljs-built_in">InverseIP</span>(tem);<br><br>c = cipher.<span class="hljs-built_in">to_string</span>();<br>cout &lt;&lt; <span class="hljs-string">&quot;ciph&quot;</span> &lt;&lt; c &lt;&lt; endl;<br>c = <span class="hljs-built_in">BitsetToString</span>(cipher);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><br>string cipher;<br><span class="hljs-built_in">Encrypt</span>(cipher);<br><br><span class="hljs-built_in">Decrypt</span>(cipher);<br><span class="hljs-built_in">getchar</span>();<br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;pause&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="AES"><a href="#AES" class="headerlink" title="AES"></a>AES</h3><p>分组加密算法，明文为128位(16字节)一组，密钥的长度有128位(16字节)、192位(24字节)、256位(32字节)三种,分别对应加密轮数为 10、12、14</p><p><strong>特征识别</strong></p><ul><li>16字节分组,明文长度除以16或者右移4位</li><li>256个元素的 S 盒(16x16),例如S盒{0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F……},逆S盒{0x52, 0x09, 0x6A, 0xD5, 0x30, 0x36, 0xA5, 0x38……}</li><li>左移右移 24&#x2F;16&#x2F;8 或者 &amp; ff000000，&amp;00ff0000，&amp;0000ff00，&amp;000000ff</li></ul><p><strong>加密流程简述</strong></p><ul><li>128位明文与拓展密钥进行异或</li><li>执行(n-1)轮加密：<ul><li>S 盒变换：使用 S 盒对每个字节进行替换</li><li>行变换：对每一行进行循环左移</li><li>列变换：对每一列进行线性变换</li><li>添加轮密钥：将当前状态与轮密钥进行异或</li></ul></li><li>执行最后一轮加密：<ul><li>S 盒变换</li><li>行变换</li><li>与拓展密钥进行异或</li></ul></li></ul><p><strong>ECB 模式 和 CBC 模式</strong></p><ul><li>ECB 模式：<ul><li>将明文分成固定大小的块,每个块独立加密</li><li>相同的明文块加密后生成相同的密文块</li><li>不需要初始化向量（IV）。</li></ul></li><li>CBC 模式<ul><li>每个明文块在加密前会与前一个密文块进行异或（XOR），再加密</li><li>第一个块需要与初始化向量（IV）异或</li><li>相同的明文块加密后生成不同的密文块（依赖前一块的密文）</li></ul></li></ul><p><strong>代码实现</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><br><span class="hljs-keyword">typedef</span> bitset&lt;8&gt; byte;<br><span class="hljs-keyword">typedef</span> bitset&lt;32&gt; word;<br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> Nr = <span class="hljs-number">10</span>;<span class="hljs-comment">//以 AES-128为例，加密轮数为10</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> Nk = <span class="hljs-number">4</span>;  <span class="hljs-comment">//初始密钥字数（128位=16字节=4字）</span><br><br>byte Sbox[<span class="hljs-number">16</span>][<span class="hljs-number">16</span>]=&#123;<br>    &#123;<span class="hljs-number">0x63</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x76</span>&#125;,<br>&#123;<span class="hljs-number">0xCA</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0xC0</span>&#125;,<br>&#123;<span class="hljs-number">0xB7</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x15</span>&#125;,<br>&#123;<span class="hljs-number">0x04</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x75</span>&#125;,<br>&#123;<span class="hljs-number">0x09</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x84</span>&#125;,<br>&#123;<span class="hljs-number">0x53</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xCF</span>&#125;,<br>&#123;<span class="hljs-number">0xD0</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0xA8</span>&#125;,<br>&#123;<span class="hljs-number">0x51</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0xD2</span>&#125;,<br>&#123;<span class="hljs-number">0xCD</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x73</span>&#125;,<br>&#123;<span class="hljs-number">0x60</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xDB</span>&#125;,<br>&#123;<span class="hljs-number">0xE0</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x79</span>&#125;,<br>&#123;<span class="hljs-number">0xE7</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x08</span>&#125;,<br>&#123;<span class="hljs-number">0xBA</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xDD</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x8A</span>&#125;,<br>&#123;<span class="hljs-number">0x70</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x9E</span>&#125;,<br>&#123;<span class="hljs-number">0xE1</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xDF</span>&#125;,<br>&#123;<span class="hljs-number">0x8C</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x16</span>&#125;<br>&#125;;<br><br>byte Inv_Sbox[<span class="hljs-number">16</span>][<span class="hljs-number">16</span>] = &#123;<br>&#123;<span class="hljs-number">0x52</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xFB</span>&#125;,<br>&#123;<span class="hljs-number">0x7C</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xCB</span>&#125;,<br>&#123;<span class="hljs-number">0x54</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x4E</span>&#125;,<br>&#123;<span class="hljs-number">0x08</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x25</span>&#125;,<br>&#123;<span class="hljs-number">0x72</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0x92</span>&#125;,<br>&#123;<span class="hljs-number">0x6C</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x84</span>&#125;,<br>&#123;<span class="hljs-number">0x90</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x06</span>&#125;,<br>&#123;<span class="hljs-number">0xD0</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x6B</span>&#125;,<br>&#123;<span class="hljs-number">0x3A</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x73</span>&#125;,<br>&#123;<span class="hljs-number">0x96</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x6E</span>&#125;,<br>&#123;<span class="hljs-number">0x47</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0x1B</span>&#125;,<br>&#123;<span class="hljs-number">0xFC</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0xF4</span>&#125;,<br>&#123;<span class="hljs-number">0x1F</span>, <span class="hljs-number">0xDD</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x5F</span>&#125;,<br>&#123;<span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0xEF</span>&#125;,<br>&#123;<span class="hljs-number">0xA0</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x61</span>&#125;,<br>&#123;<span class="hljs-number">0x17</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x7D</span>&#125;<br>&#125;;<br> <br><br><span class="hljs-comment">//轮常数</span><br>word  Rcon[<span class="hljs-number">10</span>]=&#123;<span class="hljs-number">0x01000000</span>,<span class="hljs-number">0x02000000</span>,<span class="hljs-number">0x04000000</span>,<span class="hljs-number">0x08000000</span>,<span class="hljs-number">0x10000000</span>,<br>              <span class="hljs-number">0x20000000</span>,<span class="hljs-number">0x40000000</span>,<span class="hljs-number">0x80000000</span>,<span class="hljs-number">0x1B000000</span>,<span class="hljs-number">0x36000000</span>&#125;;<br><br><br><span class="hljs-comment">// S 盒变换-字节替换</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">SubBytes</span><span class="hljs-params">(byte mtx[<span class="hljs-number">4</span>*<span class="hljs-number">4</span>])</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">16</span>; ++i)<br>    &#123;<br>        <span class="hljs-type">int</span> row = mtx[i][<span class="hljs-number">7</span>]*<span class="hljs-number">8</span> + mtx[i][<span class="hljs-number">6</span>]*<span class="hljs-number">4</span> + mtx[i][<span class="hljs-number">5</span>]*<span class="hljs-number">2</span> + mtx[i][<span class="hljs-number">4</span>];<br>        <span class="hljs-type">int</span> col = mtx[i][<span class="hljs-number">3</span>]*<span class="hljs-number">8</span> + mtx[i][<span class="hljs-number">2</span>]*<span class="hljs-number">4</span> + mtx[i][<span class="hljs-number">1</span>]*<span class="hljs-number">2</span> + mtx[i][<span class="hljs-number">0</span>];<br>        mtx[i] = Sbox[row][col];<br>    &#125;<br>&#125;              <br><br><span class="hljs-comment">//行变换-按字节循环移位</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">ShiftRows</span><span class="hljs-params">(byte mtx[<span class="hljs-number">4</span>*<span class="hljs-number">4</span>])</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">// 第二行循环左移一位</span><br>byte temp = mtx[<span class="hljs-number">4</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">3</span>; ++i)<br>mtx[i<span class="hljs-number">+4</span>] = mtx[i<span class="hljs-number">+5</span>];<br>mtx[<span class="hljs-number">7</span>] = temp;<br><span class="hljs-comment">// 第三行循环左移两位</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">2</span>; ++i)<br>&#123;<br>temp = mtx[i<span class="hljs-number">+8</span>];<br>mtx[i<span class="hljs-number">+8</span>] = mtx[i<span class="hljs-number">+10</span>];<br>mtx[i<span class="hljs-number">+10</span>] = temp;<br>&#125;<br><span class="hljs-comment">// 第四行循环左移三位</span><br>temp = mtx[<span class="hljs-number">15</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">3</span>; i&gt;<span class="hljs-number">0</span>; --i)<br>mtx[i<span class="hljs-number">+12</span>] = mtx[i<span class="hljs-number">+11</span>];<br>mtx[<span class="hljs-number">12</span>] = temp;<br>&#125;<br><br><span class="hljs-comment">//有限域上的乘法 GF(2^8)</span><br><span class="hljs-function">byte <span class="hljs-title">GFMul</span><span class="hljs-params">(byte a, byte b)</span> </span>&#123; <br>byte p = <span class="hljs-number">0</span>;<br>byte hi_bit_set;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> counter = <span class="hljs-number">0</span>; counter &lt; <span class="hljs-number">8</span>; counter++) &#123;<br><span class="hljs-keyword">if</span> ((b &amp; <span class="hljs-built_in">byte</span>(<span class="hljs-number">1</span>)) != <span class="hljs-number">0</span>) &#123;<br>p ^= a;<br>&#125;<br>hi_bit_set = (byte) (a &amp; <span class="hljs-built_in">byte</span>(<span class="hljs-number">0x80</span>));<br>a &lt;&lt;= <span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span> (hi_bit_set != <span class="hljs-number">0</span>) &#123;<br>a ^= <span class="hljs-number">0x1b</span>; <span class="hljs-comment">/* x^8 + x^4 + x^3 + x + 1 */</span><br>&#125;<br>b &gt;&gt;= <span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">return</span> p;<br>&#125;<br><br><span class="hljs-comment">//列变换</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">MixColumns</span><span class="hljs-params">(byte mtx[<span class="hljs-number">4</span>*<span class="hljs-number">4</span>])</span></span><br><span class="hljs-function"></span>&#123;<br>byte arr[<span class="hljs-number">4</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">4</span>; ++i)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>; j&lt;<span class="hljs-number">4</span>; ++j)<br>arr[j] = mtx[i+j*<span class="hljs-number">4</span>];<br> <br>mtx[i] = <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x02</span>, arr[<span class="hljs-number">0</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x03</span>, arr[<span class="hljs-number">1</span>]) ^ arr[<span class="hljs-number">2</span>] ^ arr[<span class="hljs-number">3</span>];<br>mtx[i<span class="hljs-number">+4</span>] = arr[<span class="hljs-number">0</span>] ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x02</span>, arr[<span class="hljs-number">1</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x03</span>, arr[<span class="hljs-number">2</span>]) ^ arr[<span class="hljs-number">3</span>];<br>mtx[i<span class="hljs-number">+8</span>] = arr[<span class="hljs-number">0</span>] ^ arr[<span class="hljs-number">1</span>] ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x02</span>, arr[<span class="hljs-number">2</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x03</span>, arr[<span class="hljs-number">3</span>]);<br>mtx[i<span class="hljs-number">+12</span>] = <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x03</span>, arr[<span class="hljs-number">0</span>]) ^ arr[<span class="hljs-number">1</span>] ^ arr[<span class="hljs-number">2</span>] ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x02</span>, arr[<span class="hljs-number">3</span>]);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//轮密钥加变换 - 将每一列与扩展密钥进行异或</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">AddRoundKey</span><span class="hljs-params">(byte mtx[<span class="hljs-number">4</span>*<span class="hljs-number">4</span>], word k[<span class="hljs-number">4</span>])</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">4</span>; ++i)<br>&#123;<br>word k1 = k[i] &gt;&gt; <span class="hljs-number">24</span>;<br>word k2 = (k[i] &lt;&lt; <span class="hljs-number">8</span>) &gt;&gt; <span class="hljs-number">24</span>;<br>word k3 = (k[i] &lt;&lt; <span class="hljs-number">16</span>) &gt;&gt; <span class="hljs-number">24</span>;<br>word k4 = (k[i] &lt;&lt; <span class="hljs-number">24</span>) &gt;&gt; <span class="hljs-number">24</span>;<br><br>mtx[i] = mtx[i] ^ <span class="hljs-built_in">byte</span>(k<span class="hljs-number">1.</span><span class="hljs-built_in">to_ulong</span>());<br>mtx[i<span class="hljs-number">+4</span>] = mtx[i<span class="hljs-number">+4</span>] ^ <span class="hljs-built_in">byte</span>(k<span class="hljs-number">2.</span><span class="hljs-built_in">to_ulong</span>());<br>mtx[i<span class="hljs-number">+8</span>] = mtx[i<span class="hljs-number">+8</span>] ^ <span class="hljs-built_in">byte</span>(k<span class="hljs-number">3.</span><span class="hljs-built_in">to_ulong</span>());<br>mtx[i<span class="hljs-number">+12</span>] = mtx[i<span class="hljs-number">+12</span>] ^ <span class="hljs-built_in">byte</span>(k<span class="hljs-number">4.</span><span class="hljs-built_in">to_ulong</span>());<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//解密的逆变换函数</span><br><span class="hljs-comment">//逆 S 盒变换</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">InvSubBytes</span><span class="hljs-params">(byte mtx[<span class="hljs-number">4</span>*<span class="hljs-number">4</span>])</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">16</span>; ++i)<br>&#123;<br><span class="hljs-type">int</span> row = mtx[i][<span class="hljs-number">7</span>]*<span class="hljs-number">8</span> + mtx[i][<span class="hljs-number">6</span>]*<span class="hljs-number">4</span> + mtx[i][<span class="hljs-number">5</span>]*<span class="hljs-number">2</span> + mtx[i][<span class="hljs-number">4</span>];<br><span class="hljs-type">int</span> col = mtx[i][<span class="hljs-number">3</span>]*<span class="hljs-number">8</span> + mtx[i][<span class="hljs-number">2</span>]*<span class="hljs-number">4</span> + mtx[i][<span class="hljs-number">1</span>]*<span class="hljs-number">2</span> + mtx[i][<span class="hljs-number">0</span>];<br>mtx[i] = Inv_Sbox[row][col];<br>&#125;<br>&#125;<br><br><span class="hljs-comment">//逆行变换-以字节为单位循环右移</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">InvShiftRows</span><span class="hljs-params">(byte mtx[<span class="hljs-number">4</span>*<span class="hljs-number">4</span>])</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">// 第二行循环右移一位</span><br>byte temp = mtx[<span class="hljs-number">7</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">3</span>; i&gt;<span class="hljs-number">0</span>; --i)<br>mtx[i<span class="hljs-number">+4</span>] = mtx[i<span class="hljs-number">+3</span>];<br>mtx[<span class="hljs-number">4</span>] = temp;<br><span class="hljs-comment">// 第三行循环右移两位</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">2</span>; ++i)<br>&#123;<br>temp = mtx[i<span class="hljs-number">+8</span>];<br>mtx[i<span class="hljs-number">+8</span>] = mtx[i<span class="hljs-number">+10</span>];<br>mtx[i<span class="hljs-number">+10</span>] = temp;<br>&#125;<br><span class="hljs-comment">// 第四行循环右移三位</span><br>temp = mtx[<span class="hljs-number">12</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">3</span>; ++i)<br>mtx[i<span class="hljs-number">+12</span>] = mtx[i<span class="hljs-number">+13</span>];<br>mtx[<span class="hljs-number">15</span>] = temp;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">InvMixColumns</span><span class="hljs-params">(byte mtx[<span class="hljs-number">4</span>*<span class="hljs-number">4</span>])</span></span><br><span class="hljs-function"></span>&#123;<br>byte arr[<span class="hljs-number">4</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">4</span>; ++i)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>; j&lt;<span class="hljs-number">4</span>; ++j)<br>arr[j] = mtx[i+j*<span class="hljs-number">4</span>];<br> <br>mtx[i] = <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0e</span>, arr[<span class="hljs-number">0</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0b</span>, arr[<span class="hljs-number">1</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0d</span>, arr[<span class="hljs-number">2</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x09</span>, arr[<span class="hljs-number">3</span>]);<br>mtx[i<span class="hljs-number">+4</span>] = <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x09</span>, arr[<span class="hljs-number">0</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0e</span>, arr[<span class="hljs-number">1</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0b</span>, arr[<span class="hljs-number">2</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0d</span>, arr[<span class="hljs-number">3</span>]);<br>mtx[i<span class="hljs-number">+8</span>] = <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0d</span>, arr[<span class="hljs-number">0</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x09</span>, arr[<span class="hljs-number">1</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0e</span>, arr[<span class="hljs-number">2</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0b</span>, arr[<span class="hljs-number">3</span>]);<br>mtx[i<span class="hljs-number">+12</span>] = <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0b</span>, arr[<span class="hljs-number">0</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0d</span>, arr[<span class="hljs-number">1</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x09</span>, arr[<span class="hljs-number">2</span>]) ^ <span class="hljs-built_in">GFMul</span>(<span class="hljs-number">0x0e</span>, arr[<span class="hljs-number">3</span>]);<br>&#125;<br>&#125;<br><br><br><span class="hljs-comment">//密钥拓展</span><br><span class="hljs-comment">//将4个8位的字节组成一个32位的字</span><br><span class="hljs-function">word <span class="hljs-title">Word</span> <span class="hljs-params">(byte&amp;k1,byte&amp;k2,byte&amp;k3,byte&amp;k4)</span></span>&#123;<br>    <span class="hljs-function">word <span class="hljs-title">result</span><span class="hljs-params">(<span class="hljs-number">0x00000000</span>)</span></span>;<br>    word temp;<br>    temp=k<span class="hljs-number">1.</span><span class="hljs-built_in">to_ulong</span>();<br>    temp&lt;&lt;=<span class="hljs-number">24</span>;<br>    result|=temp;<br>    temp=k<span class="hljs-number">2.</span><span class="hljs-built_in">to_ulong</span>();<br>    temp&lt;&lt;=<span class="hljs-number">16</span>;<br>    result|=temp;<br>    temp=k<span class="hljs-number">3.</span><span class="hljs-built_in">to_ulong</span>();<br>    temp&lt;&lt;=<span class="hljs-number">8</span>;<br>    result|=temp;<br>    temp=k<span class="hljs-number">4.</span><span class="hljs-built_in">to_ulong</span>();<br>    result|=temp;<br>    <span class="hljs-keyword">return</span> result;<br>&#125;<br><br><span class="hljs-comment">//把一个4字节的word中的字节左移一位</span><br><span class="hljs-comment">//[a,b,c,d]=&gt;[b,c,d,a]</span><br><span class="hljs-function">word <span class="hljs-title">RotWord</span><span class="hljs-params">(<span class="hljs-type">const</span> word&amp;rw)</span></span>&#123;<br>    word high=rw&lt;&lt;<span class="hljs-number">8</span>;<br>    word low=rw&gt;&gt;<span class="hljs-number">24</span>;<br>    <span class="hljs-keyword">return</span> high|low;<br>&#125;<br><br><span class="hljs-comment">//对输入word中的每一个字节进行S盒变换</span><br><span class="hljs-function">word <span class="hljs-title">SubWord</span><span class="hljs-params">(<span class="hljs-type">const</span> word&amp; sw)</span></span>&#123;<br>   word temp;<br>   <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">32</span>;i+=<span class="hljs-number">8</span>)&#123;<br>    <span class="hljs-type">int</span> row=sw[i<span class="hljs-number">+7</span>]*<span class="hljs-number">8</span>+sw[i<span class="hljs-number">+6</span>]*<span class="hljs-number">4</span>+sw[i<span class="hljs-number">+5</span>]*<span class="hljs-number">2</span>+sw[i<span class="hljs-number">+4</span>];<br>    <span class="hljs-type">int</span> col=sw[i<span class="hljs-number">+3</span>]*<span class="hljs-number">8</span>+sw[i<span class="hljs-number">+2</span>]*<span class="hljs-number">4</span>+sw[i<span class="hljs-number">+1</span>]*<span class="hljs-number">2</span>+sw[i];<br>    byte val =Sbox[row][col];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">8</span>;++j)&#123;<br>        temp[i+j]=val[j];<br>    &#125;<br>   &#125;<br>   <span class="hljs-keyword">return</span> temp;<br>&#125;<br><br><span class="hljs-comment">//密钥扩展函数-对128位密钥拓展得到 w[4*(Nr+1)]</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">KeyExpansion</span><span class="hljs-params">(byte key[<span class="hljs-number">4</span>*Nk],word w[<span class="hljs-number">4</span>*(Nr<span class="hljs-number">+1</span>)])</span></span>&#123;<br>    word temp;<br>    <span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br>    <br>    <span class="hljs-keyword">while</span>(i&lt;Nk)&#123;<br>        <span class="hljs-comment">// w[]的前4个就是输入的key</span><br>        w[i]=<span class="hljs-built_in">Word</span>(key[<span class="hljs-number">4</span>*i],key[<span class="hljs-number">4</span>*i<span class="hljs-number">+1</span>],key[<span class="hljs-number">4</span>*i<span class="hljs-number">+2</span>],key[<span class="hljs-number">4</span>*i<span class="hljs-number">+3</span>]);<br>        ++i;<br>    &#125;<br><br>    i=Nk;<br>    <span class="hljs-keyword">while</span>(i&lt;<span class="hljs-number">4</span>*(Nr<span class="hljs-number">+1</span>))&#123;<br>        temp=w[i<span class="hljs-number">-1</span>]; <span class="hljs-comment">// 记录前一个word</span><br>        <span class="hljs-keyword">if</span>(i%Nk==<span class="hljs-number">0</span>)<br>            w[i]=w[i-Nk]^<span class="hljs-built_in">SubWord</span>(<span class="hljs-built_in">RotWord</span>(temp))^Rcon[i/Nk<span class="hljs-number">-1</span>];<br>        <span class="hljs-keyword">else</span><br>            w[i]=w[i-Nk]^temp;<br>        ++i;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment">//加解密函数</span><br><span class="hljs-comment">//加密</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">encrypt</span><span class="hljs-params">(byte in[<span class="hljs-number">4</span>*<span class="hljs-number">4</span>], word w[<span class="hljs-number">4</span>*(Nr<span class="hljs-number">+1</span>)])</span></span><br><span class="hljs-function"></span>&#123;<br>word key[<span class="hljs-number">4</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">4</span>; ++i)<br>key[i] = w[i];<br><span class="hljs-built_in">AddRoundKey</span>(in, key);<br> <br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> round=<span class="hljs-number">1</span>; round&lt;Nr; ++round)<br>&#123;<br><span class="hljs-built_in">SubBytes</span>(in);<br><span class="hljs-built_in">ShiftRows</span>(in);<br><span class="hljs-built_in">MixColumns</span>(in);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">4</span>; ++i)<br>key[i] = w[<span class="hljs-number">4</span>*round+i];<br><span class="hljs-built_in">AddRoundKey</span>(in, key);<br>&#125;<br> <br><span class="hljs-built_in">SubBytes</span>(in);<br><span class="hljs-built_in">ShiftRows</span>(in);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">4</span>; ++i)<br>key[i] = w[<span class="hljs-number">4</span>*Nr+i];<br><span class="hljs-built_in">AddRoundKey</span>(in, key);<br>&#125;<br><br><span class="hljs-comment">//解密</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">decrypt</span><span class="hljs-params">(byte in[<span class="hljs-number">4</span>*<span class="hljs-number">4</span>], word w[<span class="hljs-number">4</span>*(Nr<span class="hljs-number">+1</span>)])</span></span><br><span class="hljs-function"></span>&#123;<br>word key[<span class="hljs-number">4</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">4</span>; ++i)<br>key[i] = w[<span class="hljs-number">4</span>*Nr+i];<br><span class="hljs-built_in">AddRoundKey</span>(in, key);<br> <br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> round=Nr<span class="hljs-number">-1</span>; round&gt;<span class="hljs-number">0</span>; --round)<br>&#123;<br><span class="hljs-built_in">InvShiftRows</span>(in);<br><span class="hljs-built_in">InvSubBytes</span>(in);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">4</span>; ++i)<br>key[i] = w[<span class="hljs-number">4</span>*round+i];<br><span class="hljs-built_in">AddRoundKey</span>(in, key);<br><span class="hljs-built_in">InvMixColumns</span>(in);<br>&#125;<br> <br><span class="hljs-built_in">InvShiftRows</span>(in);<br><span class="hljs-built_in">InvSubBytes</span>(in);<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">4</span>; ++i)<br>key[i] = w[i];<br><span class="hljs-built_in">AddRoundKey</span>(in, key);<br>&#125;<br><br><br><span class="hljs-comment">//test</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    byte key[<span class="hljs-number">16</span>] = &#123;<span class="hljs-number">0x2b</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x16</span>, <br>        <span class="hljs-number">0x28</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0xa6</span>, <br>        <span class="hljs-number">0xab</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x88</span>, <br>        <span class="hljs-number">0x09</span>, <span class="hljs-number">0xcf</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0x3c</span>&#125;;<br><br>    byte plain[<span class="hljs-number">16</span>] = &#123;<span class="hljs-number">0x32</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xe0</span>, <br>        <span class="hljs-number">0x43</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x37</span>,<br>        <span class="hljs-number">0xf6</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x07</span>,<br>        <span class="hljs-number">0xa8</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x34</span>&#125;; <br>    <span class="hljs-comment">//输出密钥</span><br>    cout&lt;&lt;<span class="hljs-string">&quot;key is: &quot;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">16</span>;++i)&#123;<br>        cout&lt;&lt;hex&lt;&lt;key[i].<span class="hljs-built_in">to_ulong</span>()&lt;&lt;<span class="hljs-string">&quot; &quot;</span>;<br>    &#125;<br>    cout&lt;&lt;endl;<br><br>    word w[<span class="hljs-number">4</span>*(Nr<span class="hljs-number">+1</span>)];<br><span class="hljs-built_in">KeyExpansion</span>(key, w);<br><br>    <span class="hljs-comment">//输出待加密的明文</span><br>    cout&lt;&lt;<span class="hljs-string">&quot;plaintext is: &quot;</span>&lt;&lt;endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">16</span>; ++i)<br>&#123;<br>cout &lt;&lt; hex &lt;&lt; plain[i].<span class="hljs-built_in">to_ulong</span>() &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">if</span>((i<span class="hljs-number">+1</span>)%<span class="hljs-number">4</span> == <span class="hljs-number">0</span>)<br>cout &lt;&lt; endl;<br>&#125;<br>cout &lt;&lt; endl;<br>    <br>    <span class="hljs-comment">//加密</span><br>    <span class="hljs-built_in">encrypt</span>(plain, w);<br>    <span class="hljs-comment">//输出加密后的密文</span><br>    cout&lt;&lt;<span class="hljs-string">&quot;encodetext is: &quot;</span>&lt;&lt;endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">16</span>; ++i)<br>&#123;<br>cout &lt;&lt; hex &lt;&lt; plain[i].<span class="hljs-built_in">to_ulong</span>() &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">if</span>((i<span class="hljs-number">+1</span>)%<span class="hljs-number">4</span> == <span class="hljs-number">0</span>)<br>cout &lt;&lt; endl;<br>&#125;<br>cout &lt;&lt; endl;<br><br>    <span class="hljs-comment">//解密</span><br>    <span class="hljs-built_in">decrypt</span>(plain, w);<br>    <span class="hljs-comment">//输出解密后的明文</span><br>    cout&lt;&lt;<span class="hljs-string">&quot;decodetext is: &quot;</span>&lt;&lt;endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; i&lt;<span class="hljs-number">16</span>; ++i)<br>&#123;<br>cout &lt;&lt; hex &lt;&lt; plain[i].<span class="hljs-built_in">to_ulong</span>() &lt;&lt; <span class="hljs-string">&quot; &quot;</span>;<br><span class="hljs-keyword">if</span>((i<span class="hljs-number">+1</span>)%<span class="hljs-number">4</span> == <span class="hljs-number">0</span>)<br>cout &lt;&lt; endl;<br>&#125;<br>cout &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="SM4"><a href="#SM4" class="headerlink" title="SM4"></a>SM4</h3><ul><li>明文分组长度为128位，密钥长度为128位</li><li>16x16的S盒</li></ul><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">static const unsigned char SboxTable[<span class="hljs-number">16</span>][<span class="hljs-number">16</span>] =<br>&#123;<br>    &#123;<span class="hljs-number">0xd6</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0xcc</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0xb7</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xfb</span>, <span class="hljs-number">0x2c</span>, <span class="hljs-number">0x05</span>&#125;,<br>    &#123;<span class="hljs-number">0x2b</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xc3</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x99</span>&#125;,<br>    &#123;<span class="hljs-number">0x9c</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xf4</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0xef</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x0b</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0xcf</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x62</span>&#125;,<br>    &#123;<span class="hljs-number">0xe4</span>, <span class="hljs-number">0xb3</span>, <span class="hljs-number">0x1c</span>, <span class="hljs-number">0xa9</span>, <span class="hljs-number">0xc9</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xdf</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x8f</span>, <span class="hljs-number">0x3f</span>, <span class="hljs-number">0xa6</span>&#125;,<br>    &#123;<span class="hljs-number">0x47</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0xfc</span>, <span class="hljs-number">0xf3</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xba</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xe6</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x4f</span>, <span class="hljs-number">0xa8</span>&#125;,<br>    &#123;<span class="hljs-number">0x68</span>, <span class="hljs-number">0x6b</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0xda</span>, <span class="hljs-number">0x8b</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0xeb</span>, <span class="hljs-number">0x0f</span>, <span class="hljs-number">0x4b</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x35</span>&#125;,<br>    &#123;<span class="hljs-number">0x1e</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xd1</span>, <span class="hljs-number">0xa2</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x7c</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x87</span>&#125;,<br>    &#123;<span class="hljs-number">0xd4</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x9f</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0xa0</span>, <span class="hljs-number">0xc4</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0x9e</span>&#125;,<br>    &#123;<span class="hljs-number">0xea</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xb5</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0xf7</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0xa1</span>&#125;,<br>    &#123;<span class="hljs-number">0xe0</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0xa4</span>, <span class="hljs-number">0x9b</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x1a</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0xe3</span>&#125;,<br>    &#123;<span class="hljs-number">0x1d</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0xe2</span>, <span class="hljs-number">0x2e</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0xc0</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x0d</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x4e</span>, <span class="hljs-number">0x6f</span>&#125;,<br>    &#123;<span class="hljs-number">0xd5</span>, <span class="hljs-number">0xdb</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xde</span>, <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x2f</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0xff</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0x6d</span>, <span class="hljs-number">0x6c</span>, <span class="hljs-number">0x5b</span>, <span class="hljs-number">0x51</span>&#125;,<br>    &#123;<span class="hljs-number">0x8d</span>, <span class="hljs-number">0x1b</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0xbc</span>, <span class="hljs-number">0x7f</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0xd9</span>, <span class="hljs-number">0x5c</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x1f</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x5a</span>, <span class="hljs-number">0xd8</span>&#125;,<br>    &#123;<span class="hljs-number">0x0a</span>, <span class="hljs-number">0xc1</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0x2d</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xd0</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xb8</span>, <span class="hljs-number">0xe5</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0xb0</span>&#125;,<br>    &#123;<span class="hljs-number">0x89</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x4a</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xf1</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0xc5</span>, <span class="hljs-number">0x6e</span>, <span class="hljs-number">0xc6</span>, <span class="hljs-number">0x84</span>&#125;,<br>    &#123;<span class="hljs-number">0x18</span>, <span class="hljs-number">0xf0</span>, <span class="hljs-number">0x7d</span>, <span class="hljs-number">0xec</span>, <span class="hljs-number">0x3a</span>, <span class="hljs-number">0xdc</span>, <span class="hljs-number">0x4d</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0xee</span>, <span class="hljs-number">0x5f</span>, <span class="hljs-number">0x3e</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xcb</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x48</span>&#125;<br>&#125;<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>加密</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>花指令</title>
    <link href="/2025/04/29/hua/"/>
    <url>/2025/04/29/hua/</url>
    
    <content type="html"><![CDATA[<p>花指令原理就是在真实代码中插入一些垃圾代码的同时还保证原有程序的正确执行, 而程序无法很好地反编译</p><h3 id="jz-jnz-指令"><a href="#jz-jnz-指令" class="headerlink" title="jz&#x2F;jnz 指令"></a>jz&#x2F;jnz 指令</h3><p>1.<br><code>jz</code>(jump if zero) 指令的本质：如果ZF&#x3D;1(前一条指令的结果为0)则跳转<br><code>jnz</code>(jump if not zero) 指令的本质：如果ZF&#x3D;0(前一条指令的结果不为0)则跳转<br>连续两条<code>jn、jnz</code>指令且跳转到同一个地址构造出无条件跳转，但 ida 不能正常识别<br>ida 打开有飘红的地方<br><img src="/../images/8/h1.png"><br>看汇编，这个地方有两条跳转指令，jn和jnz，跳转的地方是同一个地址<br><img src="/../images/8/h2.png"><br>下面的 mov 指令实际上6个字节，直接 nop 可能会 nop 多，所以先 <code>U</code>(undefine)一下看到更细的汇编再 nop<br><img src="/../images/8/h3.png"><br>把 jn&#x2F;jnz 指令其中一条改成 nop，另一条改成 jmp，直接跳转到后面的代码<br><img src="/../images/8/h4.png"><br><img src="/../images/8/h5.png"><br>最后在标签的位置(loc_413364) <code>U</code>一下，<code>P</code>(变成函数)一下，就修好了<br><img src="/../images/8/h6.png"><br><img src="/../images/8/h7.png"></p><ol start="2"><li>反编译失败，Tab 切换到汇编<br>在 下一条指令即 mov 处 <code>U</code><br><img src="/../images/8/h10.png"><br>在 跳转到的地方即 unk_41213F 处 <code>C</code><br><img src="/../images/8/h11.png"><br>又多出来两条新的jz jnz，重复上述步骤<br><img src="/../images/8/h12.png"><br>所有 jz jnz 出来之后，把这部分代码块都 nop 掉，再在最开始的标签处 <code>U</code> <code>P</code>，就能修复了<br><img src="/../images/8/h13.png"><br><img src="/../images/8/h14.png"><br>最后f5 就可以了<br><img src="/../images/8/h15.png"></li></ol><h3 id="xor-test-jz-jnz-指令"><a href="#xor-test-jz-jnz-指令" class="headerlink" title="xor test jz&#x2F;jnz 指令"></a>xor test jz&#x2F;jnz 指令</h3><p><img src="/../images/8/h17.png"><br><code>xor ebx,ebx</code> 将 ebx 清零，设置 ZF&#x3D;1<br><code>test ebx,ebx</code> 测试 ebx 的值，实际执行 ebx AND ebx ，结果为0,保持 ZF &#x3D;1<br><code>jnz short near ptr byte_412AC9</code> 若 ZF&#x3D;0,则跳转到 byte_412AC9，但此时 ZF&#x3D;1，条件不满足，继续执行下一条指令<br><code>jz short loc_412ACA</code>由于 ZF&#x3D;1，跳转到 loc_412ACA<br>所以这种结构的花指令必定会执行 jz 跳转，去花的话就将从 xor 到 jz跳转到的地方 之间的指令都 nop 掉<br><img src="/../images/8/h18.png"></p><h3 id="call-retn-指令"><a href="#call-retn-指令" class="headerlink" title="call-retn 指令"></a>call-retn 指令</h3><p>call指令的本质：push 下一条指令地址(函数返回地址)然后jmp 函数地址<br>ret指令的本质：pop eip</p><p>函数反编译失败，查看汇编<br><img src="/../images/8/h8.png"></p><ul><li>将 call 的下一条指令地址（0x412307）压入堆栈</li><li>反汇编器会尝试从 0x412307 开始解析指令，但此处被插入的 0xE8（call 的操作码）误导，导致后续代码解析错误<br><code>add [esp+0F0h+var_F0], 8</code> </li><li>实际操作：var_F0 是 IDA 生成的变量名，表示偏移 -0xF0，因此 esp+0F0h+var_F0 &#x3D; esp</li><li>等效代码：add [esp], 8，即将栈顶的返回地址（原为 0x412307）加 8，修改为 0x41230F<br>retn 的跳转:弹出修改后的返回地址 0x41230F，跳转到此处继续执行</li><li>把 call 到 0x41230F 的代码都 nop 掉<br><img src="/../images/8/h9.png">  </li><li>最后在 sub_4122B0 处 <code>U</code> <code>P</code> <code>F5</code>，就能修复了</li></ul><p>或者也可以动调看 rip&#x2F;eip 查看执行流程去花</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TGCTF Reverse 方向复现</title>
    <link href="/2025/04/27/tgctf/"/>
    <url>/2025/04/27/tgctf/</url>
    
    <content type="html"><![CDATA[<h3 id="base-64"><a href="#base-64" class="headerlink" title="base 64"></a>base 64</h3><p>变种 base64</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs py">custom_table = <span class="hljs-string">&quot;GLp/+Wn7uqX8FQ2JDR1c0M6U53sjBwyxglmrCVdSThAfEOvPHaYZNzo4ktK9iebI&quot;</span><br>table_dict = &#123;char: idx <span class="hljs-keyword">for</span> idx, char <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(custom_table)&#125;<br><br>encoded_str = <span class="hljs-string">&quot;AwLdOEVEhIWtajB2CbCWCbTRVsFFC8hirfiXC9gWH9HQayCJVbB8CIF=&quot;</span><br><br><span class="hljs-comment"># 移除末尾等号并计算填充数</span><br>pad_count = encoded_str.count(<span class="hljs-string">&#x27;=&#x27;</span>)<br>encoded_clean = encoded_str.rstrip(<span class="hljs-string">&#x27;=&#x27;</span>)<br><span class="hljs-comment">#rstrip()删除字符串结尾的指定字符 lstrip()删除字符串开开头的指定字符</span><br>decoded_bytes = []<br><br><span class="hljs-comment"># 每4字符一组解码</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(encoded_clean), <span class="hljs-number">4</span>):<br>    chunk = encoded_clean[i:i+<span class="hljs-number">4</span>].ljust(<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;A&#x27;</span>)  <span class="hljs-comment">#填充不影响最终结果</span><br>    <br>    <span class="hljs-comment">#计算每个字符对应的6位值</span><br>    indexes = []<br>    <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> chunk:<br>        <span class="hljs-keyword">if</span> c == <span class="hljs-string">&#x27;=&#x27;</span>:<br>            indexes.append(<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">else</span>:<br>            x = (table_dict[c] - <span class="hljs-number">24</span>) % <span class="hljs-number">64</span><br>            indexes.append(x)<br>    <br>    <span class="hljs-comment"># 组合成3字节</span><br>    byte1 = (indexes[<span class="hljs-number">0</span>] &lt;&lt; <span class="hljs-number">2</span>) | (indexes[<span class="hljs-number">1</span>] &gt;&gt; <span class="hljs-number">4</span>)<br>    byte2 = ((indexes[<span class="hljs-number">1</span>] &amp; <span class="hljs-number">0x0F</span>) &lt;&lt; <span class="hljs-number">4</span>) | (indexes[<span class="hljs-number">2</span>] &gt;&gt; <span class="hljs-number">2</span>)<br>    byte3 = ((indexes[<span class="hljs-number">2</span>] &amp; <span class="hljs-number">0x03</span>) &lt;&lt; <span class="hljs-number">6</span>) | indexes[<span class="hljs-number">3</span>]<br>    <br>    decoded_bytes.extend([byte1, byte2, byte3])<br><br><span class="hljs-comment"># 根据填充数去除多余字节</span><br><span class="hljs-keyword">if</span> pad_count:<br>    decoded_bytes = decoded_bytes[:-pad_count]<br><span class="hljs-comment">#如果原始编码字符中有填充的等号，根据 pad_count 去除解码结果中多余的字节</span><br><br><span class="hljs-comment"># 转换为字符串并拼接Flag</span><br>flag_content = <span class="hljs-built_in">bytes</span>(decoded_bytes).decode(<span class="hljs-string">&#x27;latin-1&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;HZNUCTF&#123;&#123;<span class="hljs-subst">&#123;flag_content&#125;</span>&#125;&#125;&quot;</span>)<br></code></pre></td></tr></table></figure><p>得到flag<code>HZNUCTF&#123;ad162c-2d94-434d-9222-b65dc76a32&#125;</code></p><h3 id="XTEA"><a href="#XTEA" class="headerlink" title="XTEA"></a>XTEA</h3><ol><li>种子确定，拿到key</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdlib&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iomanip&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">srand</span>(<span class="hljs-number">0x7e9u</span>); <span class="hljs-comment">// 初始化随机数种子</span><br><br>    <span class="hljs-comment">// 生成四个随机数</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">4</span>; i++) &#123;<br>        <span class="hljs-type">uint32_t</span> value = <span class="hljs-built_in">rand</span>() &amp; <span class="hljs-number">0xFFFF</span>; <span class="hljs-comment">// 取低 16 位</span><br>        std::cout &lt;&lt; <span class="hljs-string">&quot;Generated: 0x&quot;</span> &lt;&lt; std::hex &lt;&lt; value &lt;&lt; std::endl;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">// Generated: 0x19fb</span><br><span class="hljs-comment">// Generated: 0x3bba</span><br><span class="hljs-comment">// Generated: 0x4f59</span><br><span class="hljs-comment">// Generated: 0x1217</span><br></code></pre></td></tr></table></figure><p>解密脚本</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">decrypt</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> v[<span class="hljs-number">2</span>], <span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> key[<span class="hljs-number">4</span>])</span> </span>&#123;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">uint32_t</span> v0 = v[<span class="hljs-number">0</span>], v1 = v[<span class="hljs-number">1</span>], delta = <span class="hljs-number">0x9E3779B9</span>, sum = delta * (<span class="hljs-number">-32</span>);<br>    <span class="hljs-keyword">for</span> (i=<span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++) &#123;<br>        v1 -= (((v0 &lt;&lt; <span class="hljs-number">4</span>) ^ (v0 &gt;&gt; <span class="hljs-number">5</span>)) + v0) ^ (sum + key[(sum&gt;&gt;<span class="hljs-number">11</span>) &amp; <span class="hljs-number">3</span>]);<br>        sum += delta;<br>        v0 -= (((v1 &lt;&lt; <span class="hljs-number">4</span>) ^ (v1 &gt;&gt; <span class="hljs-number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="hljs-number">3</span>]);<br><br>    &#125;<br>    v[<span class="hljs-number">0</span>] = v0; v[<span class="hljs-number">1</span>] = v1;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">uint32_t</span> <span class="hljs-type">const</span> k[<span class="hljs-number">4</span>] = &#123;<span class="hljs-number">0x19f8</span>,<span class="hljs-number">0x11be</span>,<span class="hljs-number">0x991</span>,<span class="hljs-number">0x3418</span>&#125;;<br>    <span class="hljs-type">uint32_t</span> enc[] = &#123;<span class="hljs-number">0x8ccb2324</span>,<span class="hljs-number">0x9a7741a</span>,<span class="hljs-number">0xfb3c678d</span>,<span class="hljs-number">0xf6083a79</span>,<span class="hljs-number">0xf1cc241b</span>,<span class="hljs-number">0x39fa59f2</span>,<span class="hljs-number">0xf2abe1cc</span>,<span class="hljs-number">0x17189f72</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">6</span>; i&gt;=<span class="hljs-number">0</span>; i-=<span class="hljs-number">1</span>)&#123;  <span class="hljs-comment">//倒着解密</span><br>        <span class="hljs-built_in">decrypt</span>(&amp;enc[i], k);<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) &#123;  <br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> m = <span class="hljs-number">3</span>; m&gt;=<span class="hljs-number">0</span>; m--) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, (enc[i] &gt;&gt; (<span class="hljs-number">8</span> * m)) &amp; <span class="hljs-number">0xff</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>得到flag<code>HZNUCTF&#123;ae6-9f57-4b74-b423-98eb&#125;</code></p><h3 id="水果忍者"><a href="#水果忍者" class="headerlink" title="水果忍者"></a>水果忍者</h3><ol><li>Unity游戏的核心逻辑通常由C#脚本编写，编译后会被打包到 Assembly-CSharp.dll;该文件位于游戏目录的 &lt;游戏名&gt;_Data\Managed\ 下,如本题在 <strong>\水果忍者\Fruit Ninja_Data\Managed\Assembly-CSharp.dll</strong> 中</li><li>用<code>dnSpy</code>打开 Assembly-CSharp.dll,在 <strong>GameManager</strong> 里面找到：<br><img src="/../images/7/sg1.png"><br>在 Decrypt 里看到是 AES 加密，而密文、密钥、iv 在下面都能找到<br><img src="/../images/7/sg2.png"><br>CyberChef 解密<br><img src="/../images/7/sg3.png"><br>flag为<code>HZNUCTF&#123;de20-70dd-4e62-b8d0-06e&#125;</code></li></ol><h3 id="蛇年的本名语言"><a href="#蛇年的本名语言" class="headerlink" title="蛇年的本名语言"></a>蛇年的本名语言</h3><ol start="0"><li><code>pyc</code>: 脚本文件编译得到的字节码, 二进制文件<br><code>pyd</code>: 基本的Windows DLL文件, python的动态链接库</li><li>用 <code>pyinstxtractor</code> 解包 exe 文件,把 pyinstxtractor.py 和 output.exe 放在同一目录下，执行</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python pyinstxtractor.py output.exe<br></code></pre></td></tr></table></figure><p>解包后发现是 pyc，用 <a href="https://tool.lu/pyc">https://tool.lu/pyc</a> 解密 output.pyc，得到的代码变量命名被混淆<br>稍微修改一下</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">from</span> collections <span class="hljs-keyword">import</span> Counter<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Welcome to HZNUCTF!!!&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Plz input the flag:&quot;</span>)<br>a = <span class="hljs-built_in">input</span>()<br>b = Counter(a)<br>c = <span class="hljs-string">&quot;&quot;</span>.join((<span class="hljs-built_in">str</span>(b[v]) <span class="hljs-keyword">for</span> v <span class="hljs-keyword">in</span> a))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ans1: &quot;</span>, _end_=<span class="hljs-string">&quot;&quot;</span>)<br><span class="hljs-built_in">print</span>(c)<br><span class="hljs-keyword">if</span> c != <span class="hljs-string">&quot;111111116257645365477364777645752361&quot;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;wrong_wrong!!!&quot;</span>)<br>    exit(<span class="hljs-number">1</span>)<br>x = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> v <span class="hljs-keyword">in</span> a:<br>    <span class="hljs-keyword">if</span> b[v] &gt; <span class="hljs-number">0</span>:<br>        x += v + <span class="hljs-built_in">str</span>(b[v])<br>        b[v] = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">else</span>:<br>        enc = [<span class="hljs-built_in">ord</span>(v) <span class="hljs-keyword">for</span> v <span class="hljs-keyword">in</span> x]<br>        n = [<br>         <span class="hljs-number">7</span> * enc[<span class="hljs-number">0</span>] == <span class="hljs-number">504</span>,<br>         <span class="hljs-number">9</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">5</span> * enc[<span class="hljs-number">1</span>] == <span class="hljs-number">403</span>,<br>         <span class="hljs-number">2</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">5</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">2</span>] == <span class="hljs-number">799</span>,<br>         <span class="hljs-number">3</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">8</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">20</span> * enc[<span class="hljs-number">3</span>] == <span class="hljs-number">2938</span>,<br>         <span class="hljs-number">5</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">20</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">19</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">4</span>] == <span class="hljs-number">2042</span>,<br>         <span class="hljs-number">7</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">11</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">5</span> * enc[<span class="hljs-number">5</span>] == <span class="hljs-number">1225</span>,<br>         <span class="hljs-number">11</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">33</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">44</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">77</span> * enc[<span class="hljs-number">6</span>] == <span class="hljs-number">7975</span>,<br>         <span class="hljs-number">21</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">24</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">7</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">7</span>] == <span class="hljs-number">229</span>,<br>         <span class="hljs-number">2</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">65</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">29</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">20</span> * enc[<span class="hljs-number">8</span>] == <span class="hljs-number">2107</span>,<br>         <span class="hljs-number">10</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">1</span>] + -<span class="hljs-number">9</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">22</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">30</span> * enc[<span class="hljs-number">9</span>] == <span class="hljs-number">4037</span>,<br>         <span class="hljs-number">15</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">59</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">56</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">122</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">32</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">9</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">10</span>] == <span class="hljs-number">4950</span>,<br>         <span class="hljs-number">13</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">29</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">39</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">33</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">42</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">62</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">9</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">11</span> * enc[<span class="hljs-number">11</span>] == <span class="hljs-number">12544</span>,<br>         <span class="hljs-number">23</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">29</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">3</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">63</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">25</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">32</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">9</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">11</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">12</span>] == <span class="hljs-number">6585</span>,<br>         <span class="hljs-number">223</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">29</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">53</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">3</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">65</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">36</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">9</span>] - <span class="hljs-number">15</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">13</span>] == <span class="hljs-number">6893</span>,<br>         <span class="hljs-number">29</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">9</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">93</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">33</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">65</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">36</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">9</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">68</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">33</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">14</span> * enc[<span class="hljs-number">14</span>] == <span class="hljs-number">1883</span>,<br>         <span class="hljs-number">69</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">77</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">93</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">36</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">19</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">8</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">38</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">15</span>] == <span class="hljs-number">8257</span>,<br>         <span class="hljs-number">23</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">3</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">11</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">12</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">24</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">14</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">0</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">68</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">68</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">15</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">16</span>] == <span class="hljs-number">5847</span>,<br>         <span class="hljs-number">24</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">1</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">15</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">67</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">146</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">50</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">1</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">27</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">45</span> * enc[<span class="hljs-number">15</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">17</span> * enc[<span class="hljs-number">17</span>] == <span class="hljs-number">18257</span>,<br>         <span class="hljs-number">25</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">89</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">19</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">44</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">36</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">150</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">250</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">166</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">126</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">11</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">690</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">207</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">46</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">17</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">18</span>] == <span class="hljs-number">12591</span>,<br>         <span class="hljs-number">5</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">8</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">160</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">4</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">36</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">15</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">1</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">690</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">46</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">17</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">19</span> * enc[<span class="hljs-number">19</span>] == <span class="hljs-number">52041</span>,<br>         <span class="hljs-number">29</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">60</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">90</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">4</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">21</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">46</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">65</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">17</span>] - <span class="hljs-number">1</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">39</span> * enc[<span class="hljs-number">19</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">20</span>] == <span class="hljs-number">20253</span>,<br>         <span class="hljs-number">45</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">56</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">650</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">900</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">44</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">6</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">21</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">10</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">406</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">651</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">17</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">19</span>] - <span class="hljs-number">0</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] == <span class="hljs-number">18768</span>,<br>         <span class="hljs-number">555</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">6666</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">70</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">510</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">90</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">499</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">6</span>] - <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">610</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">221</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">10</span>] - <span class="hljs-number">23</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">102</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">2050</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">406</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">665</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">333</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">201</span> * enc[<span class="hljs-number">21</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">22</span>] == <span class="hljs-number">111844</span>,<br>         <span class="hljs-number">1</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">333</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4444</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">5555</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">666</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">676</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">660</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">10</span>] - <span class="hljs-number">73</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">107</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">65</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">39</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">201</span> * enc[<span class="hljs-number">21</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] == <span class="hljs-number">159029</span>,<br>         <span class="hljs-number">520</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">222</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">333</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">56655</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">220</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">73</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">1007</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">7777</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">2500</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">605</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">390</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">99999</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">210</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">232</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>] == <span class="hljs-number">2762025</span>,<br>         <span class="hljs-number">1323</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">333</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">660</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">220</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">2500</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">605</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">390</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">9999</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">210</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">232</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>] + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] == <span class="hljs-number">1551621</span>,<br>         <span class="hljs-number">777</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">6969</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">220</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">65</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">90</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">999</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">232</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>] + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">26</span>] == <span class="hljs-number">948348</span>,<br>         <span class="hljs-number">97</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">6969</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">56</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">707</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + -<span class="hljs-number">9</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">90</span> * enc[<span class="hljs-number">17</span>] + -<span class="hljs-number">2</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>] + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">26</span>] + <span class="hljs-number">27</span> * enc[<span class="hljs-number">27</span>] == <span class="hljs-number">777044</span>,<br>         <span class="hljs-number">177</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">699</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">64</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">56</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">96</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">66</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">707</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + -<span class="hljs-number">9</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">17</span>] + -<span class="hljs-number">2</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">222</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">224</span> * enc[<span class="hljs-number">24</span>] + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">26</span>] + <span class="hljs-number">27</span> * enc[<span class="hljs-number">27</span>] - <span class="hljs-number">28</span> * enc[<span class="hljs-number">28</span>] == <span class="hljs-number">185016</span>,<br>         <span class="hljs-number">77</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">96</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">9</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">0</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">707</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + -<span class="hljs-number">9</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">17</span>] + -<span class="hljs-number">2</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">222</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">224</span> * enc[<span class="hljs-number">24</span>] + <span class="hljs-number">26</span> * enc[<span class="hljs-number">25</span>] - -<span class="hljs-number">58</span> * enc[<span class="hljs-number">26</span>] + <span class="hljs-number">27</span> * enc[<span class="hljs-number">27</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">28</span>] + <span class="hljs-number">29</span> * enc[<span class="hljs-number">29</span>] == <span class="hljs-number">130106</span>]<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">all</span>(n):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Congratulation!!!&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;wrong_wrong!!!&quot;</span>)<br></code></pre></td></tr></table></figure><p>一眼 z3, <code>111111116257645365477364777645752361</code>即密文，每个数字代表一个字符出现的次数<br>z3 求解</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># 定义 30 个变量，对应 flag 的每个字符的 ASCII 值</span><br>enc = [Int(<span class="hljs-string">f&#x27;enc<span class="hljs-subst">&#123;j&#125;</span>&#x27;</span>) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>)]<br><br>s = Solver()<br><br><span class="hljs-comment"># 限制所有变量在 ASCII 范围内（通常 flag 用可打印字符）</span><br><span class="hljs-keyword">for</span> var <span class="hljs-keyword">in</span> enc:<br>    s.add(var &gt;= <span class="hljs-number">32</span>, var &lt;= <span class="hljs-number">126</span>)<br><br><br>s.add(<span class="hljs-number">7</span> * enc[<span class="hljs-number">0</span>] == <span class="hljs-number">504</span>)<br>s.add(<span class="hljs-number">9</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">5</span> * enc[<span class="hljs-number">1</span>] == <span class="hljs-number">403</span>)<br>s.add(<span class="hljs-number">2</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">5</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">2</span>] == <span class="hljs-number">799</span>)<br>s.add(<span class="hljs-number">3</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">8</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">20</span> * enc[<span class="hljs-number">3</span>] == <span class="hljs-number">2938</span>)<br>s.add(<span class="hljs-number">5</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">20</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">19</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">4</span>] == <span class="hljs-number">2042</span>)<br>s.add(<span class="hljs-number">7</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">11</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">5</span> * enc[<span class="hljs-number">5</span>] == <span class="hljs-number">1225</span>)<br>s.add(<span class="hljs-number">11</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">33</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">44</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">77</span> * enc[<span class="hljs-number">6</span>] == <span class="hljs-number">7975</span>)<br>s.add(<span class="hljs-number">21</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">24</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">7</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">7</span>] == <span class="hljs-number">229</span>)<br>s.add(<span class="hljs-number">2</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">65</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">29</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">20</span> * enc[<span class="hljs-number">8</span>] == <span class="hljs-number">2107</span>)<br>s.add(<span class="hljs-number">10</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">9</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">4</span>] + enc[<span class="hljs-number">5</span>] + <span class="hljs-number">22</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">30</span> * enc[<span class="hljs-number">9</span>] == <span class="hljs-number">4037</span>)<br>s.add(<span class="hljs-number">15</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">59</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">56</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">4</span>] + enc[<span class="hljs-number">5</span>] - <span class="hljs-number">122</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">32</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">9</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">10</span>] == <span class="hljs-number">4950</span>)<br>s.add(<span class="hljs-number">13</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">29</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">39</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">33</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">42</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">62</span> * enc[<span class="hljs-number">8</span>] + enc[<span class="hljs-number">9</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">11</span> * enc[<span class="hljs-number">11</span>] == <span class="hljs-number">12544</span>)<br>s.add(<span class="hljs-number">23</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">29</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">3</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">63</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">25</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">32</span> * enc[<span class="hljs-number">8</span>] + enc[<span class="hljs-number">9</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">11</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">12</span>] == <span class="hljs-number">6585</span>)<br>s.add(<span class="hljs-number">223</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">29</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">53</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">3</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">65</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">36</span> * enc[<span class="hljs-number">8</span>] + enc[<span class="hljs-number">9</span>] - <span class="hljs-number">15</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">13</span>] == <span class="hljs-number">6893</span>)<br>s.add(<span class="hljs-number">29</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">9</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">93</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">33</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">65</span> * enc[<span class="hljs-number">6</span>] + enc[<span class="hljs-number">7</span>] - <span class="hljs-number">36</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">68</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">33</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">14</span> * enc[<span class="hljs-number">14</span>] == <span class="hljs-number">1883</span>)<br>s.add(<span class="hljs-number">69</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">77</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">93</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">3</span>] + enc[<span class="hljs-number">6</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">36</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">19</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">8</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">38</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">15</span>] == <span class="hljs-number">8257</span>)<br>s.add(<span class="hljs-number">23</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">3</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">11</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">12</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">24</span> * enc[<span class="hljs-number">5</span>] + enc[<span class="hljs-number">6</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">14</span> * enc[<span class="hljs-number">8</span>] + enc[<span class="hljs-number">10</span>] + <span class="hljs-number">68</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">68</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">15</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">16</span>] == <span class="hljs-number">5847</span>)<br>s.add(<span class="hljs-number">24</span> * enc[<span class="hljs-number">0</span>] - enc[<span class="hljs-number">2</span>] - <span class="hljs-number">15</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">67</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">146</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">50</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">11</span>] - enc[<span class="hljs-number">12</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">27</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">45</span> * enc[<span class="hljs-number">15</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">17</span> * enc[<span class="hljs-number">17</span>] == <span class="hljs-number">18257</span>)<br>s.add(<span class="hljs-number">25</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">89</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">19</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">44</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">36</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">150</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">250</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">166</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">126</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">11</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">690</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">207</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">46</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">17</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">18</span>] == <span class="hljs-number">12591</span>)<br>s.add(<span class="hljs-number">5</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">8</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">160</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">4</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">36</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">15</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">11</span>] - enc[<span class="hljs-number">12</span>] + <span class="hljs-number">690</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">46</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">17</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">19</span> * enc[<span class="hljs-number">19</span>] == <span class="hljs-number">52041</span>)<br>s.add(<span class="hljs-number">29</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">60</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">90</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">4</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">21</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">46</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">65</span> * enc[<span class="hljs-number">16</span>] - enc[<span class="hljs-number">18</span>] + <span class="hljs-number">39</span> * enc[<span class="hljs-number">19</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">20</span>] == <span class="hljs-number">20253</span>)<br>s.add(<span class="hljs-number">45</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">56</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">650</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">900</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">44</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">6</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">21</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">10</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">406</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">651</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">17</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] == <span class="hljs-number">18768</span>)<br>s.add(<span class="hljs-number">555</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">6666</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">70</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">510</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">90</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">499</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">6</span>] - <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">610</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">221</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">10</span>] - <span class="hljs-number">23</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">102</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">2050</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">406</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">665</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">333</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">201</span> * enc[<span class="hljs-number">21</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">22</span>] == <span class="hljs-number">111844</span>,)<br>s.add(<span class="hljs-number">1</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">333</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4444</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">5555</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">666</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">676</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">660</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">10</span>] - <span class="hljs-number">73</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">107</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">65</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">39</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">201</span> * enc[<span class="hljs-number">21</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] == <span class="hljs-number">159029</span>,)<br>s.add(<span class="hljs-number">520</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">222</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">333</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">56655</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">220</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">73</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">1007</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">7777</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">2500</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">605</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">390</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">99999</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">210</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">232</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>] == <span class="hljs-number">2762025</span>,)<br>s.add(<span class="hljs-number">1323</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">333</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">660</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">220</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">2500</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">605</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">390</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">9999</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">210</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">232</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>] + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] == <span class="hljs-number">1551621</span>,)<br>s.add(<span class="hljs-number">777</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">6969</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">220</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">65</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">90</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">999</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">232</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>] + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">26</span>] == <span class="hljs-number">948348</span>,)<br>s.add(<span class="hljs-number">97</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">6969</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">56</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">707</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + -<span class="hljs-number">9</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">90</span> * enc[<span class="hljs-number">17</span>] + -<span class="hljs-number">2</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>] + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">26</span>] + <span class="hljs-number">27</span> * enc[<span class="hljs-number">27</span>] == <span class="hljs-number">777044</span>,)<br>s.add(<span class="hljs-number">177</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">699</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">64</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">56</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">96</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">66</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">707</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + -<span class="hljs-number">9</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">17</span>] + -<span class="hljs-number">2</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">222</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">224</span> * enc[<span class="hljs-number">24</span>] + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">26</span>] + <span class="hljs-number">27</span> * enc[<span class="hljs-number">27</span>] - <span class="hljs-number">28</span> * enc[<span class="hljs-number">28</span>] == <span class="hljs-number">185016</span>,)<br>s.add(<span class="hljs-number">77</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">96</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">9</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">0</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">707</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + -<span class="hljs-number">9</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">17</span>] + -<span class="hljs-number">2</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">222</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">224</span> * enc[<span class="hljs-number">24</span>] + <span class="hljs-number">26</span> * enc[<span class="hljs-number">25</span>] - -<span class="hljs-number">58</span> * enc[<span class="hljs-number">26</span>] + <span class="hljs-number">27</span> * enc[<span class="hljs-number">27</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">28</span>] + <span class="hljs-number">29</span> * enc[<span class="hljs-number">29</span>] == <span class="hljs-number">130106</span>)<br><br><br><span class="hljs-comment"># 求解</span><br><span class="hljs-keyword">if</span> s.check() == sat:<br>    model = s.model()<br>    flag = <span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">chr</span>(model[enc[j]].as_long()) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>)])<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Flag is:&quot;</span>, flag)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No solution found.&quot;</span>)<br></code></pre></td></tr></table></figure><p>output：<br>Flag is: <strong>H1Z1N1U1C1T1F1{1a6d275f7-463}1</strong><br>可以看到这里的一一对应关系 <code>HZNUCTF&#123;</code> 对应<code>11111111</code>,仍然回到这串数字<code>111111116257645365477364777645752361</code>,可以得到映射表 ‘6’-&gt;’a’,’2’-&gt;’d’,’5’-&gt;’7’,’7’-&gt;’f’,’4’-&gt;’-‘,’3’-&gt;’6’,’1’-&gt;’}’<br>继续求解</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">_encrypted_</span>):<br>    res= <span class="hljs-string">&quot;6257645365477364777645752361&quot;</span><br>    <br>    char_map = &#123;&#125;<br><br>    remaining_map = &#123;<br>        <span class="hljs-string">&#x27;6&#x27;</span>: <span class="hljs-string">&#x27;a&#x27;</span>,<br>        <span class="hljs-string">&#x27;2&#x27;</span>: <span class="hljs-string">&#x27;d&#x27;</span>,<br>        <span class="hljs-string">&#x27;5&#x27;</span>: <span class="hljs-string">&#x27;7&#x27;</span>,<br>        <span class="hljs-string">&#x27;7&#x27;</span>: <span class="hljs-string">&#x27;f&#x27;</span>,<br>        <span class="hljs-string">&#x27;4&#x27;</span>: <span class="hljs-string">&#x27;-&#x27;</span>,<br>        <span class="hljs-string">&#x27;3&#x27;</span>: <span class="hljs-string">&#x27;6&#x27;</span>,<br>        <span class="hljs-string">&#x27;1&#x27;</span>: <span class="hljs-string">&#x27;&#125;&#x27;</span><br>    &#125;<br>    char_map.update(remaining_map)<br>    <br>    result = <span class="hljs-string">&quot;HZNUCTF&#123;&quot;</span><br>    <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> res:<br>        result += char_map[num]<br>    <br>    <span class="hljs-keyword">return</span> result<br><br>s = Solver()<br><br>enc = [Int(<span class="hljs-string">f&#x27;x<span class="hljs-subst">&#123;i&#125;</span>&#x27;</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30</span>)]<br><br>s.add(<span class="hljs-number">7</span> * enc[<span class="hljs-number">0</span>] == <span class="hljs-number">504</span>)<br>s.add(<span class="hljs-number">9</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">5</span> * enc[<span class="hljs-number">1</span>] == <span class="hljs-number">403</span>)<br>s.add((<span class="hljs-number">2</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">5</span> * enc[<span class="hljs-number">1</span>]) + <span class="hljs-number">10</span> * enc[<span class="hljs-number">2</span>] == <span class="hljs-number">799</span>)<br>s.add(<span class="hljs-number">3</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">8</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">20</span> * enc[<span class="hljs-number">3</span>] == <span class="hljs-number">2938</span>)<br>s.add((<span class="hljs-number">5</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">15</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">20</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">19</span> * enc[<span class="hljs-number">3</span>]) + <span class="hljs-number">1</span> * enc[<span class="hljs-number">4</span>] == <span class="hljs-number">2042</span>)<br>s.add((<span class="hljs-number">7</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">11</span> * enc[<span class="hljs-number">3</span>]) + <span class="hljs-number">2</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">5</span> * enc[<span class="hljs-number">5</span>] == <span class="hljs-number">1225</span>)<br>s.add(<span class="hljs-number">11</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">33</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">44</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">77</span> * enc[<span class="hljs-number">6</span>] == <span class="hljs-number">7975</span>)<br>s.add(((<span class="hljs-number">21</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">24</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">6</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">7</span> * enc[<span class="hljs-number">6</span>]) + <span class="hljs-number">15</span> * enc[<span class="hljs-number">7</span>] == <span class="hljs-number">229</span>)<br>s.add((<span class="hljs-number">2</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">65</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">15</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">29</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">20</span> * enc[<span class="hljs-number">8</span>] == <span class="hljs-number">2107</span>)<br>s.add((<span class="hljs-number">10</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">1</span>] + -<span class="hljs-number">9</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">22</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">8</span>]) + <span class="hljs-number">30</span> * enc[<span class="hljs-number">9</span>] == <span class="hljs-number">4037</span>)<br>s.add((<span class="hljs-number">15</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">59</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">56</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">122</span> * enc[<span class="hljs-number">6</span>]) + <span class="hljs-number">21</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">32</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">9</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">10</span>] == <span class="hljs-number">4950</span>)<br>s.add((((<span class="hljs-number">13</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">29</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">39</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">33</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">13</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">6</span>]) + <span class="hljs-number">42</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">62</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">9</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">10</span>]) + <span class="hljs-number">11</span> * enc[<span class="hljs-number">11</span>] == <span class="hljs-number">12544</span>)<br>s.add((((<span class="hljs-number">23</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">29</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">3</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">63</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">25</span> * enc[<span class="hljs-number">6</span>]) + <span class="hljs-number">2</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">32</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">9</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">10</span>]) + <span class="hljs-number">11</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">12</span>] == <span class="hljs-number">6585</span>)<br>s.add(((((<span class="hljs-number">223</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">29</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">53</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">3</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">3</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">65</span> * enc[<span class="hljs-number">6</span>]) + <span class="hljs-number">0</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">36</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">9</span>] - <span class="hljs-number">15</span> * enc[<span class="hljs-number">10</span>]) + <span class="hljs-number">16</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">12</span>]) + <span class="hljs-number">13</span> * enc[<span class="hljs-number">13</span>] == <span class="hljs-number">6893</span>)<br>s.add(((((<span class="hljs-number">29</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">13</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">9</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">93</span> * enc[<span class="hljs-number">3</span>]) + <span class="hljs-number">33</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">65</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">36</span> * enc[<span class="hljs-number">8</span>]) + <span class="hljs-number">0</span> * enc[<span class="hljs-number">9</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">10</span>]) + <span class="hljs-number">96</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">68</span> * enc[<span class="hljs-number">12</span>]) + <span class="hljs-number">33</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">14</span> * enc[<span class="hljs-number">14</span>] == <span class="hljs-number">1883</span>)<br>s.add((((<span class="hljs-number">69</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">77</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">93</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">3</span>]) + <span class="hljs-number">0</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">36</span> * enc[<span class="hljs-number">8</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">9</span>] + <span class="hljs-number">19</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">8</span> * enc[<span class="hljs-number">12</span>]) + <span class="hljs-number">38</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">14</span>]) + <span class="hljs-number">15</span> * enc[<span class="hljs-number">15</span>] == <span class="hljs-number">8257</span>)<br>s.add(((((<span class="hljs-number">23</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">3</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">11</span> * enc[<span class="hljs-number">3</span>]) + <span class="hljs-number">12</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">24</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">1</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">14</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">0</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">1</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">68</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">12</span>]) + <span class="hljs-number">68</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">14</span>]) + <span class="hljs-number">15</span> * enc[<span class="hljs-number">15</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">16</span>] == <span class="hljs-number">5847</span>)<br>s.add((((((<span class="hljs-number">24</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">1</span> * enc[<span class="hljs-number">2</span>] - <span class="hljs-number">15</span> * enc[<span class="hljs-number">3</span>]) + <span class="hljs-number">13</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">67</span> * enc[<span class="hljs-number">7</span>] + <span class="hljs-number">146</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">50</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">16</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">1</span> * enc[<span class="hljs-number">12</span>]) + <span class="hljs-number">69</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">27</span> * enc[<span class="hljs-number">14</span>]) + <span class="hljs-number">45</span> * enc[<span class="hljs-number">15</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">16</span>]) + <span class="hljs-number">17</span> * enc[<span class="hljs-number">17</span>] == <span class="hljs-number">18257</span>)<br>s.add(((((<span class="hljs-number">25</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>] - <span class="hljs-number">89</span> * enc[<span class="hljs-number">2</span>]) + <span class="hljs-number">16</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">19</span> * enc[<span class="hljs-number">4</span>] + <span class="hljs-number">44</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">36</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">150</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">250</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">166</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">126</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">11</span> * enc[<span class="hljs-number">12</span>]) + <span class="hljs-number">690</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">207</span> * enc[<span class="hljs-number">14</span>]) + <span class="hljs-number">46</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">17</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">18</span>] == <span class="hljs-number">12591</span>)<br>s.add((((((<span class="hljs-number">5</span> * enc[<span class="hljs-number">0</span>] + <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>] + <span class="hljs-number">8</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">160</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">4</span> * enc[<span class="hljs-number">5</span>]) + <span class="hljs-number">36</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">15</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">66</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">16</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">1</span> * enc[<span class="hljs-number">12</span>]) + <span class="hljs-number">690</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">14</span>]) + <span class="hljs-number">46</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">7</span> * enc[<span class="hljs-number">17</span>] - <span class="hljs-number">18</span> * enc[<span class="hljs-number">18</span>]) + <span class="hljs-number">19</span> * enc[<span class="hljs-number">19</span>] == <span class="hljs-number">52041</span>)<br>s.add(((((((<span class="hljs-number">29</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">1</span>]) + <span class="hljs-number">0</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">60</span> * enc[<span class="hljs-number">3</span>] + <span class="hljs-number">90</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">4</span> * enc[<span class="hljs-number">5</span>]) + <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">16</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">21</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">69</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">12</span>]) + <span class="hljs-number">69</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">46</span> * enc[<span class="hljs-number">15</span>]) + <span class="hljs-number">65</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">17</span>] - <span class="hljs-number">1</span> * enc[<span class="hljs-number">18</span>]) + <span class="hljs-number">39</span> * enc[<span class="hljs-number">19</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">20</span>] == <span class="hljs-number">20253</span>)<br>s.add((((((((<span class="hljs-number">45</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">56</span> * enc[<span class="hljs-number">1</span>]) + <span class="hljs-number">10</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">650</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">900</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">44</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">6</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">21</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">9</span> * enc[<span class="hljs-number">10</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">12</span> * enc[<span class="hljs-number">12</span>]) + <span class="hljs-number">69</span> * enc[<span class="hljs-number">13</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">406</span> * enc[<span class="hljs-number">15</span>]) + <span class="hljs-number">651</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">17</span>] - <span class="hljs-number">10</span> * enc[<span class="hljs-number">18</span>]) + <span class="hljs-number">69</span> * enc[<span class="hljs-number">19</span>] - <span class="hljs-number">0</span> * enc[<span class="hljs-number">20</span>]) + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] == <span class="hljs-number">18768</span>)<br>s.add((((((<span class="hljs-number">555</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">6666</span> * enc[<span class="hljs-number">1</span>]) + <span class="hljs-number">70</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">510</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">90</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">499</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">6</span>] - <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">610</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">221</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">9</span> * enc[<span class="hljs-number">10</span>] - <span class="hljs-number">23</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">102</span> * enc[<span class="hljs-number">12</span>]) + <span class="hljs-number">6</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">2050</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">406</span> * enc[<span class="hljs-number">15</span>]) + <span class="hljs-number">665</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">333</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">201</span> * enc[<span class="hljs-number">21</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">22</span>] == <span class="hljs-number">111844</span>)<br>s.add((((((((<span class="hljs-number">1</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>]) + <span class="hljs-number">333</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4444</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">5555</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">666</span> * enc[<span class="hljs-number">6</span>]) + <span class="hljs-number">676</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">660</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">9</span> * enc[<span class="hljs-number">10</span>] - <span class="hljs-number">73</span> * enc[<span class="hljs-number">11</span>] - <span class="hljs-number">107</span> * enc[<span class="hljs-number">12</span>]) + <span class="hljs-number">6</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">15</span>]) + <span class="hljs-number">65</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">39</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">201</span> * enc[<span class="hljs-number">21</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">22</span>]) + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] == <span class="hljs-number">159029</span>)<br>s.add((((<span class="hljs-number">520</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">222</span> * enc[<span class="hljs-number">1</span>]) + <span class="hljs-number">333</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">56655</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">220</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">73</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">1007</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">7777</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">2500</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">605</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">390</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">99999</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">210</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">232</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>] == <span class="hljs-number">2762025</span>)<br>s.add(((((<span class="hljs-number">1323</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>]) + <span class="hljs-number">333</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">666</span> * enc[<span class="hljs-number">5</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">6</span>] + <span class="hljs-number">66</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">660</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">220</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">2500</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">6666</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">605</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">390</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">9999</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">210</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">232</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>]) + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] == <span class="hljs-number">1551621</span>)<br>s.add((((((<span class="hljs-number">777</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>]) + <span class="hljs-number">6969</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">55</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">666</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>]) + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">220</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">777</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + <span class="hljs-number">65</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">90</span> * enc[<span class="hljs-number">17</span>] + <span class="hljs-number">100</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">999</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">232</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>]) + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">26</span>] == <span class="hljs-number">948348</span>)<br>s.add(((((((<span class="hljs-number">97</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>]) + <span class="hljs-number">6969</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">4</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">56</span> * enc[<span class="hljs-number">4</span>]) + <span class="hljs-number">96</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>]) + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">707</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + -<span class="hljs-number">9</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">90</span> * enc[<span class="hljs-number">17</span>] + -<span class="hljs-number">2</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">609</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">2</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">24</span> * enc[<span class="hljs-number">24</span>]) + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">26</span>]) + <span class="hljs-number">27</span> * enc[<span class="hljs-number">27</span>] == <span class="hljs-number">777044</span>)<br>s.add((((((<span class="hljs-number">177</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">22</span> * enc[<span class="hljs-number">1</span>]) + <span class="hljs-number">699</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">64</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">56</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">96</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">66</span> * enc[<span class="hljs-number">6</span>]) + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">60</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">707</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + -<span class="hljs-number">9</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">17</span>] + -<span class="hljs-number">2</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">69</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">222</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">224</span> * enc[<span class="hljs-number">24</span>]) + <span class="hljs-number">25</span> * enc[<span class="hljs-number">25</span>] - <span class="hljs-number">26</span> * enc[<span class="hljs-number">26</span>]) + <span class="hljs-number">27</span> * enc[<span class="hljs-number">27</span>] - <span class="hljs-number">28</span> * enc[<span class="hljs-number">28</span>] == <span class="hljs-number">185016</span>)<br>s.add(((((((<span class="hljs-number">77</span> * enc[<span class="hljs-number">0</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">1</span>]) + <span class="hljs-number">6</span> * enc[<span class="hljs-number">2</span>] + <span class="hljs-number">6</span> * enc[<span class="hljs-number">3</span>] - <span class="hljs-number">96</span> * enc[<span class="hljs-number">4</span>] - <span class="hljs-number">9</span> * enc[<span class="hljs-number">5</span>] - <span class="hljs-number">6</span> * enc[<span class="hljs-number">6</span>]) + <span class="hljs-number">96</span> * enc[<span class="hljs-number">7</span>] - <span class="hljs-number">0</span> * enc[<span class="hljs-number">8</span>] - <span class="hljs-number">20</span> * enc[<span class="hljs-number">9</span>]) + <span class="hljs-number">99</span> * enc[<span class="hljs-number">10</span>] + <span class="hljs-number">3</span> * enc[<span class="hljs-number">11</span>] + <span class="hljs-number">10</span> * enc[<span class="hljs-number">12</span>] + <span class="hljs-number">707</span> * enc[<span class="hljs-number">13</span>] + <span class="hljs-number">250</span> * enc[<span class="hljs-number">14</span>] + <span class="hljs-number">666</span> * enc[<span class="hljs-number">15</span>] + -<span class="hljs-number">9</span> * enc[<span class="hljs-number">16</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">17</span>] + -<span class="hljs-number">2</span> * enc[<span class="hljs-number">18</span>] + <span class="hljs-number">9</span> * enc[<span class="hljs-number">19</span>] + <span class="hljs-number">0</span> * enc[<span class="hljs-number">20</span>] + <span class="hljs-number">21</span> * enc[<span class="hljs-number">21</span>] + <span class="hljs-number">222</span> * enc[<span class="hljs-number">22</span>] + <span class="hljs-number">23</span> * enc[<span class="hljs-number">23</span>] - <span class="hljs-number">224</span> * enc[<span class="hljs-number">24</span>]) + <span class="hljs-number">26</span> * enc[<span class="hljs-number">25</span>] - -<span class="hljs-number">58</span> * enc[<span class="hljs-number">26</span>]) + <span class="hljs-number">27</span> * enc[<span class="hljs-number">27</span>] - <span class="hljs-number">2</span> * enc[<span class="hljs-number">28</span>]) + <span class="hljs-number">29</span> * enc[<span class="hljs-number">29</span>] == <span class="hljs-number">130106</span>)<br><br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> enc:<br>    s.add(x &gt;= <span class="hljs-number">32</span>)<br>    s.add(x &lt;= <span class="hljs-number">126</span>)<br><br><span class="hljs-keyword">if</span> s.check() == sat:<br>    m = s.model()<br><br>    solution = [m[x].as_long() <span class="hljs-keyword">if</span> m[x] <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-number">0</span> <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> enc]<br>    <br>    decrypted = decrypt(solution)<br>    <span class="hljs-built_in">print</span>(decrypted)<br>    <br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No solution found&quot;</span>)<br></code></pre></td></tr></table></figure><p>得到flag<code>HZNUCTF&#123;ad7fa-76a7-ff6a-fffa-7f7d6a&#125;</code></p><h3 id="conforand"><a href="#conforand" class="headerlink" title="conforand"></a>conforand</h3><ol><li>直接用 ida 打开发现有 ollvm 混淆，用 <code>D-810</code> 先去混淆，从给出的符号表看到是 rc4 加密</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">v4 = <span class="hljs-built_in">rc4</span>(v127, <span class="hljs-number">42LL</span>, v125, <span class="hljs-number">9LL</span>);<br></code></pre></td></tr></table></figure><p>看传入的每个参数分别代表什么，往上看<br><img src="/../images/7/con2.png"><br><img src="/../images/7/con3.png"><br>大致为</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">rc4</span><span class="hljs-params">(<span class="hljs-type">void</span>* data, <span class="hljs-type">int</span> data_length, <span class="hljs-type">void</span>* key, <span class="hljs-type">int</span> key_length)</span></span>;<br></code></pre></td></tr></table></figure><p>密文长度为42个字节，密钥长度为9字节，即<code>JustDoIt!</code><br>2. 在<code>init</code>中的<code>sub_5s5s5s</code>里初始化随机数种子并传入密钥</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp">*v84 = <span class="hljs-built_in">time</span>(<span class="hljs-number">0LL</span>);<br><span class="hljs-built_in">srand</span>(seed);<br></code></pre></td></tr></table></figure><p>在<code>init_sbox</code>中调用<code>rand()</code>函数，种子不确定，rand()也只调用了这一次<br><strong>rc4</strong> 算法中包含一个 S 盒，是一个含有 256 个元素的数组，其中的每个元素都是一个 8 位无符号整数，即 0-255 范围内的值，rand（）函数被用来影响 S 盒的初始化过程，hook rand（）函数尝试爆破</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> lib=<span class="hljs-title class_">Process</span>.<span class="hljs-title function_">getModuleByName</span>(<span class="hljs-string">&quot;conforand&quot;</span>);<br><span class="hljs-keyword">var</span> sym=lib.<span class="hljs-title function_">enumerateSymbols</span>();<br><span class="hljs-comment">//返回&quot;conforand&quot;模块中所有的导出符号(函数、变量)的数组</span><br><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;sym.<span class="hljs-property">length</span>;i++)&#123;<br>    <span class="hljs-comment">//打印函数符号表</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(sym[i].<span class="hljs-property">name</span>);<br>&#125;<br><span class="hljs-keyword">var</span> randptr=<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-string">&quot;libc.so.6&quot;</span>,<span class="hljs-string">&quot;rand&quot;</span>);<br><span class="hljs-comment">//查找 lib.so.6 中 rand() 函数的内存地址</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;randptr:&quot;</span>+randptr);<br><br><span class="hljs-keyword">var</span> rc4ptr=lib.<span class="hljs-title function_">findSymbolByName</span>(<span class="hljs-string">&quot;rc4&quot;</span>);<br><br><span class="hljs-comment">//将原生函数封装成 JavaScript 可调用函数</span><br><span class="hljs-keyword">var</span> rand=<span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(randptr,<span class="hljs-string">&#x27;int&#x27;</span>,[]);<br><span class="hljs-keyword">var</span> rc4=<span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(rc4ptr,<span class="hljs-string">&#x27;int&#x27;</span>,[<span class="hljs-string">&#x27;pointer&#x27;</span>,<span class="hljs-string">&#x27;int&#x27;</span>,<span class="hljs-string">&#x27;pointer&#x27;</span>,<span class="hljs-string">&#x27;int&#x27;</span>]); <br><span class="hljs-keyword">var</span> rc4key=<span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-number">9</span>);<br>rc4key.<span class="hljs-title function_">writeUtf8String</span>(<span class="hljs-string">&quot;JustDoIt!&quot;</span>);<br><span class="hljs-comment">//爆破rand（）函数返回值</span><br><span class="hljs-keyword">let</span> randRet=<span class="hljs-number">0</span>;<br><span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(randptr,&#123;<br>    <span class="hljs-comment">//在每次rand（）函数执行完，将原本的返回值替换成爆破值（randRet）</span><br>    <span class="hljs-attr">onLeave</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">retval</span>)&#123;<br>        retval.<span class="hljs-title function_">replace</span>(randRet);<br>    &#125;<br>&#125;)<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">256</span>;i++)&#123;<br>    randRet=i;<br>    <span class="hljs-keyword">var</span> input=<span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">alloc</span>(<span class="hljs-number">42</span>);<br>    <span class="hljs-comment">//密文 output.txt</span><br>    input.<span class="hljs-title function_">writeByteArray</span>([<span class="hljs-number">0x83</span>, <span class="hljs-number">0x1e</span>, <span class="hljs-number">0x9c</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x7a</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0x88</span>,<br>        <span class="hljs-number">0x36</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x0a</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0xf6</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x0f</span>,<br>        <span class="hljs-number">0xfd</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xdd</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0xa7</span>, <span class="hljs-number">0xed</span>, <span class="hljs-number">0x8d</span>,<br>        <span class="hljs-number">0x51</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xce</span>, <span class="hljs-number">0x6a</span>, <span class="hljs-number">0x9e</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0x83</span>,<br>        <span class="hljs-number">0x56</span>, <span class="hljs-number">0xe7</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x9a</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x6e</span>,<br>        <span class="hljs-number">0xcd</span>, <span class="hljs-number">0x2f</span>]);<br>    <span class="hljs-title function_">rc4</span>(input,<span class="hljs-number">42</span>,rc4key,<span class="hljs-number">9</span>);<br>    <span class="hljs-keyword">try</span>&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(input.<span class="hljs-title function_">readUtf8String</span>(<span class="hljs-number">41</span>));<br>    &#125;<span class="hljs-keyword">catch</span>(e)&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;error:&quot;</span>+e);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="3"><li>在linux环境运行 开虚拟环境装frida</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> frida<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;hook.js&#x27;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)<span class="hljs-keyword">as</span> f:<br>    jscode= f.read()<br><br><span class="hljs-comment">#目标程序路径为当前目录下的 &quot;conforand&quot; 可执行文件</span><br>targetProcessPackName=<span class="hljs-string">&quot;../conforand&quot;</span><br>device=frida.get_local_device()<br><br><span class="hljs-comment">#启动并附加到目标进程</span><br><span class="hljs-keyword">try</span>:<br>    pid=device.spawn([targetProcessPackName])<br>    session=device.attach(pid)<br>    <span class="hljs-built_in">print</span>(pid)<br><span class="hljs-keyword">except</span> frida.ProcessNotFoundError:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;No such process&quot;</span>)<br>    sys.exit(<span class="hljs-number">0</span>)<br>device.resume(pid)<span class="hljs-comment">#恢复目标进程</span><br>time.sleep(<span class="hljs-number">2</span>)<br><span class="hljs-comment">#准备将 JavaScript 代码转换为可注入的脚本对象</span><br>script=session.create_script(jscode)<br><span class="hljs-comment"># script.on(&#x27;message&#x27;,onMassage)</span><br>script.load()<span class="hljs-comment">#执行注入</span><br>sys.stdin.read()<br></code></pre></td></tr></table></figure><p><img src="/../images/7/con4.png"><br><img src="/../images/7/con5.png"><br>得到flag<code>HZNUCTF&#123;489b88-1305-411e-b1f4-88a3070a73&#125;</code></p><h3 id="exchange"><a href="#exchange" class="headerlink" title="exchange"></a>exchange</h3><ol><li><p>直接扔 ida 发现有壳，upx 工具去壳之后再打开，直接看没看出加密类型，用<code>Findcrypt</code>插件找到一个<strong>DES_sbox</strong>,基本确定是 DES 加密，x 交叉引用能一直跳到主函数那里<br><img src="/../images/7/ex1.png"><br>Source 必须有至少 41 字节，否则 Source + 40 会越界访问，输入的flag形式必须是HZNUCTF{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx},中间部分长度为32个字节，否则程序会退出</p></li><li><p>第一个 for 循环对输入的{}中的字符进行处理，处理的结果存入 v12<br><img src="/../images/7/ex2.png"><br>进入加密部分<br><img src="/../images/7/ex3.png"></p></li><li><p>由于 DES 的密钥是在加密前初始化好的，在 input 第一次传入前的函数动用处打断点，动调找密钥<br><img src="/../images/7/ex5.png"><br><img src="/../images/7/ex6.png"><br>把 key 形式改 Q_word(64位) ,并且 Array size 改成32之后，能明显看到前后对称，而DES 的解密方式是16个子密钥倒着使用，于是直接修改寄存器(RCX)值，在原来的基础上加128(16*8),接着把密文 patch 到 input 里，直接运行解密<br><img src="/../images/7/ex4.png"></p></li><li><p>找到解密后的字符，导出为 hex string(unspaced),<br>最后解密</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">v12</span>):<br>    result = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(v12), <span class="hljs-number">4</span>):<br>        block = v12[i:i+<span class="hljs-number">4</span>]<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(block) &lt; <span class="hljs-number">4</span>:<br>            <span class="hljs-keyword">break</span>  <span class="hljs-comment"># 防止异常</span><br>        <span class="hljs-comment"># 交换回去：2、3位交换</span><br>        block = block[<span class="hljs-number">0</span>] + block[<span class="hljs-number">2</span>] + block[<span class="hljs-number">1</span>] + block[<span class="hljs-number">3</span>]<br>        <br>        <span class="hljs-comment"># 拆成两部分</span><br>        hex1 = block[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>]<br>        hex2 = block[<span class="hljs-number">2</span>:<span class="hljs-number">4</span>]<br>        <br>        <span class="hljs-comment"># 转成字符</span><br>        char1 = <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(hex1, <span class="hljs-number">16</span>))<br>        char2 = <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(hex2, <span class="hljs-number">16</span>))<br>        <br>        result += char1 + char2<br>    <span class="hljs-keyword">return</span> result<br><br><br>v12 = <span class="hljs-string">&quot;333936147332632923d96353321d3345636826d26314621d3349330463126348&quot;</span> <br>flag_middle = decrypt(v12)<br><br><span class="hljs-comment"># 组装完整flag</span><br>flag = <span class="hljs-string">&quot;HZNUCTF&#123;&quot;</span> + flag_middle + <span class="hljs-string">&quot;&#125;&quot;</span><br><span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-comment"># HZNUCTF&#123;391ds2b9-9e31-45f8-ba4a-4904a2d8&#125;</span><br></code></pre></td></tr></table></figure><p>flag即为<code>HZNUCTF&#123;391ds2b9-9e31-45f8-ba4a-4904a2d8&#125;</code></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Frida</title>
    <link href="/2025/04/18/frida/"/>
    <url>/2025/04/18/frida/</url>
    
    <content type="html"><![CDATA[<h2 id="pre"><a href="#pre" class="headerlink" title="pre"></a>pre</h2><ol><li>已经 root 了的安卓真机 (我的是 Android9.0)<br>frida 版本 16.1.0 frida-server 版本 16.1.0</li><li>启动 frida-server</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb shell<br>su<br><span class="hljs-built_in">cd</span> /data/local/tmp<br>./frida-server<br><span class="hljs-comment"># 要换端口的话 可以使用 -l 参数</span><br>./frida-server -l 0.0.0.0:12123<br></code></pre></td></tr></table></figure><p>ps : 端口转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb forward tcp：12123 tcp:12123<br></code></pre></td></tr></table></figure><ol start="3"><li>frida 常用指令</li></ol><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>frida-ps</td><td>用于列出设备上的进程</td></tr><tr><td>-U</td><td>连接到 USB 设备</td></tr><tr><td>-a</td><td>显示进程的详细信息，包括进程的名称、PID（进程 ID）、包名等</td></tr><tr><td>-i</td><td>显示进程的架构信息</td></tr><tr><td>-H</td><td>连接到远程设备</td></tr><tr><td>-l</td><td>加载指定的脚本</td></tr><tr><td>-f</td><td>启动指定的应用程序</td></tr></tbody></table><p>eg:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">frida-ps -Uai<br><span class="hljs-comment"># 列出当前通过 USB 连接的设备上所有运行的进程。</span><br>frida-ps -Uai | grep com.nobody.zunjia<br><br>frida -U -f &lt;package_name&gt; -l &lt;script.js&gt;<br>frida -H 127.0.0.1:12123 -f &lt;package_name&gt; -l &lt;script.js&gt;<br><span class="hljs-comment"># 启动指定的应用程序，并加载指定的脚本</span><br></code></pre></td></tr></table></figure><p>获取日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb logcat | busybox grep &lt;PID&gt;<br></code></pre></td></tr></table></figure><h2 id="frida-java-层-hook"><a href="#frida-java-层-hook" class="headerlink" title="frida java 层 hook"></a>frida java 层 hook</h2><ol><li>hook 普通方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//定义一个名为“hooktest1”的函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hooktest1</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">//获取一个名为“类名”的 java 类，并将其实例赋值给 js 变量 utils</span><br>    <span class="hljs-keyword">var</span> utils = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;类名&quot;</span>);<br>    <span class="hljs-comment">//var utils =Java.use(&quot;com.nobody.zunjia.DexCall&quot;);</span><br><br>    <span class="hljs-comment">//修改&quot;类名&quot;的&quot;method&quot;方法实现，这个新的实现会接受两个参数</span><br>    utils.<span class="hljs-property">method</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>        <span class="hljs-comment">//更改参数的值</span><br>        a = <span class="hljs-number">123</span>;<br>        b = <span class="hljs-number">456</span>;<br>        <span class="hljs-comment">//调用修改过的“method”方法，并将返回值存储在变量 retval 中    </span><br>        <span class="hljs-keyword">var</span> retval = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">method</span>(a, b);<br><br>        <span class="hljs-comment">//打印参数 a b 以及返回值   </span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a, b, retval);<br><br>        <span class="hljs-keyword">return</span> retval;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-title function_">hooktest1</span>();<br>    &#125;)<br>&#125;;<br><span class="hljs-title function_">setImmediate</span>(main);<br></code></pre></td></tr></table></figure><ol start="2"><li>overload 使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//.overload</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hooktest2</span>(<span class="hljs-params"></span>) &#123;<br><br>    <span class="hljs-keyword">var</span> utils = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;类名&quot;</span>);<br>    <span class="hljs-comment">//var utils =Java.use(&quot;com.nobody.zunjia.DexCall&quot;);</span><br><br>    utils.<span class="hljs-property">method</span>.<span class="hljs-title function_">overload</span>(<span class="hljs-string">&#x27;int&#x27;</span>, <span class="hljs-string">&#x27;java.lang.String&#x27;</span>).<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">i, str</span>) &#123;<br>        <span class="hljs-comment">//如果有自定义参数类型在 smali 中找</span><br>        <span class="hljs-comment">//实在不知道可以在报错中找</span><br><br>        <span class="hljs-comment">//调用修改过的“method”方法，并将返回值存储在变量 retval 中    </span><br>        <span class="hljs-keyword">var</span> retval = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">method</span>(i, str);<br><br><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i, str);<br><br>        <span class="hljs-comment">// return retval;</span><br>        <span class="hljs-comment">// return &quot;retval&quot;;</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-title function_">hooktest1</span>();<br>    &#125;)<br>&#125;;<br><span class="hljs-title function_">setImmediate</span>(main);<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">当hook的目标方法或构造函数存在多个重载时，需要使用 overload 来指定具体的参数类型</span><br><span class="hljs-comment">例如：</span><br><span class="hljs-comment">public class MyClass &#123;</span><br><span class="hljs-comment">    public MyClass() &#123; &#125;</span><br><span class="hljs-comment">    public MyClass(String str) &#123; &#125;</span><br><span class="hljs-comment">    public MyClass(String str, int num) &#123; &#125;</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure><ol start="3"><li>hook 构造函数</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//hook 构造函数</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hooktest3</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">var</span> utils = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;&lt;package_name&gt;.&lt;class_name&gt;&quot;</span>);<br>    <span class="hljs-comment">//var utils=Java.use(&quot;com.nobody.zunjia.DexCall&quot;);</span><br><br>    <span class="hljs-comment">//修改类的构造函数的实现</span><br>    utils.<span class="hljs-property">$init</span>.<span class="hljs-title function_">overload</span>(<span class="hljs-string">&#x27;java.lang.String&#x27;</span>).<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">str</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(str);<br>        str = <span class="hljs-string">&quot;hello&quot;</span>;<br>        <span class="hljs-variable language_">this</span>.$init(str);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*构造函数 ：名称与类名相同；没有返回值；自动调用；可以重载</span><br><span class="hljs-comment">public class MyClass&#123;</span><br><span class="hljs-comment">    public MyClass(String str)&#123;</span><br><span class="hljs-comment">        //构造函数</span><br><span class="hljs-comment">    &#125;</span><br><span class="hljs-comment">&#125;*/</span><br></code></pre></td></tr></table></figure><ol start="4"><li>hook 字段</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//hook 字段</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hooktest4</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">//静态字段修改</span><br>    <span class="hljs-keyword">var</span> utils = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;&lt;package_name&gt;.&lt;class_name&gt;&quot;</span>);<br>    <span class="hljs-comment">//修改类的静态字段的值</span><br>    utils.<span class="hljs-property">staticField</span>.<span class="hljs-property">value</span> = <span class="hljs-string">&quot;hello world&quot;</span>;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(utils.<span class="hljs-property">staticField</span>.<span class="hljs-property">value</span>);<br><br>    <span class="hljs-comment">//非静态字段的修改</span><br>    <span class="hljs-comment">//使用 Java.choose() 枚举类的所有实例</span><br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">choose</span>(<span class="hljs-string">&quot;&lt;package_name&gt;.&lt;class_name&gt;&quot;</span>, &#123;<br>        <span class="hljs-attr">onMatch</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">obj</span>) &#123;<br>            <span class="hljs-comment">//修改实例的非静态字段 &quot;_privateInt&quot;和非静态字段 &quot;privateInt&quot;的值</span><br>            obj.<span class="hljs-property">_privateInt</span>.<span class="hljs-property">value</span> = <span class="hljs-number">123</span>;<span class="hljs-comment">//如果字段名与函数名相同，需要在前面加个下划线</span><br>            obj.<span class="hljs-property">privateInt</span>.<span class="hljs-property">value</span> = <span class="hljs-number">456</span>;<br>        &#125;,<br>        <span class="hljs-attr">onComplete</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123; &#125;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><ol start="5"><li>hook 内部类</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//hook 内部类</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hooktest5</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-comment">//内部类</span><br>        <span class="hljs-keyword">var</span> innerClass = <span class="hljs-title class_">Java</span>.<span class="hljs-property">use</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-string">&quot;&lt;package_name&gt;.&lt;class_name&gt;$&lt;inner_class_name&gt;&quot;</span>);<br>        <span class="hljs-comment">//var innerClass = Java.use(&quot;com.example.OuterClass$InnerClass&quot;);  </span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(innerClass);<br>        innerClass.<span class="hljs-property">$init</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;hook innerClass&quot;</span>);<br>            <span class="hljs-comment">//...</span><br><br><br>        &#125;<br><br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><ol start="6"><li>枚举所有方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//枚举出所有方法</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hooktest7</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">var</span> a = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;&lt;package_name&gt;.&lt;class_name&gt;&quot;</span>);<br>        <span class="hljs-comment">//getDeclaredMethods 枚举所有方法</span><br>        <span class="hljs-keyword">var</span> methods = a.<span class="hljs-property">class</span>.<span class="hljs-title function_">getDeclaredMethods</span>();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; methods.<span class="hljs-property">length</span>; i++) &#123;<br>            <span class="hljs-keyword">var</span> methodName = methods[i].<span class="hljs-title function_">getName</span>();<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(methodName);<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; a[methodName].<span class="hljs-property">overloads</span>.<span class="hljs-property">length</span>; j++) &#123;<br>                a[methodName].<span class="hljs-property">overloads</span>[j].<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>                    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-variable language_">arguments</span>.<span class="hljs-property">length</span>; k++) &#123;<br>                        <span class="hljs-comment">//arguments.length 表示当前方法调用时传入的参数个数</span><br>                        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">arguments</span>[k]);<br>                        <span class="hljs-comment">//打印每个参数的值</span><br><br>                    &#125;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>[methodName].<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, <span class="hljs-variable language_">arguments</span>);<br>                    <span class="hljs-comment">//将原始方法的返回值返回给调用方</span><br>                &#125;<br>            &#125;<br>        &#125;<br><br><br>    &#125;)<br><br><br>&#125;<br></code></pre></td></tr></table></figure><ol start="7"><li>主动调用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//主动调用</span><br><br><span class="hljs-comment">//静态方法的主动调用</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hooktest_1</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-keyword">var</span> <span class="hljs-title class_">ClassName</span>=<span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;&lt;&gt;package_name&gt;.&lt;class_name&gt;&quot;</span>);<br>        <span class="hljs-title class_">ClassName</span>.<span class="hljs-title function_">privateFunc</span>();<br>    &#125;)<br>&#125;<br><br><span class="hljs-comment">//非静态方法的主动调用</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hooktest_2</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-keyword">var</span> ret =<span class="hljs-literal">null</span>;<br>        <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">choose</span>(<span class="hljs-string">&quot;&lt;package_name&gt;.&lt;class_name&gt;&quot;</span>,&#123; <span class="hljs-comment">//要 hook 的类</span><br>            <span class="hljs-attr">onMatch</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">instance</span>)&#123;<br>                ret =instance.<span class="hljs-title function_">privateFunc</span>(<span class="hljs-string">&quot;arg&quot;</span>); <span class="hljs-comment">//要 hook 的方法</span><br>            &#125;,<br>            <span class="hljs-attr">onComplete</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>                <span class="hljs-comment">//console.log(&quot;ret: &quot;+ret);</span><br>            &#125;<br>        &#125;<br><br>        )<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="frida-native-层-hook"><a href="#frida-native-层-hook" class="headerlink" title="frida native 层 hook"></a>frida native 层 hook</h2><ol><li>Process</li></ol><table><thead><tr><th>API</th><th>说明</th></tr></thead><tbody><tr><td><code>Process.id</code></td><td>返回附加目标进程的 id</td></tr><tr><td><code>Process.isDebuggerAttached</code></td><td>检查当前是否对目标程序已附加</td></tr><tr><td><code>Process.enumerateModules</code></td><td>枚举当前进程的所有模块，返回模块对象的数组</td></tr><tr><td><code>Process.enumerateThreads</code></td><td>枚举当前进程的所有线程，返回包含 <code>id</code>、<code>state</code>、<code>context</code> 等属性的对象数组</td></tr></tbody></table><hr><ol start="2"><li>Module</li></ol><table><thead><tr><th>API</th><th>说明</th></tr></thead><tbody><tr><td><code>Module.load</code></td><td>加载指定 so 文件，返回一个 Module 对象</td></tr><tr><td><code>enumerateImports()</code></td><td>枚举所有 Import 库函数，返回 Module 数组对象</td></tr><tr><td><code>enumerateExports()</code></td><td>枚举所有 Export 库函数，返回 Module 数组对象</td></tr><tr><td><code>enumerateSymbols()</code></td><td>枚举所有 Symbol 库函数，返回 Module 数组对象</td></tr><tr><td><code>findExportByName()</code><br><code>findBaseAddress()</code></td><td>寻找指定 so 库中 export 库中的函数地址</td></tr><tr><td><code>Module.findBaseAddress(name)</code><br><code>Module.getBaseAddress(name)</code></td><td>返回 so 的基地址</td></tr></tbody></table><ol start="3"><li>Memory</li></ol><table><thead><tr><th>API</th><th>说明</th></tr></thead><tbody><tr><td><code>Memory.copy()</code></td><td>复制内存</td></tr><tr><td><code>Memory.scan()</code></td><td>搜索内存中特定模式的数据</td></tr><tr><td><code>Memory.scanSync()</code></td><td>同步搜索内存中特定模式的数据,返回多个匹配的数据</td></tr><tr><td><code>Memory.alloc()</code></td><td>在目标进程的堆上申请指定大小的内存，返回一个 NativePointer</td></tr><tr><td><code>Memory.writeByteArray()</code></td><td>将字节数组写入指定内存地址</td></tr><tr><td><code>Memory.readByteArray()</code></td><td>从指定内存地址读取字节数组</td></tr></tbody></table><ol start="4"><li><ol><li>hook 打印 (int 型、bool 型、char 型)</li></ol></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// Native 层 hook 打印</span><br><span class="hljs-comment">// int 型、 bool 型、 cahr 型</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hookTest</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-comment">//根据导出函数名打印地址</span><br>        <span class="hljs-keyword">var</span> addr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-string">&quot;&lt;so_name&gt;&quot;</span>, <span class="hljs-string">&quot;&lt;function_name&gt;&quot;</span>);<br>        <span class="hljs-comment">//var addr=Module.findExportByName(&quot;libnative-lib.so&quot;,&quot;Java_com_example_native_1lib_MainActivity_check&quot;);</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(addr);<br>        <span class="hljs-keyword">if</span> (addr != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addr, &#123;<br>                <span class="hljs-comment">//onEnter 里打印和修改参数</span><br>                <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123; <span class="hljs-comment">//args 传入参数</span><br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(args[<span class="hljs-number">0</span>]);<span class="hljs-comment">//打印第一个参数的值</span><br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>.<span class="hljs-property">x1</span>);<span class="hljs-comment">//打印寄存器的内容</span><br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(args[<span class="hljs-number">1</span>].<span class="hljs-title function_">toInt32</span>()); <span class="hljs-comment">//toInt32() 转十进制值</span><br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(args[<span class="hljs-number">2</span>].<span class="hljs-title function_">readCString</span>());<span class="hljs-comment">//读取字符串 char型</span><br><br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">hexdump</span>(args[<span class="hljs-number">2</span>]));<span class="hljs-comment">//dump 内存</span><br><br>                &#125;,<br>                <span class="hljs-comment">//onLeave 里打印和修改返回值</span><br>                <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123; <span class="hljs-comment">//retval 为返回值</span><br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(retval);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;retval&quot;</span>, retval.<span class="hljs-title function_">toInt32</span>());<br>                &#125;<br><br>            &#125;)<br>        &#125;<br><br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><ol start="4"><li><ol start="2"><li>hook 打印(string 型)</li></ol></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// Native 层 hook 打印</span><br><span class="hljs-comment">// string 类型</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hookTest</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-comment">//根据导出函数名打印地址</span><br>        <span class="hljs-keyword">var</span> addr = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-string">&quot;&lt;so_name&gt;&quot;</span>, <span class="hljs-string">&quot;&lt;function_name&gt;&quot;</span>);<br>        <span class="hljs-comment">//var addr=Module.findExportByName(&quot;libnative-lib.so&quot;,&quot;Java_com_example_native_1lib_MainActivity_check&quot;);</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(addr);<br>        <span class="hljs-keyword">if</span> (addr != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(addr, &#123;<br>                <span class="hljs-comment">//onEnter 里打印和修改参数</span><br>                <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123; <span class="hljs-comment">//args 传入参数</span><br>                    <span class="hljs-comment">//方法1：</span><br>                    <span class="hljs-keyword">var</span> jString = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">cast</span>(args[<span class="hljs-number">1</span>].<span class="hljs-property">Jave</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;Java.lang.String&quot;</span>));<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;args:&quot;</span>, jString.<span class="hljs-title function_">toString</span>());<br><br>                    <span class="hljs-comment">//方法2：</span><br>                    <span class="hljs-keyword">var</span> <span class="hljs-title class_">JNIEnv</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">getEnv</span>();<br>                    <span class="hljs-keyword">var</span> originalStrPtr = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">getStringUtfChars</span>(args[<span class="hljs-number">1</span>], <span class="hljs-literal">null</span>).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(originalStrPtr);<br>                    <span class="hljs-keyword">var</span> modifiedContent = <span class="hljs-string">&quot;str1&quot;</span>;<br>                    <span class="hljs-keyword">var</span> newJSring = <span class="hljs-title class_">JNIEnv</span>.<span class="hljs-title function_">newSringUtf</span>(modifiedContent);<br>                    args[<span class="hljs-number">1</span>] = newJString;<br><br>                &#125;,<br>                <span class="hljs-comment">//onLeave 里打印和修改返回值</span><br>                <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123; <span class="hljs-comment">//retval 为返回值</span><br>                    <span class="hljs-comment">//方法1：</span><br>                    <span class="hljs-keyword">var</span> jString = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">cast</span>(retval.<span class="hljs-property">Jave</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;Java.lang.String&quot;</span>));<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;retval:&quot;</span>, jString.<span class="hljs-title function_">toString</span>());<br>                    <span class="hljs-comment">//方法2：</span><br>                    <span class="hljs-keyword">var</span> <span class="hljs-title class_">JNIEnv</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-property">vm</span>.<span class="hljs-title function_">getEnv</span>();<br>                    <span class="hljs-keyword">var</span> originalStrPtr = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">getStringUtfChars</span>(retval, <span class="hljs-literal">null</span>).<span class="hljs-title function_">readCString</span>();<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(originalStrPtr);<br>                    <span class="hljs-keyword">var</span> modifiedContent = <span class="hljs-string">&quot;str1&quot;</span>;<br>                    <span class="hljs-keyword">var</span> newJSring = <span class="hljs-title class_">JNIEnv</span>.<span class="hljs-title function_">newSringUtf</span>(modifiedContent);<br>                    retval.<span class="hljs-title function_">replace</span>(newJString);<br><br><br>                &#125;<br><br>            &#125;)<br>        &#125;<br><br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><ol start="5"><li>枚举导入导出表</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//枚举导入导出表</span><br><span class="hljs-comment">//导入表(Import Table）：列出了库需要从其他库中调用的函数和符号名称 --需要的</span><br><span class="hljs-comment">//导出表(Export Table）：列出了库中可以被其他程序或库访问的所有公开函数和符号的名称  --提供的</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hookTest1</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-comment">//打印导入表</span><br>        <span class="hljs-keyword">var</span> imports = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">enumerateImports</span>(<span class="hljs-string">&quot;libxxx.so&quot;</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; imports.<span class="hljs-property">length</span>; i++) &#123;<br>            <span class="hljs-keyword">if</span> (imports[i].<span class="hljs-property">name</span> == <span class="hljs-string">&quot;some_name&quot;</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(imports[i]));<br>                <span class="hljs-comment">//通过 JSON.stringify() 打印 object 数据</span><br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(imports[i].<span class="hljs-property">address</span>);<br><br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//打印导出表</span><br>        <span class="hljs-keyword">var</span> <span class="hljs-built_in">exports</span> = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">ennumerateExports</span>(<span class="hljs-string">&quot;libxxx.so&quot;</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">exports</span>.<span class="hljs-property">length</span>; i++) &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(<span class="hljs-built_in">exports</span>[i]));<br>        &#125;<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><ol start="6"><li>获取 so 基地址</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//获取 so 基地址的方式</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">get_to_so_addr</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">var</span> moduleAddr1 = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">findModuleByName</span>(<span class="hljs-string">&quot;libxxx.so&quot;</span>).<span class="hljs-property">base</span>;<br>        <span class="hljs-keyword">var</span> moduleAddr2 = <span class="hljs-title class_">Process</span>.<span class="hljs-title function_">getModuleByName</span>(<span class="hljs-string">&quot;libxxx.so&quot;</span>).<span class="hljs-property">base</span>;<br>        <span class="hljs-keyword">var</span> moduleAddr3 = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findBaseAddress</span>(<span class="hljs-string">&quot;libxxx.so&quot;</span>);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(moduleAddr1);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(moduleAddr2);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(moduleAddr3);<br>    &#125;)<br>&#125;<br></code></pre></td></tr></table></figure><ol start="7"><li>hook 未导出函数 函数基地址计算</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//hook 未导出函数与函数基地址的计算</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hookTest5</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-comment">//根据导出函数名打印及地址</span><br>        <span class="hljs-keyword">var</span> soAddr= <span class="hljs-title function_">findBaseAddress</span>(<span class="hljs-string">&quot;libxxx.so&quot;</span>);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(aoAddr);<br>        <span class="hljs-keyword">var</span> funcAddr=soAddr.<span class="hljs-title function_">add</span>(<span class="hljs-number">0x1234</span>);<span class="hljs-comment">//函数基地址+偏移地址</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(funcAddr);<br>        <span class="hljs-keyword">if</span>(funcAddr!=<span class="hljs-literal">null</span>)&#123;<br>            <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(funcAddr,&#123;<br>                <span class="hljs-attr">onEnter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">args</span>)&#123;<br><br>                &#125;,<br>                <span class="hljs-attr">onLeave</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">retval</span>)&#123;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(retval.<span class="hljs-title function_">toInt2</span>());<br><br>                &#125;<br>            &#125;)<br>        &#125;<br>    &#125;)<br>&#125;<br><br><span class="hljs-comment">//函数的地址计算</span><br><span class="hljs-comment">//安卓里面一般 32 位的 so 中用的是 thumb 指令，64 位的 so 中用的是 arm 指令</span><br><span class="hljs-comment">//ida 中 opcode bytes 判断，arm 指令为四个字节(options-&gt;general-&gt;Number of opcode bytes(non-graph)输入4)</span><br><span class="hljs-comment">//thumb 指令的函数指令计算方式：so 基地址+函数在 so 中的偏移 +1</span><br><span class="hljs-comment">//arm 指令的函数指令计算方式：so 基地址+函数在 so 中的偏移</span><br></code></pre></td></tr></table></figure><ol start="8"><li>hook dlopen</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//hook dlopen</span><br><span class="hljs-comment">//android_dlopen_ext()、dlopen()、do_dlopen()主要用于加载库文件</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">hook_dlopen</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> dlopen=<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;dlopen&quot;</span>);<br>    <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(dlopen,&#123;<br>        <span class="hljs-attr">onEnter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">args</span>)&#123;<br>            <span class="hljs-keyword">var</span> so_name=args[<span class="hljs-number">0</span>].<span class="hljs-title function_">readCString</span>();<br>            <span class="hljs-keyword">if</span> (so_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;libxxx.so&quot;</span>)&gt;=<span class="hljs-number">0</span>) <span class="hljs-variable language_">this</span>.<span class="hljs-property">call_hook</span>=<span class="hljs-literal">true</span>;<br>        &#125;,<br>        <span class="hljs-attr">onLeave</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">retval</span>)&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>,call_hook) <span class="hljs-title function_">hookTest2</span>();<br>        &#125;<br>    &#125;);<br>    <span class="hljs-comment">//高版本 android 系统使用 android_dlopen_ext</span><br>     <span class="hljs-keyword">var</span> android_dlopen_ext=<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findExportByName</span>(<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;android_dlopen_ext&quot;</span>);<br>     <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(android_dlopen_ext,&#123;<br>        <span class="hljs-attr">onEnter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">args</span>)&#123;<br>            <span class="hljs-keyword">var</span> so_name=args[<span class="hljs-number">0</span>].<span class="hljs-title function_">readCString</span>();<br>            <span class="hljs-keyword">if</span>(so_name.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;libxxx.so&quot;</span>)&gt;=<span class="hljs-number">0</span>) <span class="hljs-variable language_">this</span>.<span class="hljs-property">call_hook</span>=<span class="hljs-literal">true</span>;<br>        &#125;,<span class="hljs-attr">onLeave</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">retval</span>)&#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">call_hook</span>) <span class="hljs-title function_">hookTest2</span>();<br>        &#125;<br>     &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><ol start="9"><li>写数据</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//frida 写数据</span><br><span class="hljs-comment">//一般写在 app 的私有目录里，不然会报错(Permission denied)</span><br><span class="hljs-keyword">var</span> file_path=<span class="hljs-string">&quot;data/user/0/&lt;package_name&gt;/xxx.txt&quot;</span>;<br><span class="hljs-keyword">var</span> file_handle= <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(file_path,<span class="hljs-string">&quot;wb&quot;</span>);<br><span class="hljs-keyword">if</span>(file_handle&amp;&amp;file_handle!=<span class="hljs-literal">null</span>)&#123;<br>    file_handle.<span class="hljs-title function_">write</span>(data);<span class="hljs-comment">//写入数据</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;write data success!&quot;</span>);<br>    file_handle.<span class="hljs-title function_">flush</span>();<span class="hljs-comment">//刷新</span><br>    file_handle.<span class="hljs-title function_">close</span>();<span class="hljs-comment">//关闭</span><br>&#125;<br></code></pre></td></tr></table></figure><ol start="10"><li>内联 hook</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//inline_hook</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">inline_hook</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-keyword">var</span> soAddr=<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findBaseAddress</span>(<span class="hljs-string">&quot;libxxx.so&quot;</span>);<br>    <span class="hljs-keyword">if</span>(soAddr)&#123;<br>        <span class="hljs-keyword">var</span> funcAddr=soAddr.<span class="hljs-title function_">add</span>(<span class="hljs-number">0x1234</span>);<span class="hljs-comment">//函数基地址+偏移地址</span><br>        <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>            <span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(funcAddr,&#123;<br>                <span class="hljs-attr">onEnter</span>:<span class="hljs-keyword">function</span>(<span class="hljs-params">args</span>)&#123;<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>.<span class="hljs-property">x1</span>);<span class="hljs-comment">//打印寄存器的内容</span><br>                    <span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>.<span class="hljs-property">x1</span>=<span class="hljs-title function_">ptr</span>(<span class="hljs-number">1</span>);<br>                    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">context</span>.<span class="hljs-property">x1</span>);<br><br>                &#125;<br>            &#125;)  <br>        &#125;)<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//将地址的指令解析成汇编</span><br><span class="hljs-keyword">var</span> soAddr=<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findBaseAddress</span>(<span class="hljs-string">&quot;libxxx.so&quot;</span>);<br><span class="hljs-keyword">var</span> codeAddr=<span class="hljs-title class_">Instruction</span>.<span class="hljs-title function_">parse</span>(soAddr.<span class="hljs-title function_">add</span>(<span class="hljs-number">0x1234</span>));<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(codeAddr.<span class="hljs-title function_">toString</span>());<br></code></pre></td></tr></table></figure><ol start="11"><li>普通函数与 JNI 函数的主动调用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//普通函数与 jni 函数的主动调用</span><br><span class="hljs-keyword">var</span> funcAddr=<span class="hljs-title class_">Module</span>.<span class="hljs-title function_">findBaseAddress</span>(<span class="hljs-string">&quot;libxxx.so&quot;</span>).<span class="hljs-title function_">add</span>(<span class="hljs-number">0x1234</span>);<br><span class="hljs-comment">//NativeFunction 的第一个参数是地址 第二个参数是返回值类型 第三个[]里面是传入的参数的类型（有几个就填几个）  </span><br><span class="hljs-keyword">var</span> aesAddr= <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeFunction</span>(funcAddr,<span class="hljs-string">&#x27;pointer&#x27;</span>,[<span class="hljs-string">&#x27;pointer&#x27;</span>,<span class="hljs-string">&#x27;pointer&#x27;</span>]);<br><span class="hljs-keyword">var</span> encry_test=<span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">allocUtf8String</span>(<span class="hljs-string">&quot;cyphertext&quot;</span>);<br><span class="hljs-keyword">var</span> key=<span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">allocUtf8String</span>(<span class="hljs-string">&#x27;key&#x27;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">aesAddr</span>(encry_test,key).<span class="hljs-title function_">readCString</span>());<br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安卓逆向 刷题笔记(1)</title>
    <link href="/2025/04/11/androidRE/"/>
    <url>/2025/04/11/androidRE/</url>
    
    <content type="html"><![CDATA[<h2 id="攻防世界-Mobile"><a href="#攻防世界-Mobile" class="headerlink" title="攻防世界 Mobile"></a>攻防世界 Mobile</h2><h3 id="ez-dex"><a href="#ez-dex" class="headerlink" title="ez_dex"></a>ez_dex</h3><ol start="0"><li>这道题在网上看了好多 wp 基本都是手撕加密，但这题的 so 层加密挺不好分析的，而用frida-hook可以直接跳过解密，找到已经解密好的 dex 文件。</li><li>用 jadx 打开,在 AndroidManifest.xml 中找到关键信息:<code>android:hasCode=&quot;false&quot;</code>,声明 APK 中不包含 Java&#x2F;Kotlin 字节码(<strong>.dex 文件</strong>),表示所有逻辑都在 Native 层;当<code>android:value=&quot;native&quot;</code>时，系统会默认加载 libnative.so,此类应用的入口是 Native 层的<code>android_main()</code>函数（而非 Java 的 Activity.onCreate()<br><img src="/../images/5/dex1.png"></li><li>提取出 so 文件,用 ida 分析,直接搜索找到<code>android_main()</code>函数，首先注意到经过加密的<code>filename</code>和<code>name</code>,写一个脚本进行字符串解密</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> struct<br>filename_dwords=[-<span class="hljs-number">1651995345</span>,-<span class="hljs-number">2003974520</span>,-<span class="hljs-number">1966700387</span>,<br> -<span class="hljs-number">2000190330</span>,-<span class="hljs-number">2071422265</span>,-<span class="hljs-number">947092071</span>, -<span class="hljs-number">1920499569</span>,<br> -<span class="hljs-number">1936879484</span>,-<span class="hljs-number">2138061167</span>,-<span class="hljs-number">962950011</span>, -<span class="hljs-number">1702328950</span>,<br> -<span class="hljs-number">946172774</span>, -<span class="hljs-number">376337267</span>, ]<br><span class="hljs-comment">#13*4=52</span><br>filename_bytes=<span class="hljs-built_in">bytearray</span>()<br><span class="hljs-keyword">for</span> dword <span class="hljs-keyword">in</span> filename_dwords:<br>    filename_bytes.extend(struct.pack(<span class="hljs-string">&#x27;&lt;i&#x27;</span>,dword))<br>    <span class="hljs-comment">#stuck.pack(&#x27;&lt;i&#x27;,dword) 将每个整数打包为小端序的四字节二进制数据</span><br>    <span class="hljs-comment">#extend()将这些字节添加到字节数组中</span><br>filename_bytes.append(<span class="hljs-number">0</span>)<br><span class="hljs-comment">#在字节数组末尾添加一个空字节，作为字符串的终止符</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">53</span>):<br>    filename_bytes[i]^=<span class="hljs-number">0xE9</span><br>filename=filename_bytes.split(<span class="hljs-string">b&#x27;\0&#x27;</span>)[<span class="hljs-number">0</span>].decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><br>name_dwords=[-<span class="hljs-number">1651995194</span>,-<span class="hljs-number">2003974520</span>,-<span class="hljs-number">1966700387</span>,-<span class="hljs-number">2000190330</span>,<br>-<span class="hljs-number">2071422265</span>,-<span class="hljs-number">947092071</span> ,-<span class="hljs-number">1920499569</span>,-<span class="hljs-number">1936879484</span>,<span class="hljs-number">2138061167</span>,<br>-<span class="hljs-number">962950011</span> ,-<span class="hljs-number">1853059706</span>]<br><span class="hljs-comment">#11*4+1+1=46</span><br>name_bytes=<span class="hljs-built_in">bytearray</span>()<br><span class="hljs-keyword">for</span> dword <span class="hljs-keyword">in</span> name_dwords:<br>    name_bytes.extend(struct.pack(<span class="hljs-string">&#x27;&lt;i&#x27;</span>,dword))<br>v42=-<span class="hljs-number">5690</span><br>name_bytes.extend(struct.pack(<span class="hljs-string">&#x27;&lt;h&#x27;</span>,v42))<br>name_bytes.append(<span class="hljs-number">0</span>)<br>name_bytes[<span class="hljs-number">0</span>]=<span class="hljs-number">0x2f</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">47</span>):<br>    name_bytes[i]^=<span class="hljs-number">0xE9</span><br>name=name_bytes.split(<span class="hljs-string">b&#x27;\0&#x27;</span>)[<span class="hljs-number">0</span>].decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;filename: &quot;</span>,filename)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;name: &quot;</span>,name)<br><br><span class="hljs-comment"># filename:  /data/data/com.a.sample.findmydex/files/classes.dex</span><br><span class="hljs-comment"># name:  /data/data/com.a.sample.findmydex/files/odex/</span><br></code></pre></td></tr></table></figure><ol start="3"><li>解密后发现得到了 dex 文件存放的位置，但是继续往下看，找到关键部分<br><img src="/../images/5/dex3.png"><br>用frida hook直接拿到解密后的 dex 文件</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> lib = <span class="hljs-title class_">Module</span>.<span class="hljs-title function_">load</span>(<span class="hljs-string">&quot;libnative.so&quot;</span>);<br><span class="hljs-keyword">var</span> imports = lib.<span class="hljs-title function_">enumerateImports</span>();<br><span class="hljs-keyword">var</span> removePtr;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; imports.<span class="hljs-property">length</span>; i++) &#123;<br>    <span class="hljs-keyword">if</span> (imports[i].<span class="hljs-property">name</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;remove&quot;</span>) != -<span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(imports[i].<span class="hljs-property">name</span>, imports[i].<span class="hljs-property">address</span>);<br>        removePtr = imports[i].<span class="hljs-property">address</span>;<br>    &#125;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(removePtr);<br><br><span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">replace</span>(removePtr, <span class="hljs-keyword">new</span> <span class="hljs-title class_">NativeCallback</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">arg0</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;remove called&quot;</span>);<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arg0: &quot;</span> + arg0);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br>    , <span class="hljs-string">&#x27;int&#x27;</span>, [<span class="hljs-string">&#x27;pointer&#x27;</span>]));<br><br><span class="hljs-title class_">Interceptor</span>.<span class="hljs-title function_">attach</span>(removePtr, &#123;<br>    <span class="hljs-attr">onEnter</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">args</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;remove called&quot;</span>);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;arg0: &quot;</span> + args[<span class="hljs-number">0</span>]);<br>    &#125;,<br>    <span class="hljs-attr">onLeave</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params">retval</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;remove return value: &quot;</span> + retval);<br>    &#125;<br>&#125;)<br><span class="hljs-keyword">var</span> targetAddr = lib.<span class="hljs-property">base</span>.<span class="hljs-title function_">add</span>(<span class="hljs-number">0x2866</span>);<br><span class="hljs-title class_">Memory</span>.<span class="hljs-title function_">protect</span>(targetAddr, <span class="hljs-number">0x10</span>, <span class="hljs-string">&#x27;rwx&#x27;</span>);<br>targetAddr.<span class="hljs-title function_">writeByteArray</span>([<span class="hljs-number">0x00</span>, <span class="hljs-number">0xBF</span>]);<br><span class="hljs-keyword">var</span> buf = targetAddr.<span class="hljs-title function_">readByteArray</span>(<span class="hljs-number">100</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(buf);<br></code></pre></td></tr></table></figure><p>因为摇晃次数 v10 还直接控制数据解密流程，所以不能像满足的时间条件一样给 nop 掉<br><img src="/../images/5/dex4.png"><br>BGT（Branch if Greater Than） 是关键跳转，决定是否判定超时,NOP 掉 BGT（0x2866）会使程序永远不跳转，从而绕过时间检查<br>4. <img src="/../images/5/dex5.png"><br>有报错但 dex 文件是成功 dump 出来了的<br><img src="/../images/5/dex6.png"><br>但到这里也不能直接拿到因为没有权限，所以可以把它 pull 到普通目录比如 Download 里面后再存到本地，这样就能获取了<br>5. 在原 apk 中添加 dex 文件，加密就已经出来了<br><img src="/../images/5/dex7.png"><br><img src="/../images/5/dex8.png"><br><img src="/../images/5/dex9.png"><br>密钥：I have a male fish and a female fish<br>获取密文：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">import</span> base64<br>m = [-<span class="hljs-number">120</span>, <span class="hljs-number">77</span>, -<span class="hljs-number">14</span>, -<span class="hljs-number">38</span>, <span class="hljs-number">17</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">42</span>, <span class="hljs-number">44</span>, -<span class="hljs-number">32</span>, <span class="hljs-number">109</span>, <span class="hljs-number">85</span>, <span class="hljs-number">31</span>, <span class="hljs-number">24</span>, -<span class="hljs-number">91</span>, -<span class="hljs-number">112</span>, -<span class="hljs-number">83</span>,<br><span class="hljs-number">64</span>, -<span class="hljs-number">83</span>, -<span class="hljs-number">128</span>, <span class="hljs-number">84</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">94</span>, -<span class="hljs-number">98</span>, -<span class="hljs-number">30</span>, <span class="hljs-number">18</span>, <span class="hljs-number">70</span>, -<span class="hljs-number">26</span>, <span class="hljs-number">71</span>, <span class="hljs-number">5</span>, -<span class="hljs-number">99</span>, -<span class="hljs-number">62</span>, -<span class="hljs-number">58</span>, <span class="hljs-number">117</span>, <span class="hljs-number">29</span>,<br>-<span class="hljs-number">44</span>, <span class="hljs-number">6</span>, <span class="hljs-number">112</span>, -<span class="hljs-number">4</span>, <span class="hljs-number">81</span>, <span class="hljs-number">84</span>, <span class="hljs-number">9</span>, <span class="hljs-number">22</span>, -<span class="hljs-number">51</span>, <span class="hljs-number">95</span>, -<span class="hljs-number">34</span>, <span class="hljs-number">12</span>, <span class="hljs-number">47</span>, <span class="hljs-number">77</span>]<br>data = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> m:<br>    data.append(i&amp;<span class="hljs-number">0xFF</span>)<br>    <span class="hljs-comment">#i&amp;0xFF 操作将有符号整数转换为无符号字</span><br><span class="hljs-built_in">print</span>(base64.b64encode(<span class="hljs-built_in">bytes</span>(data)))<br><br><span class="hljs-comment">#b&#x27;iE3y2hEF1izgbVUfGKWQrUCtgFQFop7iEkbmRwWdwsZ1HdQGcPxRVAkWzV/eDC9N&#x27;</span><br></code></pre></td></tr></table></figure><p>网站在线解密<br><img src="/../images/5/dex10.png"></p><blockquote><p>qwb{TH3y_Io&lt;e_EACh_OTh3r_FOrEUER}</p></blockquote><h3 id="easyjni"><a href="#easyjni" class="headerlink" title="easyjni"></a>easyjni</h3><p><strong>变种base64 算法逆向</strong> </p><ol><li>jadx 打开,看 MainACtivity ,关键方法：<br><code>a(String str)</code>方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">a</span><span class="hljs-params">(String str)</span> &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">return</span> ncheck(<span class="hljs-keyword">new</span> <span class="hljs-title class_">a</span>().a(str.getBytes()));<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>new a().a(str.getBytes()) 先对输入进行某种处理<br>然后调用 native 方法 ncheck() 进行验证<br><code>ncheck(String str)</code>方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">native</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">ncheck</span><span class="hljs-params">(String str)</span>;<br></code></pre></td></tr></table></figure><p>声明了一个本地方法，实现在 libnative.so 中</p><p>查看 a 函数 ,可以分析推测出这是一个变种 base64<br><img src="/../images/5/jni1.png"></p><ol start="2"><li>分析 so 文件, ida 打开,找到<code>Java_com_a_easyjni_MainActivity_ncheck</code>,</li></ol><ul><li><code>v5 = (const char *)(*(int (__fastcall **)(int, int, _DWORD))(*(_DWORD *)a1 + 676))(a1, a3, 0);</code><br>这一行的等效代码为 <code>const char *input = (*env)-&gt;GetStringUTFChars(env, jstr, NULL);</code>,<br><code>+ 676</code>是 GetStringUTFChars 的偏移量</li><li>第一个循环 : 把输入字符串的前16位和后16位对调</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span> ( <span class="hljs-built_in">strlen</span>(input) == <span class="hljs-number">32</span> )<br>  &#123;<br>    <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i != <span class="hljs-number">16</span>; ++i )<br>    &#123;<br>      v7 = &amp;v12[i];   <br>      v12[i] = input[i + <span class="hljs-number">16</span>];<br>      v8 = input[i];<br>      v7[<span class="hljs-number">16</span>] = v8;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li>第二个循环 ： 把每一对字符前后对调</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp">v9 = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">do</span><br>    &#123;<br>    <br>      v13 = v12[v9];  <span class="hljs-comment">// v13 =v12[0] </span><br>      v12[v9] = v12[v9 + <span class="hljs-number">1</span>];  <span class="hljs-comment">//v12[0]=v12[1]</span><br>      v12[v9 + <span class="hljs-number">1</span>] = v13;  <span class="hljs-comment">//v12[1]=v13</span><br>      v9 += <span class="hljs-number">2</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><ol start="3"><li>解题脚本</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode</span>(<span class="hljs-params">base64_str</span>):<br>    base64_charset = <span class="hljs-string">&quot;i5jLW7S0GX6uf1cv3ny4q8es2Q+bdkYgKOIT/tAxUrFlVPzhmow9BHCMDpEaJRZN&quot;</span><br>    base64_bytes = [<span class="hljs-string">&#x27;&#123;:0&gt;6&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">bin</span>(base64_charset.index(s))).replace(<span class="hljs-string">&#x27;0b&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)) <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> base64_str <span class="hljs-keyword">if</span><br>                    s != <span class="hljs-string">&#x27;=&#x27;</span>]<br>    resp = <span class="hljs-built_in">bytearray</span>()<br>    nums = <span class="hljs-built_in">len</span>(base64_bytes) // <span class="hljs-number">4</span><br>    remain = <span class="hljs-built_in">len</span>(base64_bytes) % <span class="hljs-number">4</span><br>    integral_part = base64_bytes[<span class="hljs-number">0</span>:<span class="hljs-number">4</span> * nums]<br><br>    <span class="hljs-keyword">while</span> integral_part:<br>        tmp_unit = <span class="hljs-string">&#x27;&#x27;</span>.join(integral_part[<span class="hljs-number">0</span>:<span class="hljs-number">4</span>])<br>        tmp_unit = [<span class="hljs-built_in">int</span>(tmp_unit[x: x + <span class="hljs-number">8</span>], <span class="hljs-number">2</span>) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> [<span class="hljs-number">0</span>, <span class="hljs-number">8</span>, <span class="hljs-number">16</span>]]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> tmp_unit:<br>            resp.append(i)<br>        integral_part = integral_part[<span class="hljs-number">4</span>:]<br><br>    <span class="hljs-keyword">if</span> remain:<br>        remain_part = <span class="hljs-string">&#x27;&#x27;</span>.join(base64_bytes[nums * <span class="hljs-number">4</span>:])<br>        tmp_unit = [<span class="hljs-built_in">int</span>(remain_part[i * <span class="hljs-number">8</span>:(i + <span class="hljs-number">1</span>) * <span class="hljs-number">8</span>], <span class="hljs-number">2</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(remain - <span class="hljs-number">1</span>)]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> tmp_unit:<br>            resp.append(i)<br><br>    <span class="hljs-keyword">return</span> resp<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    flag_1 = <span class="hljs-string">&#x27;MbT3sQgX039i3g==AQOoMQFPskB1Bsc7&#x27;</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;加密后的字符串：&#x27;</span>,flag_1)<br>    <span class="hljs-comment"># 前后16位调换位置</span><br>    flag_2 = flag_1[<span class="hljs-built_in">len</span>(flag_1)//<span class="hljs-number">2</span>:] + flag_1[<span class="hljs-number">0</span>:<span class="hljs-built_in">len</span>(flag_1)//<span class="hljs-number">2</span>]<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;前后16位调换位置:&#x27;</span>,flag_2)<br>    flag_3 = <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(flag_2)//<span class="hljs-number">2</span>):<br>        flag_3 += flag_2[i*<span class="hljs-number">2</span>+<span class="hljs-number">1</span>] + flag_2[i*<span class="hljs-number">2</span>]<br>      <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;前后两位调换位置：&#x27;</span>,flag_3)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;解密后：&#x27;</span>,decode(flag_3))<br><br><span class="hljs-comment"># 加密后的字符串： MbT3sQgX039i3g==AQOoMQFPskB1Bsc7</span><br><span class="hljs-comment"># 前后16位调换位置: AQOoMQFPskB1Bsc7MbT3sQgX039i3g==</span><br><span class="hljs-comment"># 前后两位调换位置： QAoOQMPFks1BsB7cbM3TQsXg30i9g3==</span><br><span class="hljs-comment"># 解密后： bytearray(b&#x27;flag&#123;just_ANot#er_@p3&#125;&#x27;)</span><br></code></pre></td></tr></table></figure><blockquote><p>flag{just_ANot#er_@p3}</p></blockquote><h3 id="easyjava"><a href="#easyjava" class="headerlink" title="easyjava"></a>easyjava</h3><p><strong>算法逆向</strong></p><ol><li><code>jadx</code>打开,分析 MainActivity,主要逻辑大概是先提取中间部分(去除flag{}),然后对传入的每个字符调用a()方法,而a()方法中是先调用b.a(str)，再调用a.a(结果)<br><img src="/../images/5/ezjava1.png"></li><li>看 a 类和 b 类,主逻辑分别是将传入的整数返回对应的映射字符,以及传入的字符返回对应的映射整数</li><li>解密脚本</li></ol><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs py">cipherText = <span class="hljs-string">&#x27;wigwrkaugala&#x27;</span><br><br>aArray = [<span class="hljs-number">21</span>,<span class="hljs-number">4</span>,<span class="hljs-number">24</span>,<span class="hljs-number">25</span>,<span class="hljs-number">20</span>,<span class="hljs-number">5</span>,<span class="hljs-number">15</span>,<span class="hljs-number">9</span>,<span class="hljs-number">17</span>,<span class="hljs-number">6</span>,<span class="hljs-number">13</span>,<span class="hljs-number">3</span>,<span class="hljs-number">18</span>,<span class="hljs-number">12</span>,<span class="hljs-number">10</span>,<span class="hljs-number">19</span>,<span class="hljs-number">0</span>,<span class="hljs-number">22</span>,<span class="hljs-number">2</span>,<span class="hljs-number">11</span>,<span class="hljs-number">23</span>,<span class="hljs-number">1</span>,<span class="hljs-number">8</span>,<span class="hljs-number">7</span>,<span class="hljs-number">14</span>,<span class="hljs-number">16</span>]<br>aString = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span><br><br>bArray = [<span class="hljs-number">17</span>,<span class="hljs-number">23</span>,<span class="hljs-number">7</span>,<span class="hljs-number">22</span>,<span class="hljs-number">1</span>,<span class="hljs-number">16</span>,<span class="hljs-number">6</span>,<span class="hljs-number">9</span>,<span class="hljs-number">21</span>,<span class="hljs-number">0</span>,<span class="hljs-number">15</span>,<span class="hljs-number">5</span>,<span class="hljs-number">10</span>,<span class="hljs-number">18</span>,<span class="hljs-number">2</span>,<span class="hljs-number">24</span>,<span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">3</span>,<span class="hljs-number">14</span>,<span class="hljs-number">19</span>,<span class="hljs-number">12</span>,<span class="hljs-number">20</span>,<span class="hljs-number">13</span>,<span class="hljs-number">8</span>,<span class="hljs-number">25</span>]<br>bString = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">changeBArrayandString</span>():<br><span class="hljs-keyword">global</span> bString<br><span class="hljs-keyword">global</span> bArray<br>chArray = bArray[<span class="hljs-number">0</span>]<br>chString = bString[<span class="hljs-number">0</span>:<span class="hljs-number">1</span>]<br><span class="hljs-comment">#切片 [0:1] 保留原始类型（bytes），而索引 [0] 返回的是整数值</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(bArray) - <span class="hljs-number">1</span>):<br>bArray[i] = bArray[i + <span class="hljs-number">1</span>]<br>bArray[<span class="hljs-built_in">len</span>(bArray) - <span class="hljs-number">1</span>] = chArray<br>bString = bString[<span class="hljs-number">1</span>:]<br>bString += chString<br><span class="hljs-comment">#分别把bString和bArray中的每一个元素往前移动一位，首位元素放到末尾</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getBchar</span>(<span class="hljs-params">ch</span>):<br><span class="hljs-comment">#根据输入的整数ch获取对应的字符</span><br>v2 = bArray[ch]<br><span class="hljs-comment">#使用ch作为索引,获取bArray中的对应元素</span><br>arg = bString[v2]<br><span class="hljs-comment">#使用v2作为索引,获取bString中的对应元素</span><br>changeBArrayandString()<br><span class="hljs-keyword">return</span> arg<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getAint</span>(<span class="hljs-params">ch</span>):<br><span class="hljs-comment">#根据输入的字符ch获取对应的整数</span><br><span class="hljs-keyword">global</span> aString<br><span class="hljs-keyword">global</span> aArray<br>v1 = aString.index(ch)<br><span class="hljs-comment">#获取对应字符的索引</span><br>arg5 = aArray[v1]<br><span class="hljs-keyword">return</span> arg5<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;flag&#123;&#x27;</span>,end=<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> cipherText:<br><span class="hljs-comment">#先得到密文的索引</span><br>v0 = getAint(k)<br><span class="hljs-built_in">print</span>(getBchar(v0),end=<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;&#125;&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="android-2-0"><a href="#android-2-0" class="headerlink" title="android 2.0"></a>android 2.0</h3><p><strong>算法逆向</strong></p><ol><li>将apk文件放入<code>jadx</code>中,源代码里面找到<code>MainActiviy</code>,找到关键部分函数<br><img src="/../images/5/3.png" alt="mainactivity"></li></ol><ul><li>这段代码的功能：</li></ul><p>这段代码实现了一个简单的 Android 应用,它有一个按钮、一个文本框和一个显示结果的文本。<br>用户在文本框(EditText)里输入一个字符串(可能是密码),<br>然后点击按钮时,代码会调用一个名为 JNI.getResult(str) 的本地方法来判断密码是否正确</p><p>如果 JNI.getResult(str) 返回 0,界面会显示 “Wrong”<br>如果 JNI.getResult(str) 返回 1,界面会显示 “Great”</p><p>点进<code>JNI</code><br><img src="/../images/5/4.png" alt="mainactivity2"></p><p>关键部分是 JNI.getResult(str):<br>JNI.getResult(str) 是一个 本地方法，也就是说，它的实现并不在 Java 代码里，而是在 C&#x2F;C++ 代码中，并且通过 JNI(Java Native Interface)被调用。</p><p>这意味着需要分析那个本地的<code>.so文件</code>,找出这个getResult 方法的实现<br>2. 修改后缀,将.apk改成.zip,解压后找到.so文件,把<code>libNative.so</code>用<code>IDA</code>打开,找到几个关键函数<br>   <img src="/../images/5/6.png" alt=".so"><br>3. </p><ul><li>分析<code>First</code>函数<br>   <img src="/../images/5/7.png" alt="First"><br>   还原：先异或0x80，再除以2</li></ul>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">First</span>():<br>     enc=<span class="hljs-string">&quot;LN^dl&quot;</span><br>     dec=<span class="hljs-string">&quot;&quot;</span><br>     <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>):<br>         dec+=(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>((<span class="hljs-built_in">ord</span>(enc[i])^<span class="hljs-number">0x80</span>)/<span class="hljs-number">2</span>)))<br>     dec+=<span class="hljs-string">&#x27;l&#x27;</span><br>     <span class="hljs-built_in">print</span>(dec)<br>First()<br> <span class="hljs-comment">#fgorl</span><br></code></pre></td></tr></table></figure><ul><li>分析<code>Second</code>函数<br>  <img src="/../images/5/8.png" alt="second"><br>  直接异或还原</li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">second</span>():<br>  a5=[<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27; &#x27;</span>),<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;5&#x27;</span>),<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;-&#x27;</span>),<span class="hljs-number">0x16</span>,<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)]<br>  a1=[<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;L&#x27;</span>),<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;N&#x27;</span>),<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;^&#x27;</span>),<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;d&#x27;</span>),<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;l&#x27;</span>)]<br>  s1=<span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">4</span>):<br>      x=a5[i]^a1[i]<br>      s1+=<span class="hljs-built_in">chr</span>(x)<br>  s1+=<span class="hljs-string">&#x27;a&#x27;</span><br>  <span class="hljs-built_in">print</span>(s1)<br>second()<br><span class="hljs-comment">#l&#123;sra</span><br></code></pre></td></tr></table></figure><ul><li><code>Third</code>同理<br>  <img src="/../images/5/9.png" alt="third"><br>  如果v6&#x3D;a5就执行异或操作，所以v6&#x3D;a5</li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"> <span class="hljs-keyword">def</span> <span class="hljs-title function_">third</span>():<br>    a5 = [<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27; &#x27;</span>), <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;5&#x27;</span>), <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;-&#x27;</span>), <span class="hljs-number">0x16</span>, <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)]<br>    dec = [<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>), <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;F&#x27;</span>), <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;B&#x27;</span>), <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;o&#x27;</span>), <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;&#125;&#x27;</span>)]<br>    enc = <span class="hljs-string">&quot;&quot;</span>  <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>):<br>        x = a5[i] ^ dec[i]<br>        enc += <span class="hljs-built_in">chr</span>(x)<br>    enc += <span class="hljs-string">&#x27;&#125;&#x27;</span><br>    <span class="hljs-built_in">print</span>(enc)<br><br>third()<br><span class="hljs-comment">#asoy&#125;</span><br></code></pre></td></tr></table></figure><ul><li>由<code>Init</code>函数还原flag</li><li>Init函数是将输入的长度为15的字符串，每三个为一组，得到三组字符串（即刚刚解出的三组数据）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode</span>():<br>  s1=<span class="hljs-string">&quot;fgorl&quot;</span><br>  s2=<span class="hljs-string">&quot;l&#123;sra&quot;</span><br>  s3=<span class="hljs-string">&quot;asoy&#125;&quot;</span><br>  flag=<span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">5</span>):<br>     flag+=s1[i]+s2[i]+s3[i]<br>  <span class="hljs-built_in">print</span>(flag)<br>decode()<br><span class="hljs-comment">#flag&#123;sosorryla&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p>flag{sosorryla}</p></blockquote><h3 id="基础android"><a href="#基础android" class="headerlink" title="基础android"></a>基础android</h3><p><strong>用misc方法解题了</strong></p><ol><li>将apk文件放入<code>010editor</code>中，发现文件头是<strong>50 4B 03 04</strong>是zip文件,修改后缀,解压<br><img src="/../images/5/1.png" alt="解压"></li><li>在assets文件夹下发现<code>time_2.zip</code>,放入<code>010editor</code>，文件头是<strong>FF D8 FF</strong>,jpg文件,修改后缀,打开后是一张图片<img src="/../images/5/2.jpg" alt="flag"><blockquote><p>flag{08067-wlecome}</p></blockquote></li></ol><h3 id="APK逆向"><a href="#APK逆向" class="headerlink" title="APK逆向"></a>APK逆向</h3><ol><li>打开apk文件,用<code>jadx</code>打开，找到关键<code>MainActiivty</code>,<br>注意到<code>edit_sn</code>和<code>edit_userName</code>,找到<code>edit_userName = &quot;Tenshine&quot;</code>,</li><li>在<code>CheckSN</code>中看到代码逻辑<br><img src="/../images/5/10.png" alt="checksn"><br>md5加密,转为hex字符,for循环注意<strong>i+&#x3D;2</strong></li><li>解题脚本</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-built_in">str</span>=<span class="hljs-string">b&quot;Tenshine&quot;</span><br>str1=hashlib.md5(<span class="hljs-built_in">str</span>).hexdigest()<br>flag=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(str1)):<br>    <span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>):<br>        flag+=str1[i]<br><br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#bc72f242a6af3857a</span><br></code></pre></td></tr></table></figure><p>flag为</p><blockquote><p>bc72f242a6af3857a</p></blockquote><h3 id="APK逆向-2"><a href="#APK逆向-2" class="headerlink" title="APK逆向-2"></a>APK逆向-2</h3><ol><li>用 jadx 打开后发现<code>AndroidManifest</code>反编译失败,改 apk 后缀为 zip ,解压后把<code>AndroidManifest</code>放进 010editor ,发现有两处错误<br><img src="/../images/5/14.png"><br>第一处 ： Chunk Type : 4 bytes，始终为 0x001c0001<br>第二处 ： Unkown : 4 bytes,固定值，0x00000000</li><li>修改之后<br><img src="/../images/5/13.png"></li><li>把修改后的文件重新压缩,再改后缀 zip 为 apk ,重新放进jadx中打开可以看到<code>AndroidManifest</code>可以被成功反编译了，flag即出<blockquote><p>8d6efd232c63b7d2</p></blockquote></li></ol><h3 id="app1"><a href="#app1" class="headerlink" title="app1"></a>app1</h3><ol><li>用<code>jadx</code>打开，<code>MainAvtivity</code>里面发现有个<code>versionCode</code>和<code>versionName</code>,在<code>BuildConfig</code>里面看到关键信息<br><img src="/../images/5/11.png" alt="buildconfig"></li><li>将apk在模拟器上运行，会发现随便输入会弹出“再接再厉，加油~”，不输入会弹出“”年轻人不要耍小聪明噢”,结合代码梳理出逻辑：</li></ol><p>先检查 inputString 是否满足 versionCode.charAt(i) ^ versionName 规则<br>再检查长度是否相等<br>两者同时满足，显示 “恭喜开启闯关之门！”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">versionName=<span class="hljs-string">&quot;X&lt;cP[?PHNB&lt;P?aj&quot;</span><br>versionCode=<span class="hljs-number">15</span><br>flag=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(versionName)):<br>   flag+=<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(versionName[i])^versionCode)<br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#W3l_T0_GAM3_0ne</span><br></code></pre></td></tr></table></figure><p>flag为</p><blockquote><p>W3l_T0_GAM3_0ne</p></blockquote><h3 id="app3"><a href="#app3" class="headerlink" title="app3"></a>app3</h3><ol><li>下载附件后是一个 .ab 文件,这是安卓备份格式的文件,它分为加密和未加密两种类型,.ab 文件的前 24 个字节是类似文件头的东西，如果是加密的,在前 24 个字节中会有 AES-256 的标志,如果未加密,则在前 24 个字节中会有 none 的标志;对于没有加密的ab 文件,可以用以下指令解压<br><code>java -jar abp.jar unpack app3.ab app3.jar</code><br>解压后可以看到里面有一个 base.apk,还有两个数据库文件,用DB Browser打开发现是加密的,需要去找密钥</li><li>把app3.jar 直接用 jadx 打开,找到MainActivity,注意到在 OnCreate之后调用了函数a</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">a</span><span class="hljs-params">()</span> &#123;<br>        SQLiteDatabase.loadLibs(<span class="hljs-built_in">this</span>); <br>        <span class="hljs-built_in">this</span>.b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">a</span>(<span class="hljs-built_in">this</span>, <span class="hljs-string">&quot;Demo.db&quot;</span>, <span class="hljs-literal">null</span>, <span class="hljs-number">1</span>);<br>        <span class="hljs-type">ContentValues</span> <span class="hljs-variable">contentValues</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ContentValues</span>();<br>        contentValues.put(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;Stranger&quot;</span>);<br>        contentValues.put(<span class="hljs-string">&quot;password&quot;</span>, (Integer) <span class="hljs-number">123456</span>);<br>        com.example.yaphetshan.tencentwelcome.a.<span class="hljs-type">a</span> <span class="hljs-variable">aVar</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">com</span>.example.yaphetshan.tencentwelcome.a.a();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> aVar.a(contentValues.getAsString(<span class="hljs-string">&quot;name&quot;</span>), contentValues.getAsString(<span class="hljs-string">&quot;password&quot;</span>));<br>        <span class="hljs-built_in">this</span>.a = <span class="hljs-built_in">this</span>.b.getWritableDatabase(aVar.a(a + aVar.b(a, contentValues.getAsString(<span class="hljs-string">&quot;password&quot;</span>))).substring(<span class="hljs-number">0</span>, <span class="hljs-number">7</span>));<br>        <span class="hljs-built_in">this</span>.a.insert(<span class="hljs-string">&quot;TencentMicrMsg&quot;</span>, <span class="hljs-literal">null</span>, contentValues);<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li>加载SQLite数据库库文件</li><li>创建一个名为a的SQLiteOpenHelper子类实例</li><li>建ContentValues对象,用于存储要插入数据库的键值对,向contentValues添加键值对 name:Stranger,password:123456</li><li>实例化了一个com.example.yaphetshan.tencentwelcome.a.a类 </li><li>调用aVar的a方法,传入name和password,返回一个字符串结果。点进去注意到这一块代码：取传入的两个字符串的前四位作为返回值,即得到”Stra”和”1234”</li><li>先调用aVar.b方法处理 a 和 password,然后与 a 拼接,再用aVar.a方法处理拼接后的字符串,然后取前七个字符作为数据库的密钥<br>获取密钥的脚本如下：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.security.MessageDigest;<br><span class="hljs-keyword">import</span> java.util.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">b</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">b</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-built_in">super</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><br>    &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">varV2</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Stra1234&quot;</span>;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">varV1B</span> <span class="hljs-operator">=</span> a(varV2);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">varKey</span> <span class="hljs-operator">=</span> varV2 + varV1B + <span class="hljs-string">&quot;yaphetshan&quot;</span>;<br>        System.out.print(<span class="hljs-string">&quot;KEY = &quot;</span>);<br>        System.out.print(b(varKey).substring(<span class="hljs-number">0</span>,<span class="hljs-number">7</span>));<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String <span class="hljs-title function_">a</span><span class="hljs-params">(String arg9)</span> &#123;<br>        String v0_2;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">v0</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-type">char</span>[] v2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[]&#123;<span class="hljs-string">&#x27;0&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;3&#x27;</span>, <span class="hljs-string">&#x27;4&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;6&#x27;</span>, <span class="hljs-string">&#x27;7&#x27;</span>, <span class="hljs-string">&#x27;8&#x27;</span>, <span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;f&#x27;</span>&#125;;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">byte</span>[] v1 = arg9.getBytes();<br>            <span class="hljs-type">MessageDigest</span> <span class="hljs-variable">v3</span> <span class="hljs-operator">=</span> MessageDigest.getInstance(<span class="hljs-string">&quot;MD5&quot;</span>);<br>            v3.update(v1);<br>            <span class="hljs-type">byte</span>[] v3_1 = v3.digest();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">v4</span> <span class="hljs-operator">=</span> v3_1.length;<br>            <span class="hljs-type">char</span>[] v5 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[v4 * <span class="hljs-number">2</span>];<br>            <span class="hljs-type">int</span> <span class="hljs-variable">v1_1</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span>(v0 &lt; v4) &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">v6</span> <span class="hljs-operator">=</span> v3_1[v0];<br>                <span class="hljs-type">int</span> <span class="hljs-variable">v7</span> <span class="hljs-operator">=</span> v1_1 + <span class="hljs-number">1</span>;<br>                v5[v1_1] = v2[v6 &gt;&gt;&gt; <span class="hljs-number">4</span> &amp; <span class="hljs-number">15</span>];<br>                v1_1 = v7 + <span class="hljs-number">1</span>;<br>                v5[v7] = v2[v6 &amp; <span class="hljs-number">15</span>];<br>                ++v0;<br>            &#125;<br><br>            v0_2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(v5);<br>        &#125;<br>        <span class="hljs-keyword">catch</span>(Exception v0_1) &#123;<br>            v0_2 = <span class="hljs-literal">null</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> v0_2;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> String <span class="hljs-title function_">b</span><span class="hljs-params">(String arg9)</span> &#123;<br>        String v0_2;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">v0</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>        <span class="hljs-type">char</span>[] v2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[]&#123;<span class="hljs-string">&#x27;0&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&#x27;3&#x27;</span>, <span class="hljs-string">&#x27;4&#x27;</span>, <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&#x27;6&#x27;</span>, <span class="hljs-string">&#x27;7&#x27;</span>, <span class="hljs-string">&#x27;8&#x27;</span>, <span class="hljs-string">&#x27;9&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;f&#x27;</span>&#125;;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">byte</span>[] v1 = arg9.getBytes();<br>            <span class="hljs-type">MessageDigest</span> <span class="hljs-variable">v3</span> <span class="hljs-operator">=</span> MessageDigest.getInstance(<span class="hljs-string">&quot;SHA-1&quot;</span>);<br>            v3.update(v1);<br>            <span class="hljs-type">byte</span>[] v3_1 = v3.digest();<br>            <span class="hljs-type">int</span> <span class="hljs-variable">v4</span> <span class="hljs-operator">=</span> v3_1.length;<br>            <span class="hljs-type">char</span>[] v5 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[v4 * <span class="hljs-number">2</span>];<br>            <span class="hljs-type">int</span> <span class="hljs-variable">v1_1</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span>(v0 &lt; v4) &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">v6</span> <span class="hljs-operator">=</span> v3_1[v0];<br>                <span class="hljs-type">int</span> <span class="hljs-variable">v7</span> <span class="hljs-operator">=</span> v1_1 + <span class="hljs-number">1</span>;<br>                v5[v1_1] = v2[v6 &gt;&gt;&gt; <span class="hljs-number">4</span> &amp; <span class="hljs-number">15</span>];<br>                v1_1 = v7 + <span class="hljs-number">1</span>;<br>                v5[v7] = v2[v6 &amp; <span class="hljs-number">15</span>];<br>                ++v0;<br>            &#125;<br><br>            v0_2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(v5);<br>        &#125;<br>        <span class="hljs-keyword">catch</span>(Exception v0_1) &#123;<br>            v0_2 = <span class="hljs-literal">null</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> v0_2;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>运行得出 KEY &#x3D; ae56f99<br>3. 用这个密钥打开 Encryto.db ,浏览数据可以看到<code>GN0ZntIM2xsMF9Eb19ZMHVfTG92M19UZW5jM250IX0=</code>,base64解码,</p><blockquote><p>Tctf{H3ll0_Do_Y0u_Lov3_Tenc3nt!}</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OLLVM</title>
    <link href="/2025/03/27/ollvm/"/>
    <url>/2025/03/27/ollvm/</url>
    
    <content type="html"><![CDATA[<h3 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h3><ol><li><strong>LLVM</strong>是一个优秀的编译器框架,采用经典的三段式设计。前端可以使用不同的编译工具对代码文件做词法分析以形成抽象语法树AST,然后将分析好的代码转换成LLVM的中间表示IR(intermediate representation);<strong>Pass对IR做优化</strong>,后端(Backend)负责将优化好的IR解释成对应平台的机器码.</li><li>从字面看,OLLVM就是在LLVM的基础上增加了obfuscator（混淆）,LLVM的pass是用来优化分析的,将这些pass的功能改为混淆代码,就是<strong>OLLVM</strong>项目.</li></ol><h3 id="0x01-OLLVM的几种混淆方式"><a href="#0x01-OLLVM的几种混淆方式" class="headerlink" title="0x01 OLLVM的几种混淆方式"></a>0x01 OLLVM的几种混淆方式</h3><p><strong>1.指令替换（Instructions Substitution）</strong><br>用功能等效但更复杂的指令序列替换标准的二进制运算符（如加法、减法或布尔运算符）。当有多个等效指令序列时,随机选择一个。<br>如：</p><ul><li>加法：<code>a = -(-b + (-c))</code>  ,<code>r = rand (); a = b + r; a = a + c; a = a - r</code></li><li>AND：<code>a = b &amp; c =&gt; a = (b ^ ~c) &amp; b</code></li><li>XOR: <code>a = a ^ b =&gt; a = (~a &amp; b) | (a &amp; ~b)</code></li></ul><p><strong>2.虚假控制流(Bogus Control Flow)</strong><br>BCF模式通过加入包含不透明谓词的条件跳转（即跳转与否在运行之前就已经确定的跳转，但IDA无法分析）和不可达的基本块，来干扰IDA的控制流分析和F5反汇编</p><p><strong>3.控制流平坦化(Control Flow Flattening)</strong></p><ul><li>通过一个主分发器来控制程序基本块的执行流程</li><li>不改变源代码的功能前提下,将C或C++代码中的if、while、for、do等控制语句转换成switch分支语句</li><li>这种混淆方式增加了很多无用的case分支,但是没有改变原来的函数调用关系,基于这点，可以根据经验筛选出一些重点函数来hook,看看这些函数的参数都是啥,都返回了什么,以此来猜测这些函数的功能</li></ul><p><strong>4.字符串加密如Armariris字符串混淆</strong></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>Notes</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Android</tag>
      
      <tag>混淆</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>手动去除间接跳转--Binary Ninja</title>
    <link href="/2025/03/21/fixjump/"/>
    <url>/2025/03/21/fixjump/</url>
    
    <content type="html"><![CDATA[<h3 id="题目-ez-re-N1-Junior-2025-Reverse"><a href="#题目-ez-re-N1-Junior-2025-Reverse" class="headerlink" title="题目 ez_re (N1 Junior 2025 Reverse)"></a>题目 ez_re (N1 Junior 2025 Reverse)</h3><h4 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h4><p><strong>将文件直接用<code>Binary Ninja</code>打开之后会发现有很多分析不出来的<code>br跳转</code>,需要修一修</strong><br><img src="/../images/4/1.png"><br><img src="/../images/4/2.png"></p><h4 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h4><p><strong>找一个函数<code>my_strlen</code>,可以看到<code>mov     w11, #0  mov     w12, #0x1</code>初始化寄存器的值，下面的<code>cmp     w10, #0 csel    w10, w11, w12, ne  &#123;0x0&#125;  &#123;0x1&#125;</code>是关键，先将w10的值跟0x0比较，如果不等于0，则将w10的值设置为w11，否则设置为w12，这一步就导致了后面两种不同的情况的跳转，也就是我们需要手修的地方</strong><br><img src="/../images/4/4.png"><br><strong>看注释就行</strong><br><strong>note：</strong><br><strong>1.[5230]和[5238]在{data_5230}里面可以找到</strong><br><img src="/../images/4/5.png"><br><strong>2.w11存的值需要往上找对应的sp，先看到w8,然后再往上看需要找[x0]，因为在ARM架构中前 8 个参数通过寄存器 x0-x7 传递，即去找传入函数的第一个参数</strong><br><img src="/../images/4/6.png"><br><strong>这里用伪C看就能很清晰地看到<code>&amp;var_28</code>传入<code>my_strlen</code>,所以<code>w8=[x0]=0xd0deba7d</code></strong><br><img src="/../images/4/3.png"><br><strong>3.计算出来可以知道x8&#x3D;23C8 or 23D8,而23C8就是br x8指令下面一条地址，也正是以为这个跳转有两种情况所以bn分析不出来，需要手动修改</strong></p><h4 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h4><p><strong>修改<code>br x8</code>,右键-&gt;<code>Patch</code>-&gt;<code>Assemble</code>,这里需要追前面比较的地方<code>csel</code>后面是<code>ne</code>-&gt;not equel,所以改成<code>bne </code>,这里跳转的地址是相对地址，要用需要跳转的地址减去现在的地址即用23D8-23C4得到0x14，最终<code>bne 0x14</code>,最后<code>Reanalyze</code>一下就修好了</strong><br><img src="/../images/4/7.png"><br><strong>其他需要修的跳转基本上都是这个模式，先比较，有两种跳转情况，分析之后再去手修跳转</strong></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
      <tag>Android</tag>
      
      <tag>arm汇编</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hgame CTF 2025 Reverse部分题目复现</title>
    <link href="/2025/02/23/hgame/"/>
    <url>/2025/02/23/hgame/</url>
    
    <content type="html"><![CDATA[<h1 id="REverse"><a href="#REverse" class="headerlink" title="REverse"></a>REverse</h1><h2 id="Turtle"><a href="#Turtle" class="headerlink" title="Turtle"></a>Turtle</h2><ol><li>用<code>Exeinfo PE</code>打开发现是upx壳，而且题目也提示了需要脱壳，upx壳被魔改过了，用普通脱壳工具无效，于是手动脱壳。<br><img src="/../images/2/1.png" alt="Exeinfo PE"><blockquote><p>ps：有的魔改后的upx壳可以在010editor中改（把add0-&gt;upx0,add1-&gt;upx1……,本题为只读文件改不了） </p></blockquote></li><li>用xdbg64打开，oep脱壳定律找到大跳转，打断点<br><img src="/../images/2/2.png" alt="xdbg64"></li><li>F9运行，接着用<code>Scylla</code>Dump，oep为00000000004014E0,生成Turtle_dump.exe<br><img src="/../images/2/3.png" alt="Scylla Dump"><br><img src="/../images/2/4.png" alt="Turtle_dump.exe"><br>接着先后点击<code>IAT Autosearch</code>,<code>Get Imports</code>,<code>Fix Dump</code>,这里打开Turtle_dump.exe，之后打开文件夹就会看到新生成的Turtle_dump_SCY.exe文件了。<br><img src="/../images/2/5.png" alt="IAT Autosearch"><br><img src="/../images/2/6.png" alt="Get Imports"></li><li>将Turtle_dump_SCY.exe用IDA(64)打开，发现可以正常地看到函数了，找到main函数，F5反汇编一下<br><img src="/../images/2/7.png" alt="main"></li><li>点开函数后可以看出sub_401550是rc4 init，而sub_40163E（标准）和sub_40175A（魔改）是两个rc4</li><li>解出flag</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Cipher.ARC4 <span class="hljs-keyword">import</span> *  <br>enc_key = <span class="hljs-built_in">bytes</span>([<br> <span class="hljs-number">0xCD</span>,<br> <span class="hljs-number">0x8F</span>,<br> <span class="hljs-number">0x25</span>,<br> <span class="hljs-number">0x3D</span>,<br> <span class="hljs-number">0xE1</span>,<br> ])<br> <br>enc_key += <span class="hljs-string">b&#x27;QJ&#x27;</span><br> <br>cipher = new(<span class="hljs-string">b&#x27;yekyek&#x27;</span>)<br>dec_key = cipher.decrypt(enc_key)<br><span class="hljs-built_in">print</span>(dec_key)<br><span class="hljs-comment">#ecg4ab6</span><br> <br>enc_flag = [<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">40</span>)]<br>v5 = enc_flag<br>v5[<span class="hljs-number">0</span>] = -<span class="hljs-number">8</span><br>v5[<span class="hljs-number">1</span>] = -<span class="hljs-number">43</span><br>v5[<span class="hljs-number">2</span>] = <span class="hljs-number">98</span><br>v5[<span class="hljs-number">3</span>] = -<span class="hljs-number">49</span><br>v5[<span class="hljs-number">4</span>] = <span class="hljs-number">67</span><br>v5[<span class="hljs-number">5</span>] = -<span class="hljs-number">70</span><br>v5[<span class="hljs-number">6</span>] = -<span class="hljs-number">62</span><br>v5[<span class="hljs-number">7</span>] = <span class="hljs-number">35</span><br>v5[<span class="hljs-number">8</span>] = <span class="hljs-number">21</span><br>v5[<span class="hljs-number">9</span>] = <span class="hljs-number">74</span><br>v5[<span class="hljs-number">10</span>] = <span class="hljs-number">81</span><br>v5[<span class="hljs-number">11</span>] = <span class="hljs-number">16</span><br>v5[<span class="hljs-number">12</span>] = <span class="hljs-number">39</span><br>v5[<span class="hljs-number">13</span>] = <span class="hljs-number">16</span><br>v5[<span class="hljs-number">14</span>] = -<span class="hljs-number">79</span><br>v5[<span class="hljs-number">15</span>] = -<span class="hljs-number">49</span><br>v5[<span class="hljs-number">16</span>] = -<span class="hljs-number">60</span><br>v5[<span class="hljs-number">17</span>] = <span class="hljs-number">9</span><br>v5[<span class="hljs-number">18</span>] = -<span class="hljs-number">2</span><br>v5[<span class="hljs-number">19</span>] = -<span class="hljs-number">29</span><br>v5[<span class="hljs-number">20</span>] = -<span class="hljs-number">97</span><br>v5[<span class="hljs-number">21</span>] = <span class="hljs-number">73</span><br>v5[<span class="hljs-number">22</span>] = -<span class="hljs-number">121</span><br>v5[<span class="hljs-number">23</span>] = -<span class="hljs-number">22</span><br>v5[<span class="hljs-number">24</span>] = <span class="hljs-number">89</span><br>v5[<span class="hljs-number">25</span>] = -<span class="hljs-number">62</span><br>v5[<span class="hljs-number">26</span>] = <span class="hljs-number">7</span><br>v5[<span class="hljs-number">27</span>] = <span class="hljs-number">59</span><br>v5[<span class="hljs-number">28</span>] = -<span class="hljs-number">87</span><br>v5[<span class="hljs-number">29</span>] = <span class="hljs-number">17</span><br>v5[<span class="hljs-number">30</span>] = -<span class="hljs-number">63</span><br>v5[<span class="hljs-number">31</span>] = -<span class="hljs-number">68</span><br>v5[<span class="hljs-number">32</span>] = -<span class="hljs-number">3</span><br>v5[<span class="hljs-number">33</span>] = <span class="hljs-number">75</span><br>v5[<span class="hljs-number">34</span>] = <span class="hljs-number">87</span><br>v5[<span class="hljs-number">35</span>] = -<span class="hljs-number">60</span><br>v5[<span class="hljs-number">36</span>] = <span class="hljs-number">126</span><br>v5[<span class="hljs-number">37</span>] = -<span class="hljs-number">48</span><br>v5[<span class="hljs-number">38</span>] = -<span class="hljs-number">86</span><br>v5[<span class="hljs-number">39</span>] = <span class="hljs-number">10</span><br><br>add_bytes = new(<span class="hljs-string">b&#x27;ecg4ab6&#x27;</span>).encrypt(<span class="hljs-string">b&#x27;\x00&#x27;</span> * <span class="hljs-number">40</span>)<br> <br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">40</span>):<br>    flag += <span class="hljs-built_in">chr</span>((enc_flag[i] + add_bytes[i]) &amp; <span class="hljs-number">0xff</span>) <br><span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-comment">#output:</span><br><span class="hljs-comment">#b&#x27;ecg4ab6&#x27;</span><br><span class="hljs-comment">#hgame&#123;Y0u&#x27;r3_re4l1y_g3t_0Ut_of_th3_upX!&#125;</span><br></code></pre></td></tr></table></figure><p>flag: hgame{Y0u’r3_re4l1y_g3t_0Ut_of_th3_upX!}</p><h2 id="尊嘟假嘟"><a href="#尊嘟假嘟" class="headerlink" title="尊嘟假嘟"></a>尊嘟假嘟</h2><ol><li>在 MuMu模拟器 打开 apk，点击下方 尊嘟 假嘟 按钮的话就是让图片跳转，但其实你分别在两个界面点图片的能发现出现了”0.o”和”o.0” 的字符，并且是逐渐加长的</li><li>用 jadx 打开 apk，先看到有一个<code>DexCall</code>类<br><img src="/../images/2/zj2.png"><br>静态加载了两个本地库“zunjia”和“check”，注意到核心方法<code>callDexMethod</code>,动态加载<code>.dex</code>文件</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">public <span class="hljs-keyword">static</span> <span class="hljs-title class_">Object</span> <span class="hljs-title function_">callDexMethod</span>(<span class="hljs-title class_">Context</span> context, <span class="hljs-title class_">String</span> dexFileName, <span class="hljs-title class_">String</span> className, <span class="hljs-title class_">String</span> methodName, <span class="hljs-title class_">Object</span> input) <br></code></pre></td></tr></table></figure><p>最后又将 dex 文件删掉，这让我想到之前做的一道 <strong>Find My Dex</strong> 的题目，于是准备先用 frida hook 拿出这个被删掉的 dex 文件<br>frida-server连一下<br><img src="/../images/2/zj1.png"><br>hook 出 dex 文件的地址</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 确保 File 类正确加载</span><br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">File</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;java.io.File&quot;</span>);<br> <br>    <span class="hljs-comment">// 获取 DexCall 类</span><br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">DexCall</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.nobody.zunjia.DexCall&quot;</span>);<br> <br>    <span class="hljs-comment">// Hook callDexMethod 方法</span><br>    <span class="hljs-title class_">DexCall</span>.<span class="hljs-property">callDexMethod</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">context, dexFileName, className, methodName, input</span>) &#123;<br>        <span class="hljs-comment">// 获取 dexDir 的路径信息</span><br>        <span class="hljs-keyword">var</span> dexDir = <span class="hljs-title class_">File</span>.$new(context.<span class="hljs-title function_">getCacheDir</span>(), <span class="hljs-string">&quot;dex&quot;</span>);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;dexDir path: &quot;</span> + dexDir.<span class="hljs-title function_">getAbsolutePath</span>());<br> <br>        <span class="hljs-comment">// 打印 dexFileName 和其他参数信息</span><br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;dexFileName: &quot;</span> + dexFileName);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;className: &quot;</span> + className);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;methodName: &quot;</span> + methodName);<br> <br>        <span class="hljs-comment">// 调用原始的 callDexMethod 方法</span><br>        <span class="hljs-keyword">var</span> result = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">callDexMethod</span>(context, dexFileName, className, methodName, input);<br> <br>        <span class="hljs-comment">// 返回结果</span><br>        <span class="hljs-keyword">return</span> result;<br>    &#125;;<br>&#125;);<br></code></pre></td></tr></table></figure><p><img src="/../images/2/zj3.png"><br>注意这里需要点击图片才能触发<code>DexCall.callDexMethod</code>，点<code>callDexMethod</code> x 交叉引用跳转<br><img src="/../images/2/zj4.png"><br>点<code>setText</code> x 交叉引用跳转<br><img src="/../images/2/zj5.png"><br>而这个 JiaDu 是 ImageView</p><p>触发后<br><img src="/../images/2/zj6.png"><br>可以知道这个 dex 文件的地址是在<code>/data/user/0/com.nobody.zunjia/cache/dex</code><br>再用一个脚本把它hook出来</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-comment">// 获取 File 类</span><br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">File</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;java.io.File&quot;</span>);<br> <br>    <span class="hljs-comment">// 获取 DexCall 类</span><br>    <span class="hljs-keyword">var</span> <span class="hljs-title class_">DexCall</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.nobody.zunjia.DexCall&quot;</span>);<br> <br>    <span class="hljs-comment">// Hook copyDexFromAssets 方法</span><br>    <span class="hljs-title class_">DexCall</span>.<span class="hljs-property">copyDexFromAssets</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">context, dexFileName, dexDir</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[*] copyDexFromAssets called with dexFileName: &quot;</span> + dexFileName);<br> <br>        <span class="hljs-comment">// 调用原始方法获取 dex 文件</span><br>        <span class="hljs-keyword">var</span> dexFile = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">copyDexFromAssets</span>(context, dexFileName, dexDir);<br> <br>        <span class="hljs-comment">// 获取 dex 文件的路径</span><br>        <span class="hljs-keyword">var</span> dexFilePath = dexFile.<span class="hljs-title function_">getAbsolutePath</span>();<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[*] dex file saved to: &quot;</span> + dexFilePath);<br> <br>        <span class="hljs-comment">// 获取目标路径以保存 dex 文件（例如 `/data/data/com.nobody.zunjia/files/dex_copy`）</span><br>        <span class="hljs-keyword">var</span> savePath = <span class="hljs-string">&quot;/data/user/0/com.nobody.zunjia/cache/dex/dex_copy&quot;</span>;<br>        <span class="hljs-keyword">var</span> targetFile = <span class="hljs-title class_">File</span>.$new(savePath);<br> <br>        <span class="hljs-comment">// 使用 Java IO API 来拷贝文件</span><br>        <span class="hljs-keyword">var</span> inputStream = dexFile.$new(dexFilePath).<span class="hljs-title function_">getInputStream</span>();<br>        <span class="hljs-keyword">var</span> outputStream = targetFile.<span class="hljs-title function_">getOutputStream</span>();<br> <br>        <span class="hljs-keyword">var</span> buffer = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">array</span>(<span class="hljs-string">&#x27;byte&#x27;</span>, [<span class="hljs-number">1024</span>]);<br>        <span class="hljs-keyword">var</span> bytesRead;<br> <br>        <span class="hljs-keyword">while</span> ((bytesRead = inputStream.<span class="hljs-title function_">read</span>(buffer)) !== -<span class="hljs-number">1</span>) &#123;<br>            outputStream.<span class="hljs-title function_">write</span>(buffer, <span class="hljs-number">0</span>, bytesRead);<br>        &#125;<br> <br>        <span class="hljs-comment">// 关闭流</span><br>        inputStream.<span class="hljs-title function_">close</span>();<br>        outputStream.<span class="hljs-title function_">close</span>();<br> <br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;[*] dex file copied to: &quot;</span> + savePath);<br> <br>        <span class="hljs-comment">// 返回 dex 文件</span><br>        <span class="hljs-keyword">return</span> dexFile;<br>    &#125;;<br>&#125;);<br></code></pre></td></tr></table></figure><p><img src="/../images/2/zj7.png"><br>这个路径下没有权限不能直接进行提取，先把它转移到另外的文件夹，再用 adb pull 提取出来<br><img src="/../images/2/zj8.png"></p><p><img src="/../images/2/zj9.png"></p><p><img src="/../images/2/zj10.png"><br>可以看到这个路径下多了一个<code>zunjia.dex</code>文件，然后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> zunjia.dex /sdcard/Download<br></code></pre></td></tr></table></figure><p><img src="/../images/2/zj11.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adb pull /sdcard/Download/zunjia.dex D:\aaa\zunjia<br></code></pre></td></tr></table></figure><p><img src="/../images/2/zj12.png"><br>这样就把 dex 文件提取到本地了，然后在 jadx 中把这个文件也添加进去，可以看到多了的内容<br><img src="/../images/2/zj13.png"><br>base64换表</p><p>有个 toast 类，里面有一个 native 的check 函数<br><img src="/../images/2/zj14.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">check</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">mycontext</span>, (<span class="hljs-title class_">String</span>) <span class="hljs-title class_">DexCall</span>.<span class="hljs-title function_">callDexMethod</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">mycontext</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">mycontext</span>.<span class="hljs-title function_">getString</span>(R.<span class="hljs-property">string</span>.<span class="hljs-property">dex</span>), <span class="hljs-variable language_">this</span>.<span class="hljs-property">mycontext</span>.<span class="hljs-title function_">getString</span>(R.<span class="hljs-property">string</span>.<span class="hljs-property">classname</span>), <span class="hljs-variable language_">this</span>.<span class="hljs-property">mycontext</span>.<span class="hljs-title function_">getString</span>(R.<span class="hljs-property">string</span>.<span class="hljs-property">func1</span>), s));<br></code></pre></td></tr></table></figure><p>在<code>resources.arsc</code>的 res&#x2F;values&#x2F;strings.xml 中可以看到对应的字符串<br><img src="/../images/2/zj15.png"><br>所以这个其实是</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">(<span class="hljs-title class_">String</span>) <span class="hljs-title class_">DexCall</span>.<span class="hljs-title function_">callDexMethod</span>(<span class="hljs-string">&quot;zunjia.dex&quot;</span>，<span class="hljs-string">&quot;com.nobody.zundujiadu&quot;</span>, <span class="hljs-string">&quot;encode&quot;</span>, s);<br></code></pre></td></tr></table></figure><p>分析 check.so 文件<br><img src="/../images/2/zj16.png"><br>获取密文数据，ida 脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> idaapi <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">43</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(get_bytes(<span class="hljs-number">0x3958</span> + i, <span class="hljs-number">1</span>)[<span class="hljs-number">0</span>]), end=<span class="hljs-string">&quot;,&quot;</span>) <br><br><span class="hljs-comment">#output:0x7a,0xc7,0xc7,0x94,0x51,0x82,0xf5,0x99,0xc,0x30,0xc8,0xcd,0x97,0xfe,0x3d,0xd2,0xae,0xe,0xba,0x83,0x59,0x87,0xbb,0xc6,0x35,0xe1,0x8c,0x59,0xef,0xad,0xfa,0x94,0x74,0xd3,0x42,0x27,0x98,0x77,0x54,0x3b,0x46,0x5e,0x95,</span><br></code></pre></td></tr></table></figure><p>加密函数点进去看是rc4</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> product<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rc4</span>(<span class="hljs-params">key, data</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;RC4算法实现&quot;&quot;&quot;</span><br>    S = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>))<br>    j = <span class="hljs-number">0</span><br>    <span class="hljs-comment"># 密钥调度算法（KSA）</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        j = (j + S[i] + key[i % <span class="hljs-built_in">len</span>(key)]) % <span class="hljs-number">256</span><br>        S[i], S[j] = S[j], S[i]<br>    <span class="hljs-comment"># 伪随机生成算法（PRGA）</span><br>    i = j = <span class="hljs-number">0</span><br>    result = <span class="hljs-built_in">bytearray</span>()<br>    <span class="hljs-keyword">for</span> byte <span class="hljs-keyword">in</span> data:<br>        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span><br>        j = (j + S[i]) % <span class="hljs-number">256</span><br>        S[i], S[j] = S[j], S[i]<br>        k = S[(S[i] + S[j]) % <span class="hljs-number">256</span>]<br>        result.append(byte ^ k &amp;<span class="hljs-number">0xff</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">bytes</span>(result)<br> <br> <br><span class="hljs-comment"># 定义标准 Base64 字符表</span><br>standard_base64 = <span class="hljs-string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span><br> <br><span class="hljs-comment"># 定义自定义 Base64 字符表（换表）</span><br>custom_base64 = <span class="hljs-string">&quot;3GHIJKLMNOPQRSTUb=cdefghijklmnopWXYZ/12+406789VaqrstuvwxyzABCDEF5&quot;</span><br> <br><span class="hljs-comment"># 构建换表字典</span><br>encode_dict = &#123;standard_base64[i]: custom_base64[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(standard_base64))&#125;<br> <br><span class="hljs-comment"># 简化的加密函数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">custom_base64_encode</span>(<span class="hljs-params">data</span>):<br>    result = []<br>    <span class="hljs-comment"># 遍历字符串中的每个字符</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(data)):<br>        <span class="hljs-comment"># 将字符转换为 ASCII 值并与索引 i 进行异或</span><br>        result.append(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(data[i]) ^ i))<br>    <span class="hljs-comment"># 将结果列表转回字符串</span><br>    data = <span class="hljs-string">&#x27;&#x27;</span>.join(result)<br>    base64_encoded = base64.b64encode(data.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>.join(encode_dict.get(c, c) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> base64_encoded)<br> <br> <br><span class="hljs-comment"># 密文数据</span><br>encrypted_data = <span class="hljs-built_in">bytes</span>([<br>    <span class="hljs-number">0x7a</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xf5</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x0c</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0xc8</span>, <span class="hljs-number">0xcd</span>,<br>    <span class="hljs-number">0x97</span>, <span class="hljs-number">0xfe</span>, <span class="hljs-number">0x3d</span>, <span class="hljs-number">0xd2</span>, <span class="hljs-number">0xae</span>, <span class="hljs-number">0x0e</span>, <span class="hljs-number">0xba</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0xc6</span>,<br>    <span class="hljs-number">0x35</span>, <span class="hljs-number">0xe1</span>, <span class="hljs-number">0x8c</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0xef</span>, <span class="hljs-number">0xad</span>, <span class="hljs-number">0xfa</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xd3</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x27</span>,<br>    <span class="hljs-number">0x98</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x3b</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0x95</span><br>])<br> <br><span class="hljs-comment"># 生成所有可能的密码组合</span><br>segments = [<span class="hljs-string">&#x27;o.0&#x27;</span>, <span class="hljs-string">&#x27;0.o&#x27;</span>]<br> <br><span class="hljs-keyword">for</span> bits <span class="hljs-keyword">in</span> product([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>], repeat=<span class="hljs-number">12</span>):<br>    <span class="hljs-comment"># 构造密码</span><br>    password = <span class="hljs-string">&#x27;&#x27;</span>.join([segments[b] <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> bits])<br> <br>    <span class="hljs-comment"># 转换到标准Base64</span><br>    key=custom_base64_encode(password).encode()<br>    <span class="hljs-comment"># 使用密钥解密</span><br>    decrypted = rc4(key, encrypted_data)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;hgame&#x27;</span> <span class="hljs-keyword">in</span> decrypted:<br>        <span class="hljs-built_in">print</span>(decrypted)<br></code></pre></td></tr></table></figure><blockquote><p>b’hgame{4af153b9-ed3e-420b-978c-eeff72318b49}’</p></blockquote><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Reverse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>明文攻击</title>
    <link href="/2025/02/20/mingatk/"/>
    <url>/2025/02/20/mingatk/</url>
    
    <content type="html"><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>没有通常会给的已知文件，只给了一个压缩包，里面是被加密的一张png图片</p><h4 id="了解一下-明文攻击"><a href="#了解一下-明文攻击" class="headerlink" title="了解一下 明文攻击"></a>了解一下 <code>明文攻击</code></h4><p> 符合哪些特征可以使用明文攻击</p><ol><li>Zip文件</li><li>文件均为ZipCrypto加密</li><li>已知加密文件的部分明文（至少连续的8字节&#x2F;12字节）</li></ol><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><ol><li>获取png文件头,得到png_hearder文件</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 十六进制字符串</span><br>hex_string = <span class="hljs-string">&quot;89504E470D0A1A0A0000000D49484452&quot;</span><br><br><span class="hljs-comment"># 将十六进制字符串转换为字节数据</span><br>binary_data = <span class="hljs-built_in">bytes</span>.fromhex(hex_string)<br><br><span class="hljs-comment"># 将字节数据写入文件</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;png_header&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(binary_data)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;文件 &#x27;png_header&#x27; 已成功创建！&quot;</span>)<br></code></pre></td></tr></table></figure><ol start="2"><li>使用工具<code>bkcrack</code>得到密钥</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">PS D:\CTF\tool\bkcrack&gt; .\bkcrack<span class="hljs-selector-class">.exe</span> -C bkcrack_advanced<span class="hljs-selector-class">.zip</span> -c <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.png</span> -<span class="hljs-selector-tag">p</span> png_header<br></code></pre></td></tr></table></figure><p><strong>Keys</strong>: b53dcc5c 19c8786e f0298d20</p><ol start="3"><li>利用密钥破解文件</li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">PS D:\CTF\tool\<span class="hljs-keyword">bkcrack&gt; </span>.\<span class="hljs-keyword">bkcrack.exe </span>-C <span class="hljs-keyword">bkcrack_advanced.zip </span>-c a.png -k <span class="hljs-keyword">b53dcc5c </span><span class="hljs-number">19</span>c8786e f0298d20 -d <span class="hljs-number">1</span>.png<br></code></pre></td></tr></table></figure><p>得到解密后的文件<code>1.png</code></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Misc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/02/18/hello-world/"/>
    <url>/2025/02/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p><em>Welcome to my blog.</em><br><em>I’m  <strong>Eleven</strong>.</em><br><em>So nice to meet you.</em></p><hr><p> <strong>“And it’s fine to fake it ‘til you make it</strong><br> <strong>‘Til you do,’til it’s true.”</strong></p><p><em><strong>It’s better to burn out than to fade away.</strong></em></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
